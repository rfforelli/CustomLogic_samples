-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pix_threshold_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    VideoIn_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    VideoIn_TVALID : IN STD_LOGIC;
    VideoIn_TREADY : OUT STD_LOGIC;
    VideoIn_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    VideoOut_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    VideoOut_TVALID : OUT STD_LOGIC;
    VideoOut_TREADY : IN STD_LOGIC;
    VideoOut_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
    threshold_value_V : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of pix_threshold_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal DataBuf_Data_V : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal VideoIn_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_4_fu_242_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_23_fu_769_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal VideoOut_TDATA_blk_n : STD_LOGIC;
    signal tmp_18_fu_250_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_19_fu_258_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_262_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal ap_predicate_op24_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal tmp_21_fu_270_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_814 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op34_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal p_Val2_3_reg_159 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_DataBuf_User_V_3_phi_fu_214_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal inFrame_reg_184 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_reg_172 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_5_reg_198 : STD_LOGIC_VECTOR (3 downto 0);
    signal DataBuf_User_V_3_reg_210 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_Data_V_2_fu_764_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_22_fu_278_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_1_fu_301_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult1_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_2_fu_330_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult2_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_3_fu_359_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult3_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_4_fu_388_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult4_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_5_fu_417_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult5_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev5_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_6_fu_446_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult6_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev6_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_7_fu_475_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult7_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev7_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_8_fu_504_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult8_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev8_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_9_fu_533_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult9_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev9_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_s_fu_562_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult10_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev10_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_10_fu_591_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult11_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev11_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_11_fu_620_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult12_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev12_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_12_fu_649_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult13_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev13_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_13_fu_678_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult14_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev14_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_14_fu_707_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult15_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev15_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_699_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_670_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_641_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_612_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_583_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_554_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_525_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_496_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_467_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_438_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_409_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_380_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_351_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_322_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_293_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_728_p17 : STD_LOGIC_VECTOR (120 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_condition_92 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    DataBuf_User_V_3_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_io) and (tmp_21_fu_270_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                DataBuf_User_V_3_reg_210 <= p_Val2_s_reg_172;
            elsif (((tmp_21_reg_814 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                DataBuf_User_V_3_reg_210 <= tmp_User_V_5_reg_198;
            end if; 
        end if;
    end process;

    inFrame_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_92)) then
                if ((tmp_4_fu_242_p3 = ap_const_lv1_0)) then 
                    inFrame_reg_184 <= ap_const_lv1_1;
                elsif ((tmp_4_fu_242_p3 = ap_const_lv1_1)) then 
                    inFrame_reg_184 <= ap_const_lv1_0;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_3_reg_159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((inFrame_reg_184 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                p_Val2_3_reg_159 <= ap_phi_mux_DataBuf_User_V_3_phi_fu_214_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_Val2_3_reg_159 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_92)) then
                if ((tmp_4_fu_242_p3 = ap_const_lv1_0)) then 
                    p_Val2_s_reg_172 <= VideoIn_TUSER;
                elsif ((tmp_4_fu_242_p3 = ap_const_lv1_1)) then 
                    p_Val2_s_reg_172 <= p_Val2_3_reg_159;
                end if;
            end if; 
        end if;
    end process;

    tmp_User_V_5_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_io) and (tmp_21_fu_270_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                tmp_User_V_5_reg_198 <= p_Val2_s_reg_172;
            elsif ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                tmp_User_V_5_reg_198 <= VideoIn_TUSER;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((ap_const_boolean_1 = ap_block_state2_io) or ((tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then
                DataBuf_Data_V <= VideoIn_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_21_reg_814 <= p_Val2_s_reg_172(1 downto 1);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_4_fu_242_p3, ap_CS_fsm_state4, tmp_23_fu_769_p3, ap_CS_fsm_state3, ap_block_state2_io, tmp_21_fu_270_p3, ap_block_state3_io, ap_CS_fsm_state5, inFrame_reg_184)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_io) and (tmp_21_fu_270_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_const_boolean_0 = ap_block_state3_io) and (tmp_21_fu_270_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_23_fu_769_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((inFrame_reg_184 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    VideoIn_TDATA_blk_n_assign_proc : process(VideoIn_TVALID, ap_CS_fsm_state2, tmp_4_fu_242_p3, ap_CS_fsm_state4, tmp_23_fu_769_p3)
    begin
        if ((((tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            VideoIn_TDATA_blk_n <= VideoIn_TVALID;
        else 
            VideoIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    VideoIn_TREADY_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_4_fu_242_p3, ap_CS_fsm_state4, tmp_23_fu_769_p3, ap_block_state2_io)
    begin
        if (((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((ap_const_boolean_1 = ap_block_state2_io) or ((tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            VideoIn_TREADY <= ap_const_logic_1;
        else 
            VideoIn_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    VideoOut_TDATA_assign_proc : process(VideoIn_TVALID, DataBuf_Data_V, ap_CS_fsm_state2, tmp_4_fu_242_p3, ap_CS_fsm_state4, tmp_23_fu_769_p3, ap_CS_fsm_state3, ap_predicate_op24_write_state2, ap_predicate_op34_write_state3, tmp_Data_V_2_fu_764_p1)
    begin
        if ((not(((tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            VideoOut_TDATA <= tmp_Data_V_2_fu_764_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_predicate_op34_write_state3 = ap_const_boolean_1))) then 
            VideoOut_TDATA <= DataBuf_Data_V;
        elsif ((not(((tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op24_write_state2 = ap_const_boolean_1))) then 
            VideoOut_TDATA <= ap_const_lv128_lc_1;
        else 
            VideoOut_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    VideoOut_TDATA_blk_n_assign_proc : process(VideoOut_TREADY, ap_CS_fsm_state2, tmp_4_fu_242_p3, ap_CS_fsm_state4, tmp_18_fu_250_p3, ap_CS_fsm_state3, tmp_19_fu_258_p1, tmp_20_fu_262_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((tmp_19_fu_258_p1 = ap_const_lv1_1) and (tmp_20_fu_262_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_18_fu_250_p3 = ap_const_lv1_0) and (tmp_4_fu_242_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            VideoOut_TDATA_blk_n <= VideoOut_TREADY;
        else 
            VideoOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    VideoOut_TUSER_assign_proc : process(VideoIn_TVALID, ap_CS_fsm_state2, tmp_4_fu_242_p3, ap_CS_fsm_state4, tmp_23_fu_769_p3, ap_CS_fsm_state3, ap_predicate_op24_write_state2, ap_predicate_op34_write_state3, p_Val2_3_reg_159, p_Val2_s_reg_172, tmp_User_V_5_reg_198)
    begin
        if ((not(((tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            VideoOut_TUSER <= tmp_User_V_5_reg_198;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_predicate_op34_write_state3 = ap_const_boolean_1))) then 
            VideoOut_TUSER <= p_Val2_s_reg_172;
        elsif ((not(((tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op24_write_state2 = ap_const_boolean_1))) then 
            VideoOut_TUSER <= p_Val2_3_reg_159;
        else 
            VideoOut_TUSER <= "XXXX";
        end if; 
    end process;


    VideoOut_TVALID_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_4_fu_242_p3, ap_CS_fsm_state4, tmp_23_fu_769_p3, ap_CS_fsm_state3, ap_predicate_op24_write_state2, ap_block_state2_io, ap_predicate_op34_write_state3, ap_block_state3_io)
    begin
        if ((((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_predicate_op34_write_state3 = ap_const_boolean_1)) or (not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((ap_const_boolean_1 = ap_block_state2_io) or ((tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op24_write_state2 = ap_const_boolean_1)))) then 
            VideoOut_TVALID <= ap_const_logic_1;
        else 
            VideoOut_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_block_state2_assign_proc : process(VideoIn_TVALID, tmp_4_fu_242_p3)
    begin
                ap_block_state2 <= ((tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID));
    end process;


    ap_block_state2_io_assign_proc : process(VideoOut_TREADY, ap_predicate_op24_write_state2)
    begin
                ap_block_state2_io <= ((ap_const_logic_0 = VideoOut_TREADY) and (ap_predicate_op24_write_state2 = ap_const_boolean_1));
    end process;


    ap_block_state3_io_assign_proc : process(VideoOut_TREADY, ap_predicate_op34_write_state3)
    begin
                ap_block_state3_io <= ((ap_const_logic_0 = VideoOut_TREADY) and (ap_predicate_op34_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_state4_assign_proc : process(VideoIn_TVALID, tmp_23_fu_769_p3)
    begin
                ap_block_state4 <= ((tmp_23_fu_769_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID));
    end process;


    ap_condition_92_assign_proc : process(VideoIn_TVALID, ap_CS_fsm_state2, tmp_4_fu_242_p3, ap_block_state2_io)
    begin
                ap_condition_92 <= (not(((ap_const_boolean_1 = ap_block_state2_io) or ((tmp_4_fu_242_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state2));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5, inFrame_reg_184)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((inFrame_reg_184 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_DataBuf_User_V_3_phi_fu_214_p4_assign_proc : process(tmp_21_reg_814, ap_CS_fsm_state5, tmp_User_V_5_reg_198, DataBuf_User_V_3_reg_210)
    begin
        if (((tmp_21_reg_814 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_DataBuf_User_V_3_phi_fu_214_p4 <= tmp_User_V_5_reg_198;
        else 
            ap_phi_mux_DataBuf_User_V_3_phi_fu_214_p4 <= DataBuf_User_V_3_reg_210;
        end if; 
    end process;


    ap_predicate_op24_write_state2_assign_proc : process(tmp_4_fu_242_p3, tmp_18_fu_250_p3)
    begin
                ap_predicate_op24_write_state2 <= ((tmp_18_fu_250_p3 = ap_const_lv1_0) and (tmp_4_fu_242_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op34_write_state3_assign_proc : process(tmp_19_fu_258_p1, tmp_20_fu_262_p3)
    begin
                ap_predicate_op34_write_state3 <= ((tmp_19_fu_258_p1 = ap_const_lv1_1) and (tmp_20_fu_262_p3 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5, inFrame_reg_184)
    begin
        if (((inFrame_reg_184 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_5_10_fu_591_p4 <= DataBuf_Data_V(95 downto 88);
    p_Result_5_11_fu_620_p4 <= DataBuf_Data_V(103 downto 96);
    p_Result_5_12_fu_649_p4 <= DataBuf_Data_V(111 downto 104);
    p_Result_5_13_fu_678_p4 <= DataBuf_Data_V(119 downto 112);
    p_Result_5_14_fu_707_p4 <= DataBuf_Data_V(127 downto 120);
    p_Result_5_1_fu_301_p4 <= DataBuf_Data_V(15 downto 8);
    p_Result_5_2_fu_330_p4 <= DataBuf_Data_V(23 downto 16);
    p_Result_5_3_fu_359_p4 <= DataBuf_Data_V(31 downto 24);
    p_Result_5_4_fu_388_p4 <= DataBuf_Data_V(39 downto 32);
    p_Result_5_5_fu_417_p4 <= DataBuf_Data_V(47 downto 40);
    p_Result_5_6_fu_446_p4 <= DataBuf_Data_V(55 downto 48);
    p_Result_5_7_fu_475_p4 <= DataBuf_Data_V(63 downto 56);
    p_Result_5_8_fu_504_p4 <= DataBuf_Data_V(71 downto 64);
    p_Result_5_9_fu_533_p4 <= DataBuf_Data_V(79 downto 72);
    p_Result_5_s_fu_562_p4 <= DataBuf_Data_V(87 downto 80);
    rev10_fu_577_p2 <= (ult10_fu_572_p2 xor ap_const_lv1_1);
    rev11_fu_606_p2 <= (ult11_fu_601_p2 xor ap_const_lv1_1);
    rev12_fu_635_p2 <= (ult12_fu_630_p2 xor ap_const_lv1_1);
    rev13_fu_664_p2 <= (ult13_fu_659_p2 xor ap_const_lv1_1);
    rev14_fu_693_p2 <= (ult14_fu_688_p2 xor ap_const_lv1_1);
    rev15_fu_722_p2 <= (ult15_fu_717_p2 xor ap_const_lv1_1);
    rev1_fu_316_p2 <= (ult1_fu_311_p2 xor ap_const_lv1_1);
    rev2_fu_345_p2 <= (ult2_fu_340_p2 xor ap_const_lv1_1);
    rev3_fu_374_p2 <= (ult3_fu_369_p2 xor ap_const_lv1_1);
    rev4_fu_403_p2 <= (ult4_fu_398_p2 xor ap_const_lv1_1);
    rev5_fu_432_p2 <= (ult5_fu_427_p2 xor ap_const_lv1_1);
    rev6_fu_461_p2 <= (ult6_fu_456_p2 xor ap_const_lv1_1);
    rev7_fu_490_p2 <= (ult7_fu_485_p2 xor ap_const_lv1_1);
    rev8_fu_519_p2 <= (ult8_fu_514_p2 xor ap_const_lv1_1);
    rev9_fu_548_p2 <= (ult9_fu_543_p2 xor ap_const_lv1_1);
    rev_fu_287_p2 <= (ult_fu_282_p2 xor ap_const_lv1_1);
    tmp_10_fu_525_p3 <= 
        ap_const_lv8_FF when (rev8_fu_519_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_11_fu_554_p3 <= 
        ap_const_lv8_FF when (rev9_fu_548_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_12_fu_583_p3 <= 
        ap_const_lv8_FF when (rev10_fu_577_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_13_fu_612_p3 <= 
        ap_const_lv8_FF when (rev11_fu_606_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_14_fu_641_p3 <= 
        ap_const_lv8_FF when (rev12_fu_635_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_15_fu_670_p3 <= 
        ap_const_lv8_FF when (rev13_fu_664_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_16_fu_699_p3 <= 
        ap_const_lv8_FF when (rev14_fu_693_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_17_fu_728_p17 <= (((((((((((((((rev15_fu_722_p2 & tmp_16_fu_699_p3) & tmp_15_fu_670_p3) & tmp_14_fu_641_p3) & tmp_13_fu_612_p3) & tmp_12_fu_583_p3) & tmp_11_fu_554_p3) & tmp_10_fu_525_p3) & tmp_s_fu_496_p3) & tmp_9_fu_467_p3) & tmp_8_fu_438_p3) & tmp_7_fu_409_p3) & tmp_6_fu_380_p3) & tmp_5_fu_351_p3) & tmp_3_fu_322_p3) & tmp_2_fu_293_p3);
    tmp_18_fu_250_p3 <= p_Val2_3_reg_159(2 downto 2);
    tmp_19_fu_258_p1 <= p_Val2_s_reg_172(1 - 1 downto 0);
    tmp_20_fu_262_p3 <= p_Val2_s_reg_172(1 downto 1);
    tmp_21_fu_270_p3 <= p_Val2_s_reg_172(1 downto 1);
    tmp_22_fu_278_p1 <= DataBuf_Data_V(8 - 1 downto 0);
    tmp_23_fu_769_p3 <= tmp_User_V_5_reg_198(2 downto 2);
    tmp_2_fu_293_p3 <= 
        ap_const_lv8_FF when (rev_fu_287_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_3_fu_322_p3 <= 
        ap_const_lv8_FF when (rev1_fu_316_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_4_fu_242_p3 <= p_Val2_3_reg_159(3 downto 3);
    tmp_5_fu_351_p3 <= 
        ap_const_lv8_FF when (rev2_fu_345_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_6_fu_380_p3 <= 
        ap_const_lv8_FF when (rev3_fu_374_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_7_fu_409_p3 <= 
        ap_const_lv8_FF when (rev4_fu_403_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_8_fu_438_p3 <= 
        ap_const_lv8_FF when (rev5_fu_432_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_9_fu_467_p3 <= 
        ap_const_lv8_FF when (rev6_fu_461_p2(0) = '1') else 
        ap_const_lv8_0;
        tmp_Data_V_2_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_17_fu_728_p17),128));

    tmp_s_fu_496_p3 <= 
        ap_const_lv8_FF when (rev7_fu_490_p2(0) = '1') else 
        ap_const_lv8_0;
    ult10_fu_572_p2 <= "1" when (unsigned(p_Result_5_s_fu_562_p4) < unsigned(threshold_value_V)) else "0";
    ult11_fu_601_p2 <= "1" when (unsigned(p_Result_5_10_fu_591_p4) < unsigned(threshold_value_V)) else "0";
    ult12_fu_630_p2 <= "1" when (unsigned(p_Result_5_11_fu_620_p4) < unsigned(threshold_value_V)) else "0";
    ult13_fu_659_p2 <= "1" when (unsigned(p_Result_5_12_fu_649_p4) < unsigned(threshold_value_V)) else "0";
    ult14_fu_688_p2 <= "1" when (unsigned(p_Result_5_13_fu_678_p4) < unsigned(threshold_value_V)) else "0";
    ult15_fu_717_p2 <= "1" when (unsigned(p_Result_5_14_fu_707_p4) < unsigned(threshold_value_V)) else "0";
    ult1_fu_311_p2 <= "1" when (unsigned(p_Result_5_1_fu_301_p4) < unsigned(threshold_value_V)) else "0";
    ult2_fu_340_p2 <= "1" when (unsigned(p_Result_5_2_fu_330_p4) < unsigned(threshold_value_V)) else "0";
    ult3_fu_369_p2 <= "1" when (unsigned(p_Result_5_3_fu_359_p4) < unsigned(threshold_value_V)) else "0";
    ult4_fu_398_p2 <= "1" when (unsigned(p_Result_5_4_fu_388_p4) < unsigned(threshold_value_V)) else "0";
    ult5_fu_427_p2 <= "1" when (unsigned(p_Result_5_5_fu_417_p4) < unsigned(threshold_value_V)) else "0";
    ult6_fu_456_p2 <= "1" when (unsigned(p_Result_5_6_fu_446_p4) < unsigned(threshold_value_V)) else "0";
    ult7_fu_485_p2 <= "1" when (unsigned(p_Result_5_7_fu_475_p4) < unsigned(threshold_value_V)) else "0";
    ult8_fu_514_p2 <= "1" when (unsigned(p_Result_5_8_fu_504_p4) < unsigned(threshold_value_V)) else "0";
    ult9_fu_543_p2 <= "1" when (unsigned(p_Result_5_9_fu_533_p4) < unsigned(threshold_value_V)) else "0";
    ult_fu_282_p2 <= "1" when (unsigned(tmp_22_fu_278_p1) < unsigned(threshold_value_V)) else "0";
end behav;
