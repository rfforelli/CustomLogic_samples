// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pix_subtract_HH_
#define _pix_subtract_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pix_subtract_buf_V_0.h"

namespace ap_rtl {

struct pix_subtract : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<128> > StreamIn_V_Data_V_dout;
    sc_in< sc_logic > StreamIn_V_Data_V_empty_n;
    sc_out< sc_logic > StreamIn_V_Data_V_read;
    sc_in< sc_lv<4> > StreamIn_V_User_V_dout;
    sc_in< sc_logic > StreamIn_V_User_V_empty_n;
    sc_out< sc_logic > StreamIn_V_User_V_read;
    sc_out< sc_lv<128> > StreamOut_V_Data_V_din;
    sc_in< sc_logic > StreamOut_V_Data_V_full_n;
    sc_out< sc_logic > StreamOut_V_Data_V_write;
    sc_out< sc_lv<4> > StreamOut_V_User_V_din;
    sc_in< sc_logic > StreamOut_V_User_V_full_n;
    sc_out< sc_logic > StreamOut_V_User_V_write;


    // Module declarations
    pix_subtract(sc_module_name name);
    SC_HAS_PROCESS(pix_subtract);

    ~pix_subtract();

    sc_trace_file* mVcdFile;

    pix_subtract_buf_V_0* buf_V_0_U;
    pix_subtract_buf_V_0* buf_V_1_U;
    pix_subtract_buf_V_0* buf_V_2_U;
    pix_subtract_buf_V_0* buf_V_3_U;
    pix_subtract_buf_V_0* buf_V_4_U;
    pix_subtract_buf_V_0* buf_V_5_U;
    pix_subtract_buf_V_0* buf_V_6_U;
    pix_subtract_buf_V_0* buf_V_7_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<1> > arbitrator;
    sc_signal< sc_lv<14> > buf_V_0_address0;
    sc_signal< sc_logic > buf_V_0_ce0;
    sc_signal< sc_lv<12> > buf_V_0_q0;
    sc_signal< sc_lv<14> > buf_V_0_address1;
    sc_signal< sc_logic > buf_V_0_ce1;
    sc_signal< sc_logic > buf_V_0_we1;
    sc_signal< sc_lv<12> > buf_V_0_d1;
    sc_signal< sc_lv<14> > buf_V_1_address0;
    sc_signal< sc_logic > buf_V_1_ce0;
    sc_signal< sc_lv<12> > buf_V_1_q0;
    sc_signal< sc_lv<14> > buf_V_1_address1;
    sc_signal< sc_logic > buf_V_1_ce1;
    sc_signal< sc_logic > buf_V_1_we1;
    sc_signal< sc_lv<12> > buf_V_1_d1;
    sc_signal< sc_lv<14> > buf_V_2_address0;
    sc_signal< sc_logic > buf_V_2_ce0;
    sc_signal< sc_lv<12> > buf_V_2_q0;
    sc_signal< sc_lv<14> > buf_V_2_address1;
    sc_signal< sc_logic > buf_V_2_ce1;
    sc_signal< sc_logic > buf_V_2_we1;
    sc_signal< sc_lv<12> > buf_V_2_d1;
    sc_signal< sc_lv<14> > buf_V_3_address0;
    sc_signal< sc_logic > buf_V_3_ce0;
    sc_signal< sc_lv<12> > buf_V_3_q0;
    sc_signal< sc_lv<14> > buf_V_3_address1;
    sc_signal< sc_logic > buf_V_3_ce1;
    sc_signal< sc_logic > buf_V_3_we1;
    sc_signal< sc_lv<12> > buf_V_3_d1;
    sc_signal< sc_lv<14> > buf_V_4_address0;
    sc_signal< sc_logic > buf_V_4_ce0;
    sc_signal< sc_lv<12> > buf_V_4_q0;
    sc_signal< sc_lv<14> > buf_V_4_address1;
    sc_signal< sc_logic > buf_V_4_ce1;
    sc_signal< sc_logic > buf_V_4_we1;
    sc_signal< sc_lv<12> > buf_V_4_d1;
    sc_signal< sc_lv<14> > buf_V_5_address0;
    sc_signal< sc_logic > buf_V_5_ce0;
    sc_signal< sc_lv<12> > buf_V_5_q0;
    sc_signal< sc_lv<14> > buf_V_5_address1;
    sc_signal< sc_logic > buf_V_5_ce1;
    sc_signal< sc_logic > buf_V_5_we1;
    sc_signal< sc_lv<12> > buf_V_5_d1;
    sc_signal< sc_lv<14> > buf_V_6_address0;
    sc_signal< sc_logic > buf_V_6_ce0;
    sc_signal< sc_lv<12> > buf_V_6_q0;
    sc_signal< sc_lv<14> > buf_V_6_address1;
    sc_signal< sc_logic > buf_V_6_ce1;
    sc_signal< sc_logic > buf_V_6_we1;
    sc_signal< sc_lv<12> > buf_V_6_d1;
    sc_signal< sc_lv<14> > buf_V_7_address0;
    sc_signal< sc_logic > buf_V_7_ce0;
    sc_signal< sc_lv<12> > buf_V_7_q0;
    sc_signal< sc_lv<14> > buf_V_7_address1;
    sc_signal< sc_logic > buf_V_7_ce1;
    sc_signal< sc_logic > buf_V_7_we1;
    sc_signal< sc_lv<12> > buf_V_7_d1;
    sc_signal< sc_logic > StreamIn_V_Data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_s_reg_918;
    sc_signal< sc_logic > StreamIn_V_User_V_blk_n;
    sc_signal< sc_logic > StreamOut_V_Data_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_lv<1> > tmp_s_reg_918_pp0_iter4_reg;
    sc_signal< sc_logic > StreamOut_V_User_V_blk_n;
    sc_signal< sc_lv<14> > i_reg_384;
    sc_signal< sc_lv<1> > arbitrator_load_reg_913;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > tmp_s_fu_410_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_logic > StreamIn_V_Data_V0_status;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< sc_logic > StreamOut_V_Data_V1_status;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > tmp_s_reg_918_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_s_reg_918_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_s_reg_918_pp0_iter3_reg;
    sc_signal< sc_lv<14> > i_2_fu_416_p2;
    sc_signal< sc_lv<14> > i_2_reg_922;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<128> > tmp_Data_V_reg_967;
    sc_signal< sc_lv<128> > tmp_Data_V_reg_967_pp0_iter2_reg;
    sc_signal< sc_lv<4> > tmp_User_V_reg_980;
    sc_signal< sc_lv<4> > tmp_User_V_reg_980_pp0_iter2_reg;
    sc_signal< sc_lv<4> > tmp_User_V_reg_980_pp0_iter3_reg;
    sc_signal< sc_lv<4> > tmp_User_V_reg_980_pp0_iter4_reg;
    sc_signal< sc_lv<12> > buf_V_0_load_reg_985;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<12> > buf_V_1_load_reg_990;
    sc_signal< sc_lv<12> > buf_V_2_load_reg_995;
    sc_signal< sc_lv<12> > buf_V_3_load_reg_1000;
    sc_signal< sc_lv<12> > buf_V_4_load_reg_1005;
    sc_signal< sc_lv<12> > buf_V_5_load_reg_1010;
    sc_signal< sc_lv<12> > buf_V_6_load_reg_1015;
    sc_signal< sc_lv<12> > buf_V_7_load_reg_1020;
    sc_signal< sc_lv<1> > tmp_10_reg_1025;
    sc_signal< sc_lv<12> > tmp_12_fu_560_p1;
    sc_signal< sc_lv<12> > tmp_12_reg_1030;
    sc_signal< sc_lv<1> > tmp_14_reg_1035;
    sc_signal< sc_lv<12> > tmp_16_fu_594_p1;
    sc_signal< sc_lv<12> > tmp_16_reg_1040;
    sc_signal< sc_lv<1> > tmp_19_reg_1045;
    sc_signal< sc_lv<12> > tmp_20_fu_628_p1;
    sc_signal< sc_lv<12> > tmp_20_reg_1050;
    sc_signal< sc_lv<1> > tmp_21_reg_1055;
    sc_signal< sc_lv<12> > tmp_22_fu_662_p1;
    sc_signal< sc_lv<12> > tmp_22_reg_1060;
    sc_signal< sc_lv<1> > tmp_23_reg_1065;
    sc_signal< sc_lv<12> > tmp_24_fu_696_p1;
    sc_signal< sc_lv<12> > tmp_24_reg_1070;
    sc_signal< sc_lv<1> > tmp_25_reg_1075;
    sc_signal< sc_lv<12> > tmp_26_fu_730_p1;
    sc_signal< sc_lv<12> > tmp_26_reg_1080;
    sc_signal< sc_lv<1> > tmp_27_reg_1085;
    sc_signal< sc_lv<12> > tmp_28_fu_764_p1;
    sc_signal< sc_lv<12> > tmp_28_reg_1090;
    sc_signal< sc_lv<1> > tmp_29_reg_1095;
    sc_signal< sc_lv<12> > tmp_30_fu_798_p1;
    sc_signal< sc_lv<12> > tmp_30_reg_1100;
    sc_signal< sc_lv<128> > p_Result_22_7_fu_898_p1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<14> > ap_phi_mux_i_phi_fu_388_p4;
    sc_signal< sc_lv<128> > ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396;
    sc_signal< sc_lv<128> > ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396;
    sc_signal< sc_lv<128> > ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396;
    sc_signal< sc_lv<128> > ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396;
    sc_signal< sc_lv<128> > ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396;
    sc_signal< sc_lv<128> > ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396;
    sc_signal< sc_lv<64> > i2_fu_422_p1;
    sc_signal< sc_lv<64> > i3_fu_442_p1;
    sc_signal< sc_logic > StreamIn_V_Data_V0_update;
    sc_signal< sc_logic > StreamOut_V_Data_V1_update;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > tmp_4_fu_902_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<16> > tmp_8_fu_536_p1;
    sc_signal< sc_lv<17> > lhs_V_fu_539_p1;
    sc_signal< sc_lv<17> > rhs_V_fu_543_p1;
    sc_signal< sc_lv<17> > ret_V_9_fu_546_p2;
    sc_signal< sc_lv<16> > p_Result_18_1_fu_564_p4;
    sc_signal< sc_lv<17> > lhs_V_1_fu_573_p1;
    sc_signal< sc_lv<17> > rhs_V_1_fu_577_p1;
    sc_signal< sc_lv<17> > ret_V_9_1_fu_580_p2;
    sc_signal< sc_lv<16> > p_Result_18_2_fu_598_p4;
    sc_signal< sc_lv<17> > lhs_V_2_fu_607_p1;
    sc_signal< sc_lv<17> > rhs_V_2_fu_611_p1;
    sc_signal< sc_lv<17> > ret_V_9_2_fu_614_p2;
    sc_signal< sc_lv<16> > p_Result_18_3_fu_632_p4;
    sc_signal< sc_lv<17> > lhs_V_3_fu_641_p1;
    sc_signal< sc_lv<17> > rhs_V_3_fu_645_p1;
    sc_signal< sc_lv<17> > ret_V_9_3_fu_648_p2;
    sc_signal< sc_lv<16> > p_Result_18_4_fu_666_p4;
    sc_signal< sc_lv<17> > lhs_V_4_fu_675_p1;
    sc_signal< sc_lv<17> > rhs_V_4_fu_679_p1;
    sc_signal< sc_lv<17> > ret_V_9_4_fu_682_p2;
    sc_signal< sc_lv<16> > p_Result_18_5_fu_700_p4;
    sc_signal< sc_lv<17> > lhs_V_5_fu_709_p1;
    sc_signal< sc_lv<17> > rhs_V_5_fu_713_p1;
    sc_signal< sc_lv<17> > ret_V_9_5_fu_716_p2;
    sc_signal< sc_lv<16> > p_Result_18_6_fu_734_p4;
    sc_signal< sc_lv<17> > lhs_V_6_fu_743_p1;
    sc_signal< sc_lv<17> > rhs_V_6_fu_747_p1;
    sc_signal< sc_lv<17> > ret_V_9_6_fu_750_p2;
    sc_signal< sc_lv<16> > p_Result_18_7_fu_768_p4;
    sc_signal< sc_lv<17> > lhs_V_7_fu_777_p1;
    sc_signal< sc_lv<17> > rhs_V_7_fu_781_p1;
    sc_signal< sc_lv<17> > ret_V_9_7_fu_784_p2;
    sc_signal< sc_lv<12> > tmp_5_fu_802_p3;
    sc_signal< sc_lv<12> > tmp_7_fu_812_p3;
    sc_signal< sc_lv<12> > tmp_9_fu_822_p3;
    sc_signal< sc_lv<12> > tmp_2_fu_832_p3;
    sc_signal< sc_lv<12> > tmp_1_fu_842_p3;
    sc_signal< sc_lv<12> > tmp_3_fu_852_p3;
    sc_signal< sc_lv<12> > tmp_6_fu_862_p3;
    sc_signal< sc_lv<12> > tmp_11_fu_872_p3;
    sc_signal< sc_lv<16> > tmp_V_6_trunc_fu_868_p1;
    sc_signal< sc_lv<16> > tmp_V_5_trunc_fu_858_p1;
    sc_signal< sc_lv<16> > tmp_V_4_trunc_fu_848_p1;
    sc_signal< sc_lv<16> > tmp_V_3_trunc_fu_838_p1;
    sc_signal< sc_lv<16> > tmp_V_2_trunc_fu_828_p1;
    sc_signal< sc_lv<16> > tmp_V_1_trunc_fu_818_p1;
    sc_signal< sc_lv<16> > tmp_V_0_trunc_fu_808_p1;
    sc_signal< sc_lv<124> > tmp_13_fu_878_p9;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_329;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state8;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<14> ap_const_lv14_2800;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_4B;
    static const sc_lv<32> ap_const_lv32_50;
    static const sc_lv<32> ap_const_lv32_5B;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_6B;
    static const sc_lv<32> ap_const_lv32_70;
    static const sc_lv<32> ap_const_lv32_7B;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_4F;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<12> ap_const_lv12_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_StreamIn_V_Data_V0_status();
    void thread_StreamIn_V_Data_V0_update();
    void thread_StreamIn_V_Data_V_blk_n();
    void thread_StreamIn_V_Data_V_read();
    void thread_StreamIn_V_User_V_blk_n();
    void thread_StreamIn_V_User_V_read();
    void thread_StreamOut_V_Data_V1_status();
    void thread_StreamOut_V_Data_V1_update();
    void thread_StreamOut_V_Data_V_blk_n();
    void thread_StreamOut_V_Data_V_din();
    void thread_StreamOut_V_Data_V_write();
    void thread_StreamOut_V_User_V_blk_n();
    void thread_StreamOut_V_User_V_din();
    void thread_StreamOut_V_User_V_write();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_condition_329();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_388_p4();
    void thread_ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396();
    void thread_ap_ready();
    void thread_buf_V_0_address0();
    void thread_buf_V_0_address1();
    void thread_buf_V_0_ce0();
    void thread_buf_V_0_ce1();
    void thread_buf_V_0_d1();
    void thread_buf_V_0_we1();
    void thread_buf_V_1_address0();
    void thread_buf_V_1_address1();
    void thread_buf_V_1_ce0();
    void thread_buf_V_1_ce1();
    void thread_buf_V_1_d1();
    void thread_buf_V_1_we1();
    void thread_buf_V_2_address0();
    void thread_buf_V_2_address1();
    void thread_buf_V_2_ce0();
    void thread_buf_V_2_ce1();
    void thread_buf_V_2_d1();
    void thread_buf_V_2_we1();
    void thread_buf_V_3_address0();
    void thread_buf_V_3_address1();
    void thread_buf_V_3_ce0();
    void thread_buf_V_3_ce1();
    void thread_buf_V_3_d1();
    void thread_buf_V_3_we1();
    void thread_buf_V_4_address0();
    void thread_buf_V_4_address1();
    void thread_buf_V_4_ce0();
    void thread_buf_V_4_ce1();
    void thread_buf_V_4_d1();
    void thread_buf_V_4_we1();
    void thread_buf_V_5_address0();
    void thread_buf_V_5_address1();
    void thread_buf_V_5_ce0();
    void thread_buf_V_5_ce1();
    void thread_buf_V_5_d1();
    void thread_buf_V_5_we1();
    void thread_buf_V_6_address0();
    void thread_buf_V_6_address1();
    void thread_buf_V_6_ce0();
    void thread_buf_V_6_ce1();
    void thread_buf_V_6_d1();
    void thread_buf_V_6_we1();
    void thread_buf_V_7_address0();
    void thread_buf_V_7_address1();
    void thread_buf_V_7_ce0();
    void thread_buf_V_7_ce1();
    void thread_buf_V_7_d1();
    void thread_buf_V_7_we1();
    void thread_i2_fu_422_p1();
    void thread_i3_fu_442_p1();
    void thread_i_2_fu_416_p2();
    void thread_internal_ap_ready();
    void thread_lhs_V_1_fu_573_p1();
    void thread_lhs_V_2_fu_607_p1();
    void thread_lhs_V_3_fu_641_p1();
    void thread_lhs_V_4_fu_675_p1();
    void thread_lhs_V_5_fu_709_p1();
    void thread_lhs_V_6_fu_743_p1();
    void thread_lhs_V_7_fu_777_p1();
    void thread_lhs_V_fu_539_p1();
    void thread_p_Result_18_1_fu_564_p4();
    void thread_p_Result_18_2_fu_598_p4();
    void thread_p_Result_18_3_fu_632_p4();
    void thread_p_Result_18_4_fu_666_p4();
    void thread_p_Result_18_5_fu_700_p4();
    void thread_p_Result_18_6_fu_734_p4();
    void thread_p_Result_18_7_fu_768_p4();
    void thread_p_Result_22_7_fu_898_p1();
    void thread_real_start();
    void thread_ret_V_9_1_fu_580_p2();
    void thread_ret_V_9_2_fu_614_p2();
    void thread_ret_V_9_3_fu_648_p2();
    void thread_ret_V_9_4_fu_682_p2();
    void thread_ret_V_9_5_fu_716_p2();
    void thread_ret_V_9_6_fu_750_p2();
    void thread_ret_V_9_7_fu_784_p2();
    void thread_ret_V_9_fu_546_p2();
    void thread_rhs_V_1_fu_577_p1();
    void thread_rhs_V_2_fu_611_p1();
    void thread_rhs_V_3_fu_645_p1();
    void thread_rhs_V_4_fu_679_p1();
    void thread_rhs_V_5_fu_713_p1();
    void thread_rhs_V_6_fu_747_p1();
    void thread_rhs_V_7_fu_781_p1();
    void thread_rhs_V_fu_543_p1();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_11_fu_872_p3();
    void thread_tmp_12_fu_560_p1();
    void thread_tmp_13_fu_878_p9();
    void thread_tmp_16_fu_594_p1();
    void thread_tmp_1_fu_842_p3();
    void thread_tmp_20_fu_628_p1();
    void thread_tmp_22_fu_662_p1();
    void thread_tmp_24_fu_696_p1();
    void thread_tmp_26_fu_730_p1();
    void thread_tmp_28_fu_764_p1();
    void thread_tmp_2_fu_832_p3();
    void thread_tmp_30_fu_798_p1();
    void thread_tmp_3_fu_852_p3();
    void thread_tmp_4_fu_902_p2();
    void thread_tmp_5_fu_802_p3();
    void thread_tmp_6_fu_862_p3();
    void thread_tmp_7_fu_812_p3();
    void thread_tmp_8_fu_536_p1();
    void thread_tmp_9_fu_822_p3();
    void thread_tmp_V_0_trunc_fu_808_p1();
    void thread_tmp_V_1_trunc_fu_818_p1();
    void thread_tmp_V_2_trunc_fu_828_p1();
    void thread_tmp_V_3_trunc_fu_838_p1();
    void thread_tmp_V_4_trunc_fu_848_p1();
    void thread_tmp_V_5_trunc_fu_858_p1();
    void thread_tmp_V_6_trunc_fu_868_p1();
    void thread_tmp_s_fu_410_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
