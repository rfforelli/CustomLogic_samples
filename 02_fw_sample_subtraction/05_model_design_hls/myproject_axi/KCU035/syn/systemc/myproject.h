// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "read_pixel_data.h"
#include "pix_subtract.h"
#include "send_output.h"
#include "fifo_w128_d10240_A.h"
#include "fifo_w4_d10240_A.h"
#include "start_for_pix_subtract_U0.h"
#include "start_for_send_output_U0.h"

namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 15
    sc_in< sc_lv<128> > VideoIn_TDATA;
    sc_in< sc_lv<4> > VideoIn_TUSER;
    sc_out< sc_lv<128> > VideoOut_TDATA;
    sc_out< sc_lv<4> > VideoOut_TUSER;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > VideoIn_TVALID;
    sc_out< sc_logic > VideoIn_TREADY;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > VideoOut_TVALID;
    sc_in< sc_logic > VideoOut_TREADY;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    read_pixel_data* read_pixel_data_U0;
    pix_subtract* pix_subtract_U0;
    send_output* send_output_U0;
    fifo_w128_d10240_A* VideoBuffer_V_Data_V_U;
    fifo_w4_d10240_A* VideoBuffer_V_User_V_U;
    fifo_w128_d10240_A* SubtractionOut_V_Dat_U;
    fifo_w4_d10240_A* SubtractionOut_V_Use_U;
    start_for_pix_subtract_U0* start_for_pix_subtract_U0_U;
    start_for_send_output_U0* start_for_send_output_U0_U;
    sc_signal< sc_logic > read_pixel_data_U0_ap_start;
    sc_signal< sc_logic > read_pixel_data_U0_ap_done;
    sc_signal< sc_logic > read_pixel_data_U0_ap_continue;
    sc_signal< sc_logic > read_pixel_data_U0_ap_idle;
    sc_signal< sc_logic > read_pixel_data_U0_ap_ready;
    sc_signal< sc_logic > read_pixel_data_U0_start_out;
    sc_signal< sc_logic > read_pixel_data_U0_start_write;
    sc_signal< sc_logic > read_pixel_data_U0_VideoIn_TREADY;
    sc_signal< sc_lv<128> > read_pixel_data_U0_StreamOut_V_Data_V_din;
    sc_signal< sc_logic > read_pixel_data_U0_StreamOut_V_Data_V_write;
    sc_signal< sc_lv<4> > read_pixel_data_U0_StreamOut_V_User_V_din;
    sc_signal< sc_logic > read_pixel_data_U0_StreamOut_V_User_V_write;
    sc_signal< sc_logic > pix_subtract_U0_ap_start;
    sc_signal< sc_logic > pix_subtract_U0_ap_done;
    sc_signal< sc_logic > pix_subtract_U0_ap_continue;
    sc_signal< sc_logic > pix_subtract_U0_ap_idle;
    sc_signal< sc_logic > pix_subtract_U0_ap_ready;
    sc_signal< sc_logic > pix_subtract_U0_start_out;
    sc_signal< sc_logic > pix_subtract_U0_start_write;
    sc_signal< sc_logic > pix_subtract_U0_StreamIn_V_Data_V_read;
    sc_signal< sc_logic > pix_subtract_U0_StreamIn_V_User_V_read;
    sc_signal< sc_lv<128> > pix_subtract_U0_StreamOut_V_Data_V_din;
    sc_signal< sc_logic > pix_subtract_U0_StreamOut_V_Data_V_write;
    sc_signal< sc_lv<4> > pix_subtract_U0_StreamOut_V_User_V_din;
    sc_signal< sc_logic > pix_subtract_U0_StreamOut_V_User_V_write;
    sc_signal< sc_logic > send_output_U0_ap_start;
    sc_signal< sc_logic > send_output_U0_ap_done;
    sc_signal< sc_logic > send_output_U0_ap_continue;
    sc_signal< sc_logic > send_output_U0_ap_idle;
    sc_signal< sc_logic > send_output_U0_ap_ready;
    sc_signal< sc_logic > send_output_U0_StreamIn_V_Data_V_read;
    sc_signal< sc_logic > send_output_U0_StreamIn_V_User_V_read;
    sc_signal< sc_lv<128> > send_output_U0_VideoOut_TDATA;
    sc_signal< sc_logic > send_output_U0_VideoOut_TVALID;
    sc_signal< sc_lv<4> > send_output_U0_VideoOut_TUSER;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > VideoBuffer_V_Data_V_full_n;
    sc_signal< sc_lv<128> > VideoBuffer_V_Data_V_dout;
    sc_signal< sc_logic > VideoBuffer_V_Data_V_empty_n;
    sc_signal< sc_logic > VideoBuffer_V_User_V_full_n;
    sc_signal< sc_lv<4> > VideoBuffer_V_User_V_dout;
    sc_signal< sc_logic > VideoBuffer_V_User_V_empty_n;
    sc_signal< sc_logic > SubtractionOut_V_Dat_full_n;
    sc_signal< sc_lv<128> > SubtractionOut_V_Dat_dout;
    sc_signal< sc_logic > SubtractionOut_V_Dat_empty_n;
    sc_signal< sc_logic > SubtractionOut_V_Use_full_n;
    sc_signal< sc_lv<4> > SubtractionOut_V_Use_dout;
    sc_signal< sc_logic > SubtractionOut_V_Use_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_pix_subtract_U0_din;
    sc_signal< sc_logic > start_for_pix_subtract_U0_full_n;
    sc_signal< sc_lv<1> > start_for_pix_subtract_U0_dout;
    sc_signal< sc_logic > start_for_pix_subtract_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_send_output_U0_din;
    sc_signal< sc_logic > start_for_send_output_U0_full_n;
    sc_signal< sc_lv<1> > start_for_send_output_U0_dout;
    sc_signal< sc_logic > start_for_send_output_U0_empty_n;
    sc_signal< sc_logic > send_output_U0_start_full_n;
    sc_signal< sc_logic > send_output_U0_start_write;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_VideoIn_TREADY();
    void thread_VideoOut_TDATA();
    void thread_VideoOut_TUSER();
    void thread_VideoOut_TVALID();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_pix_subtract_U0_ap_continue();
    void thread_pix_subtract_U0_ap_start();
    void thread_read_pixel_data_U0_ap_continue();
    void thread_read_pixel_data_U0_ap_start();
    void thread_send_output_U0_ap_continue();
    void thread_send_output_U0_ap_start();
    void thread_send_output_U0_start_full_n();
    void thread_send_output_U0_start_write();
    void thread_start_for_pix_subtract_U0_din();
    void thread_start_for_send_output_U0_din();
};

}

using namespace ap_rtl;

#endif
