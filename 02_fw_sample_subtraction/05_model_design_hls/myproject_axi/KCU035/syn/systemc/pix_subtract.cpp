// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pix_subtract.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pix_subtract::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pix_subtract::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> pix_subtract::ap_ST_fsm_state1 = "1";
const sc_lv<3> pix_subtract::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> pix_subtract::ap_ST_fsm_state8 = "100";
const bool pix_subtract::ap_const_boolean_1 = true;
const sc_lv<32> pix_subtract::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> pix_subtract::ap_const_lv1_0 = "0";
const sc_lv<32> pix_subtract::ap_const_lv32_1 = "1";
const bool pix_subtract::ap_const_boolean_0 = false;
const sc_lv<1> pix_subtract::ap_const_lv1_1 = "1";
const sc_lv<14> pix_subtract::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> pix_subtract::ap_const_lv32_2 = "10";
const sc_lv<14> pix_subtract::ap_const_lv14_2800 = "10100000000000";
const sc_lv<14> pix_subtract::ap_const_lv14_1 = "1";
const sc_lv<32> pix_subtract::ap_const_lv32_10 = "10000";
const sc_lv<32> pix_subtract::ap_const_lv32_1B = "11011";
const sc_lv<32> pix_subtract::ap_const_lv32_20 = "100000";
const sc_lv<32> pix_subtract::ap_const_lv32_2B = "101011";
const sc_lv<32> pix_subtract::ap_const_lv32_30 = "110000";
const sc_lv<32> pix_subtract::ap_const_lv32_3B = "111011";
const sc_lv<32> pix_subtract::ap_const_lv32_40 = "1000000";
const sc_lv<32> pix_subtract::ap_const_lv32_4B = "1001011";
const sc_lv<32> pix_subtract::ap_const_lv32_50 = "1010000";
const sc_lv<32> pix_subtract::ap_const_lv32_5B = "1011011";
const sc_lv<32> pix_subtract::ap_const_lv32_60 = "1100000";
const sc_lv<32> pix_subtract::ap_const_lv32_6B = "1101011";
const sc_lv<32> pix_subtract::ap_const_lv32_70 = "1110000";
const sc_lv<32> pix_subtract::ap_const_lv32_7B = "1111011";
const sc_lv<32> pix_subtract::ap_const_lv32_1F = "11111";
const sc_lv<32> pix_subtract::ap_const_lv32_2F = "101111";
const sc_lv<32> pix_subtract::ap_const_lv32_3F = "111111";
const sc_lv<32> pix_subtract::ap_const_lv32_4F = "1001111";
const sc_lv<32> pix_subtract::ap_const_lv32_5F = "1011111";
const sc_lv<32> pix_subtract::ap_const_lv32_6F = "1101111";
const sc_lv<32> pix_subtract::ap_const_lv32_7F = "1111111";
const sc_lv<12> pix_subtract::ap_const_lv12_0 = "000000000000";

pix_subtract::pix_subtract(sc_module_name name) : sc_module(name), mVcdFile(0) {
    buf_V_0_U = new pix_subtract_buf_V_0("buf_V_0_U");
    buf_V_0_U->clk(ap_clk);
    buf_V_0_U->reset(ap_rst);
    buf_V_0_U->address0(buf_V_0_address0);
    buf_V_0_U->ce0(buf_V_0_ce0);
    buf_V_0_U->q0(buf_V_0_q0);
    buf_V_0_U->address1(buf_V_0_address1);
    buf_V_0_U->ce1(buf_V_0_ce1);
    buf_V_0_U->we1(buf_V_0_we1);
    buf_V_0_U->d1(buf_V_0_d1);
    buf_V_1_U = new pix_subtract_buf_V_0("buf_V_1_U");
    buf_V_1_U->clk(ap_clk);
    buf_V_1_U->reset(ap_rst);
    buf_V_1_U->address0(buf_V_1_address0);
    buf_V_1_U->ce0(buf_V_1_ce0);
    buf_V_1_U->q0(buf_V_1_q0);
    buf_V_1_U->address1(buf_V_1_address1);
    buf_V_1_U->ce1(buf_V_1_ce1);
    buf_V_1_U->we1(buf_V_1_we1);
    buf_V_1_U->d1(buf_V_1_d1);
    buf_V_2_U = new pix_subtract_buf_V_0("buf_V_2_U");
    buf_V_2_U->clk(ap_clk);
    buf_V_2_U->reset(ap_rst);
    buf_V_2_U->address0(buf_V_2_address0);
    buf_V_2_U->ce0(buf_V_2_ce0);
    buf_V_2_U->q0(buf_V_2_q0);
    buf_V_2_U->address1(buf_V_2_address1);
    buf_V_2_U->ce1(buf_V_2_ce1);
    buf_V_2_U->we1(buf_V_2_we1);
    buf_V_2_U->d1(buf_V_2_d1);
    buf_V_3_U = new pix_subtract_buf_V_0("buf_V_3_U");
    buf_V_3_U->clk(ap_clk);
    buf_V_3_U->reset(ap_rst);
    buf_V_3_U->address0(buf_V_3_address0);
    buf_V_3_U->ce0(buf_V_3_ce0);
    buf_V_3_U->q0(buf_V_3_q0);
    buf_V_3_U->address1(buf_V_3_address1);
    buf_V_3_U->ce1(buf_V_3_ce1);
    buf_V_3_U->we1(buf_V_3_we1);
    buf_V_3_U->d1(buf_V_3_d1);
    buf_V_4_U = new pix_subtract_buf_V_0("buf_V_4_U");
    buf_V_4_U->clk(ap_clk);
    buf_V_4_U->reset(ap_rst);
    buf_V_4_U->address0(buf_V_4_address0);
    buf_V_4_U->ce0(buf_V_4_ce0);
    buf_V_4_U->q0(buf_V_4_q0);
    buf_V_4_U->address1(buf_V_4_address1);
    buf_V_4_U->ce1(buf_V_4_ce1);
    buf_V_4_U->we1(buf_V_4_we1);
    buf_V_4_U->d1(buf_V_4_d1);
    buf_V_5_U = new pix_subtract_buf_V_0("buf_V_5_U");
    buf_V_5_U->clk(ap_clk);
    buf_V_5_U->reset(ap_rst);
    buf_V_5_U->address0(buf_V_5_address0);
    buf_V_5_U->ce0(buf_V_5_ce0);
    buf_V_5_U->q0(buf_V_5_q0);
    buf_V_5_U->address1(buf_V_5_address1);
    buf_V_5_U->ce1(buf_V_5_ce1);
    buf_V_5_U->we1(buf_V_5_we1);
    buf_V_5_U->d1(buf_V_5_d1);
    buf_V_6_U = new pix_subtract_buf_V_0("buf_V_6_U");
    buf_V_6_U->clk(ap_clk);
    buf_V_6_U->reset(ap_rst);
    buf_V_6_U->address0(buf_V_6_address0);
    buf_V_6_U->ce0(buf_V_6_ce0);
    buf_V_6_U->q0(buf_V_6_q0);
    buf_V_6_U->address1(buf_V_6_address1);
    buf_V_6_U->ce1(buf_V_6_ce1);
    buf_V_6_U->we1(buf_V_6_we1);
    buf_V_6_U->d1(buf_V_6_d1);
    buf_V_7_U = new pix_subtract_buf_V_0("buf_V_7_U");
    buf_V_7_U->clk(ap_clk);
    buf_V_7_U->reset(ap_rst);
    buf_V_7_U->address0(buf_V_7_address0);
    buf_V_7_U->ce0(buf_V_7_ce0);
    buf_V_7_U->q0(buf_V_7_q0);
    buf_V_7_U->address1(buf_V_7_address1);
    buf_V_7_U->ce1(buf_V_7_ce1);
    buf_V_7_U->we1(buf_V_7_we1);
    buf_V_7_U->d1(buf_V_7_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_StreamIn_V_Data_V0_status);
    sensitive << ( StreamIn_V_Data_V_empty_n );
    sensitive << ( StreamIn_V_User_V_empty_n );

    SC_METHOD(thread_StreamIn_V_Data_V0_update);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_StreamIn_V_Data_V_blk_n);
    sensitive << ( StreamIn_V_Data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_reg_918 );

    SC_METHOD(thread_StreamIn_V_Data_V_read);
    sensitive << ( StreamIn_V_Data_V0_update );

    SC_METHOD(thread_StreamIn_V_User_V_blk_n);
    sensitive << ( StreamIn_V_User_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_reg_918 );

    SC_METHOD(thread_StreamIn_V_User_V_read);
    sensitive << ( StreamIn_V_Data_V0_update );

    SC_METHOD(thread_StreamOut_V_Data_V1_status);
    sensitive << ( StreamOut_V_Data_V_full_n );
    sensitive << ( StreamOut_V_User_V_full_n );

    SC_METHOD(thread_StreamOut_V_Data_V1_update);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_s_reg_918_pp0_iter4_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_StreamOut_V_Data_V_blk_n);
    sensitive << ( StreamOut_V_Data_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_s_reg_918_pp0_iter4_reg );

    SC_METHOD(thread_StreamOut_V_Data_V_din);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_s_reg_918_pp0_iter4_reg );
    sensitive << ( ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_StreamOut_V_Data_V_write);
    sensitive << ( StreamOut_V_Data_V1_update );

    SC_METHOD(thread_StreamOut_V_User_V_blk_n);
    sensitive << ( StreamOut_V_User_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_s_reg_918_pp0_iter4_reg );

    SC_METHOD(thread_StreamOut_V_User_V_din);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_s_reg_918_pp0_iter4_reg );
    sensitive << ( tmp_User_V_reg_980_pp0_iter4_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_StreamOut_V_User_V_write);
    sensitive << ( StreamOut_V_Data_V1_update );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_s_reg_918_pp0_iter4_reg );
    sensitive << ( StreamIn_V_Data_V0_status );
    sensitive << ( StreamOut_V_Data_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_s_reg_918_pp0_iter4_reg );
    sensitive << ( StreamIn_V_Data_V0_status );
    sensitive << ( StreamOut_V_Data_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_s_reg_918_pp0_iter4_reg );
    sensitive << ( StreamIn_V_Data_V0_status );
    sensitive << ( StreamOut_V_Data_V1_status );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( StreamIn_V_Data_V0_status );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);
    sensitive << ( tmp_s_reg_918_pp0_iter4_reg );
    sensitive << ( StreamOut_V_Data_V1_status );

    SC_METHOD(thread_ap_condition_329);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( tmp_s_fu_410_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_388_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( i_reg_384 );
    sensitive << ( i_2_reg_922 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396);

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_buf_V_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i2_fu_422_p1 );

    SC_METHOD(thread_buf_V_0_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i3_fu_442_p1 );

    SC_METHOD(thread_buf_V_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_buf_V_0_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_0_d1);
    sensitive << ( StreamIn_V_Data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_buf_V_0_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( arbitrator_load_reg_913 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i2_fu_422_p1 );

    SC_METHOD(thread_buf_V_1_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i3_fu_442_p1 );

    SC_METHOD(thread_buf_V_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_buf_V_1_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_1_d1);
    sensitive << ( StreamIn_V_Data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_buf_V_1_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( arbitrator_load_reg_913 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i2_fu_422_p1 );

    SC_METHOD(thread_buf_V_2_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i3_fu_442_p1 );

    SC_METHOD(thread_buf_V_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_buf_V_2_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_2_d1);
    sensitive << ( StreamIn_V_Data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_buf_V_2_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( arbitrator_load_reg_913 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i2_fu_422_p1 );

    SC_METHOD(thread_buf_V_3_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i3_fu_442_p1 );

    SC_METHOD(thread_buf_V_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_buf_V_3_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_3_d1);
    sensitive << ( StreamIn_V_Data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_buf_V_3_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( arbitrator_load_reg_913 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i2_fu_422_p1 );

    SC_METHOD(thread_buf_V_4_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i3_fu_442_p1 );

    SC_METHOD(thread_buf_V_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_buf_V_4_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_4_d1);
    sensitive << ( StreamIn_V_Data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_buf_V_4_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( arbitrator_load_reg_913 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i2_fu_422_p1 );

    SC_METHOD(thread_buf_V_5_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i3_fu_442_p1 );

    SC_METHOD(thread_buf_V_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_buf_V_5_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_5_d1);
    sensitive << ( StreamIn_V_Data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_buf_V_5_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( arbitrator_load_reg_913 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_6_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i2_fu_422_p1 );

    SC_METHOD(thread_buf_V_6_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i3_fu_442_p1 );

    SC_METHOD(thread_buf_V_6_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_buf_V_6_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_6_d1);
    sensitive << ( StreamIn_V_Data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_buf_V_6_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( arbitrator_load_reg_913 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_7_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i2_fu_422_p1 );

    SC_METHOD(thread_buf_V_7_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i3_fu_442_p1 );

    SC_METHOD(thread_buf_V_7_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_buf_V_7_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buf_V_7_d1);
    sensitive << ( StreamIn_V_Data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_buf_V_7_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_918 );
    sensitive << ( arbitrator_load_reg_913 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i2_fu_422_p1);
    sensitive << ( ap_phi_mux_i_phi_fu_388_p4 );

    SC_METHOD(thread_i3_fu_442_p1);
    sensitive << ( i_reg_384 );

    SC_METHOD(thread_i_2_fu_416_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_388_p4 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_lhs_V_1_fu_573_p1);
    sensitive << ( p_Result_18_1_fu_564_p4 );

    SC_METHOD(thread_lhs_V_2_fu_607_p1);
    sensitive << ( p_Result_18_2_fu_598_p4 );

    SC_METHOD(thread_lhs_V_3_fu_641_p1);
    sensitive << ( p_Result_18_3_fu_632_p4 );

    SC_METHOD(thread_lhs_V_4_fu_675_p1);
    sensitive << ( p_Result_18_4_fu_666_p4 );

    SC_METHOD(thread_lhs_V_5_fu_709_p1);
    sensitive << ( p_Result_18_5_fu_700_p4 );

    SC_METHOD(thread_lhs_V_6_fu_743_p1);
    sensitive << ( p_Result_18_6_fu_734_p4 );

    SC_METHOD(thread_lhs_V_7_fu_777_p1);
    sensitive << ( p_Result_18_7_fu_768_p4 );

    SC_METHOD(thread_lhs_V_fu_539_p1);
    sensitive << ( tmp_8_fu_536_p1 );

    SC_METHOD(thread_p_Result_18_1_fu_564_p4);
    sensitive << ( tmp_Data_V_reg_967_pp0_iter2_reg );

    SC_METHOD(thread_p_Result_18_2_fu_598_p4);
    sensitive << ( tmp_Data_V_reg_967_pp0_iter2_reg );

    SC_METHOD(thread_p_Result_18_3_fu_632_p4);
    sensitive << ( tmp_Data_V_reg_967_pp0_iter2_reg );

    SC_METHOD(thread_p_Result_18_4_fu_666_p4);
    sensitive << ( tmp_Data_V_reg_967_pp0_iter2_reg );

    SC_METHOD(thread_p_Result_18_5_fu_700_p4);
    sensitive << ( tmp_Data_V_reg_967_pp0_iter2_reg );

    SC_METHOD(thread_p_Result_18_6_fu_734_p4);
    sensitive << ( tmp_Data_V_reg_967_pp0_iter2_reg );

    SC_METHOD(thread_p_Result_18_7_fu_768_p4);
    sensitive << ( tmp_Data_V_reg_967_pp0_iter2_reg );

    SC_METHOD(thread_p_Result_22_7_fu_898_p1);
    sensitive << ( tmp_13_fu_878_p9 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_ret_V_9_1_fu_580_p2);
    sensitive << ( lhs_V_1_fu_573_p1 );
    sensitive << ( rhs_V_1_fu_577_p1 );

    SC_METHOD(thread_ret_V_9_2_fu_614_p2);
    sensitive << ( lhs_V_2_fu_607_p1 );
    sensitive << ( rhs_V_2_fu_611_p1 );

    SC_METHOD(thread_ret_V_9_3_fu_648_p2);
    sensitive << ( lhs_V_3_fu_641_p1 );
    sensitive << ( rhs_V_3_fu_645_p1 );

    SC_METHOD(thread_ret_V_9_4_fu_682_p2);
    sensitive << ( lhs_V_4_fu_675_p1 );
    sensitive << ( rhs_V_4_fu_679_p1 );

    SC_METHOD(thread_ret_V_9_5_fu_716_p2);
    sensitive << ( lhs_V_5_fu_709_p1 );
    sensitive << ( rhs_V_5_fu_713_p1 );

    SC_METHOD(thread_ret_V_9_6_fu_750_p2);
    sensitive << ( lhs_V_6_fu_743_p1 );
    sensitive << ( rhs_V_6_fu_747_p1 );

    SC_METHOD(thread_ret_V_9_7_fu_784_p2);
    sensitive << ( lhs_V_7_fu_777_p1 );
    sensitive << ( rhs_V_7_fu_781_p1 );

    SC_METHOD(thread_ret_V_9_fu_546_p2);
    sensitive << ( lhs_V_fu_539_p1 );
    sensitive << ( rhs_V_fu_543_p1 );

    SC_METHOD(thread_rhs_V_1_fu_577_p1);
    sensitive << ( buf_V_1_load_reg_990 );

    SC_METHOD(thread_rhs_V_2_fu_611_p1);
    sensitive << ( buf_V_2_load_reg_995 );

    SC_METHOD(thread_rhs_V_3_fu_645_p1);
    sensitive << ( buf_V_3_load_reg_1000 );

    SC_METHOD(thread_rhs_V_4_fu_679_p1);
    sensitive << ( buf_V_4_load_reg_1005 );

    SC_METHOD(thread_rhs_V_5_fu_713_p1);
    sensitive << ( buf_V_5_load_reg_1010 );

    SC_METHOD(thread_rhs_V_6_fu_747_p1);
    sensitive << ( buf_V_6_load_reg_1015 );

    SC_METHOD(thread_rhs_V_7_fu_781_p1);
    sensitive << ( buf_V_7_load_reg_1020 );

    SC_METHOD(thread_rhs_V_fu_543_p1);
    sensitive << ( buf_V_0_load_reg_985 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_11_fu_872_p3);
    sensitive << ( tmp_29_reg_1095 );
    sensitive << ( tmp_30_reg_1100 );

    SC_METHOD(thread_tmp_12_fu_560_p1);
    sensitive << ( ret_V_9_fu_546_p2 );

    SC_METHOD(thread_tmp_13_fu_878_p9);
    sensitive << ( tmp_11_fu_872_p3 );
    sensitive << ( tmp_V_6_trunc_fu_868_p1 );
    sensitive << ( tmp_V_5_trunc_fu_858_p1 );
    sensitive << ( tmp_V_4_trunc_fu_848_p1 );
    sensitive << ( tmp_V_3_trunc_fu_838_p1 );
    sensitive << ( tmp_V_2_trunc_fu_828_p1 );
    sensitive << ( tmp_V_1_trunc_fu_818_p1 );
    sensitive << ( tmp_V_0_trunc_fu_808_p1 );

    SC_METHOD(thread_tmp_16_fu_594_p1);
    sensitive << ( ret_V_9_1_fu_580_p2 );

    SC_METHOD(thread_tmp_1_fu_842_p3);
    sensitive << ( tmp_23_reg_1065 );
    sensitive << ( tmp_24_reg_1070 );

    SC_METHOD(thread_tmp_20_fu_628_p1);
    sensitive << ( ret_V_9_2_fu_614_p2 );

    SC_METHOD(thread_tmp_22_fu_662_p1);
    sensitive << ( ret_V_9_3_fu_648_p2 );

    SC_METHOD(thread_tmp_24_fu_696_p1);
    sensitive << ( ret_V_9_4_fu_682_p2 );

    SC_METHOD(thread_tmp_26_fu_730_p1);
    sensitive << ( ret_V_9_5_fu_716_p2 );

    SC_METHOD(thread_tmp_28_fu_764_p1);
    sensitive << ( ret_V_9_6_fu_750_p2 );

    SC_METHOD(thread_tmp_2_fu_832_p3);
    sensitive << ( tmp_21_reg_1055 );
    sensitive << ( tmp_22_reg_1060 );

    SC_METHOD(thread_tmp_30_fu_798_p1);
    sensitive << ( ret_V_9_7_fu_784_p2 );

    SC_METHOD(thread_tmp_3_fu_852_p3);
    sensitive << ( tmp_25_reg_1075 );
    sensitive << ( tmp_26_reg_1080 );

    SC_METHOD(thread_tmp_4_fu_902_p2);
    sensitive << ( arbitrator_load_reg_913 );

    SC_METHOD(thread_tmp_5_fu_802_p3);
    sensitive << ( tmp_10_reg_1025 );
    sensitive << ( tmp_12_reg_1030 );

    SC_METHOD(thread_tmp_6_fu_862_p3);
    sensitive << ( tmp_27_reg_1085 );
    sensitive << ( tmp_28_reg_1090 );

    SC_METHOD(thread_tmp_7_fu_812_p3);
    sensitive << ( tmp_14_reg_1035 );
    sensitive << ( tmp_16_reg_1040 );

    SC_METHOD(thread_tmp_8_fu_536_p1);
    sensitive << ( tmp_Data_V_reg_967_pp0_iter2_reg );

    SC_METHOD(thread_tmp_9_fu_822_p3);
    sensitive << ( tmp_19_reg_1045 );
    sensitive << ( tmp_20_reg_1050 );

    SC_METHOD(thread_tmp_V_0_trunc_fu_808_p1);
    sensitive << ( tmp_5_fu_802_p3 );

    SC_METHOD(thread_tmp_V_1_trunc_fu_818_p1);
    sensitive << ( tmp_7_fu_812_p3 );

    SC_METHOD(thread_tmp_V_2_trunc_fu_828_p1);
    sensitive << ( tmp_9_fu_822_p3 );

    SC_METHOD(thread_tmp_V_3_trunc_fu_838_p1);
    sensitive << ( tmp_2_fu_832_p3 );

    SC_METHOD(thread_tmp_V_4_trunc_fu_848_p1);
    sensitive << ( tmp_1_fu_842_p3 );

    SC_METHOD(thread_tmp_V_5_trunc_fu_858_p1);
    sensitive << ( tmp_3_fu_852_p3 );

    SC_METHOD(thread_tmp_V_6_trunc_fu_868_p1);
    sensitive << ( tmp_6_fu_862_p3 );

    SC_METHOD(thread_tmp_s_fu_410_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_phi_fu_388_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_s_fu_410_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    arbitrator = "0";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pix_subtract_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, StreamIn_V_Data_V_dout, "(port)StreamIn_V_Data_V_dout");
    sc_trace(mVcdFile, StreamIn_V_Data_V_empty_n, "(port)StreamIn_V_Data_V_empty_n");
    sc_trace(mVcdFile, StreamIn_V_Data_V_read, "(port)StreamIn_V_Data_V_read");
    sc_trace(mVcdFile, StreamIn_V_User_V_dout, "(port)StreamIn_V_User_V_dout");
    sc_trace(mVcdFile, StreamIn_V_User_V_empty_n, "(port)StreamIn_V_User_V_empty_n");
    sc_trace(mVcdFile, StreamIn_V_User_V_read, "(port)StreamIn_V_User_V_read");
    sc_trace(mVcdFile, StreamOut_V_Data_V_din, "(port)StreamOut_V_Data_V_din");
    sc_trace(mVcdFile, StreamOut_V_Data_V_full_n, "(port)StreamOut_V_Data_V_full_n");
    sc_trace(mVcdFile, StreamOut_V_Data_V_write, "(port)StreamOut_V_Data_V_write");
    sc_trace(mVcdFile, StreamOut_V_User_V_din, "(port)StreamOut_V_User_V_din");
    sc_trace(mVcdFile, StreamOut_V_User_V_full_n, "(port)StreamOut_V_User_V_full_n");
    sc_trace(mVcdFile, StreamOut_V_User_V_write, "(port)StreamOut_V_User_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, arbitrator, "arbitrator");
    sc_trace(mVcdFile, buf_V_0_address0, "buf_V_0_address0");
    sc_trace(mVcdFile, buf_V_0_ce0, "buf_V_0_ce0");
    sc_trace(mVcdFile, buf_V_0_q0, "buf_V_0_q0");
    sc_trace(mVcdFile, buf_V_0_address1, "buf_V_0_address1");
    sc_trace(mVcdFile, buf_V_0_ce1, "buf_V_0_ce1");
    sc_trace(mVcdFile, buf_V_0_we1, "buf_V_0_we1");
    sc_trace(mVcdFile, buf_V_0_d1, "buf_V_0_d1");
    sc_trace(mVcdFile, buf_V_1_address0, "buf_V_1_address0");
    sc_trace(mVcdFile, buf_V_1_ce0, "buf_V_1_ce0");
    sc_trace(mVcdFile, buf_V_1_q0, "buf_V_1_q0");
    sc_trace(mVcdFile, buf_V_1_address1, "buf_V_1_address1");
    sc_trace(mVcdFile, buf_V_1_ce1, "buf_V_1_ce1");
    sc_trace(mVcdFile, buf_V_1_we1, "buf_V_1_we1");
    sc_trace(mVcdFile, buf_V_1_d1, "buf_V_1_d1");
    sc_trace(mVcdFile, buf_V_2_address0, "buf_V_2_address0");
    sc_trace(mVcdFile, buf_V_2_ce0, "buf_V_2_ce0");
    sc_trace(mVcdFile, buf_V_2_q0, "buf_V_2_q0");
    sc_trace(mVcdFile, buf_V_2_address1, "buf_V_2_address1");
    sc_trace(mVcdFile, buf_V_2_ce1, "buf_V_2_ce1");
    sc_trace(mVcdFile, buf_V_2_we1, "buf_V_2_we1");
    sc_trace(mVcdFile, buf_V_2_d1, "buf_V_2_d1");
    sc_trace(mVcdFile, buf_V_3_address0, "buf_V_3_address0");
    sc_trace(mVcdFile, buf_V_3_ce0, "buf_V_3_ce0");
    sc_trace(mVcdFile, buf_V_3_q0, "buf_V_3_q0");
    sc_trace(mVcdFile, buf_V_3_address1, "buf_V_3_address1");
    sc_trace(mVcdFile, buf_V_3_ce1, "buf_V_3_ce1");
    sc_trace(mVcdFile, buf_V_3_we1, "buf_V_3_we1");
    sc_trace(mVcdFile, buf_V_3_d1, "buf_V_3_d1");
    sc_trace(mVcdFile, buf_V_4_address0, "buf_V_4_address0");
    sc_trace(mVcdFile, buf_V_4_ce0, "buf_V_4_ce0");
    sc_trace(mVcdFile, buf_V_4_q0, "buf_V_4_q0");
    sc_trace(mVcdFile, buf_V_4_address1, "buf_V_4_address1");
    sc_trace(mVcdFile, buf_V_4_ce1, "buf_V_4_ce1");
    sc_trace(mVcdFile, buf_V_4_we1, "buf_V_4_we1");
    sc_trace(mVcdFile, buf_V_4_d1, "buf_V_4_d1");
    sc_trace(mVcdFile, buf_V_5_address0, "buf_V_5_address0");
    sc_trace(mVcdFile, buf_V_5_ce0, "buf_V_5_ce0");
    sc_trace(mVcdFile, buf_V_5_q0, "buf_V_5_q0");
    sc_trace(mVcdFile, buf_V_5_address1, "buf_V_5_address1");
    sc_trace(mVcdFile, buf_V_5_ce1, "buf_V_5_ce1");
    sc_trace(mVcdFile, buf_V_5_we1, "buf_V_5_we1");
    sc_trace(mVcdFile, buf_V_5_d1, "buf_V_5_d1");
    sc_trace(mVcdFile, buf_V_6_address0, "buf_V_6_address0");
    sc_trace(mVcdFile, buf_V_6_ce0, "buf_V_6_ce0");
    sc_trace(mVcdFile, buf_V_6_q0, "buf_V_6_q0");
    sc_trace(mVcdFile, buf_V_6_address1, "buf_V_6_address1");
    sc_trace(mVcdFile, buf_V_6_ce1, "buf_V_6_ce1");
    sc_trace(mVcdFile, buf_V_6_we1, "buf_V_6_we1");
    sc_trace(mVcdFile, buf_V_6_d1, "buf_V_6_d1");
    sc_trace(mVcdFile, buf_V_7_address0, "buf_V_7_address0");
    sc_trace(mVcdFile, buf_V_7_ce0, "buf_V_7_ce0");
    sc_trace(mVcdFile, buf_V_7_q0, "buf_V_7_q0");
    sc_trace(mVcdFile, buf_V_7_address1, "buf_V_7_address1");
    sc_trace(mVcdFile, buf_V_7_ce1, "buf_V_7_ce1");
    sc_trace(mVcdFile, buf_V_7_we1, "buf_V_7_we1");
    sc_trace(mVcdFile, buf_V_7_d1, "buf_V_7_d1");
    sc_trace(mVcdFile, StreamIn_V_Data_V_blk_n, "StreamIn_V_Data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_s_reg_918, "tmp_s_reg_918");
    sc_trace(mVcdFile, StreamIn_V_User_V_blk_n, "StreamIn_V_User_V_blk_n");
    sc_trace(mVcdFile, StreamOut_V_Data_V_blk_n, "StreamOut_V_Data_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, tmp_s_reg_918_pp0_iter4_reg, "tmp_s_reg_918_pp0_iter4_reg");
    sc_trace(mVcdFile, StreamOut_V_User_V_blk_n, "StreamOut_V_User_V_blk_n");
    sc_trace(mVcdFile, i_reg_384, "i_reg_384");
    sc_trace(mVcdFile, arbitrator_load_reg_913, "arbitrator_load_reg_913");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_s_fu_410_p2, "tmp_s_fu_410_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, StreamIn_V_Data_V0_status, "StreamIn_V_Data_V0_status");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, StreamOut_V_Data_V1_status, "StreamOut_V_Data_V1_status");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tmp_s_reg_918_pp0_iter1_reg, "tmp_s_reg_918_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_s_reg_918_pp0_iter2_reg, "tmp_s_reg_918_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_s_reg_918_pp0_iter3_reg, "tmp_s_reg_918_pp0_iter3_reg");
    sc_trace(mVcdFile, i_2_fu_416_p2, "i_2_fu_416_p2");
    sc_trace(mVcdFile, i_2_reg_922, "i_2_reg_922");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_Data_V_reg_967, "tmp_Data_V_reg_967");
    sc_trace(mVcdFile, tmp_Data_V_reg_967_pp0_iter2_reg, "tmp_Data_V_reg_967_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_User_V_reg_980, "tmp_User_V_reg_980");
    sc_trace(mVcdFile, tmp_User_V_reg_980_pp0_iter2_reg, "tmp_User_V_reg_980_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_User_V_reg_980_pp0_iter3_reg, "tmp_User_V_reg_980_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_User_V_reg_980_pp0_iter4_reg, "tmp_User_V_reg_980_pp0_iter4_reg");
    sc_trace(mVcdFile, buf_V_0_load_reg_985, "buf_V_0_load_reg_985");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, buf_V_1_load_reg_990, "buf_V_1_load_reg_990");
    sc_trace(mVcdFile, buf_V_2_load_reg_995, "buf_V_2_load_reg_995");
    sc_trace(mVcdFile, buf_V_3_load_reg_1000, "buf_V_3_load_reg_1000");
    sc_trace(mVcdFile, buf_V_4_load_reg_1005, "buf_V_4_load_reg_1005");
    sc_trace(mVcdFile, buf_V_5_load_reg_1010, "buf_V_5_load_reg_1010");
    sc_trace(mVcdFile, buf_V_6_load_reg_1015, "buf_V_6_load_reg_1015");
    sc_trace(mVcdFile, buf_V_7_load_reg_1020, "buf_V_7_load_reg_1020");
    sc_trace(mVcdFile, tmp_10_reg_1025, "tmp_10_reg_1025");
    sc_trace(mVcdFile, tmp_12_fu_560_p1, "tmp_12_fu_560_p1");
    sc_trace(mVcdFile, tmp_12_reg_1030, "tmp_12_reg_1030");
    sc_trace(mVcdFile, tmp_14_reg_1035, "tmp_14_reg_1035");
    sc_trace(mVcdFile, tmp_16_fu_594_p1, "tmp_16_fu_594_p1");
    sc_trace(mVcdFile, tmp_16_reg_1040, "tmp_16_reg_1040");
    sc_trace(mVcdFile, tmp_19_reg_1045, "tmp_19_reg_1045");
    sc_trace(mVcdFile, tmp_20_fu_628_p1, "tmp_20_fu_628_p1");
    sc_trace(mVcdFile, tmp_20_reg_1050, "tmp_20_reg_1050");
    sc_trace(mVcdFile, tmp_21_reg_1055, "tmp_21_reg_1055");
    sc_trace(mVcdFile, tmp_22_fu_662_p1, "tmp_22_fu_662_p1");
    sc_trace(mVcdFile, tmp_22_reg_1060, "tmp_22_reg_1060");
    sc_trace(mVcdFile, tmp_23_reg_1065, "tmp_23_reg_1065");
    sc_trace(mVcdFile, tmp_24_fu_696_p1, "tmp_24_fu_696_p1");
    sc_trace(mVcdFile, tmp_24_reg_1070, "tmp_24_reg_1070");
    sc_trace(mVcdFile, tmp_25_reg_1075, "tmp_25_reg_1075");
    sc_trace(mVcdFile, tmp_26_fu_730_p1, "tmp_26_fu_730_p1");
    sc_trace(mVcdFile, tmp_26_reg_1080, "tmp_26_reg_1080");
    sc_trace(mVcdFile, tmp_27_reg_1085, "tmp_27_reg_1085");
    sc_trace(mVcdFile, tmp_28_fu_764_p1, "tmp_28_fu_764_p1");
    sc_trace(mVcdFile, tmp_28_reg_1090, "tmp_28_reg_1090");
    sc_trace(mVcdFile, tmp_29_reg_1095, "tmp_29_reg_1095");
    sc_trace(mVcdFile, tmp_30_fu_798_p1, "tmp_30_fu_798_p1");
    sc_trace(mVcdFile, tmp_30_reg_1100, "tmp_30_reg_1100");
    sc_trace(mVcdFile, p_Result_22_7_fu_898_p1, "p_Result_22_7_fu_898_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_388_p4, "ap_phi_mux_i_phi_fu_388_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396, "ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396, "ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396, "ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396, "ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396, "ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396, "ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396");
    sc_trace(mVcdFile, i2_fu_422_p1, "i2_fu_422_p1");
    sc_trace(mVcdFile, i3_fu_442_p1, "i3_fu_442_p1");
    sc_trace(mVcdFile, StreamIn_V_Data_V0_update, "StreamIn_V_Data_V0_update");
    sc_trace(mVcdFile, StreamOut_V_Data_V1_update, "StreamOut_V_Data_V1_update");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_4_fu_902_p2, "tmp_4_fu_902_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_8_fu_536_p1, "tmp_8_fu_536_p1");
    sc_trace(mVcdFile, lhs_V_fu_539_p1, "lhs_V_fu_539_p1");
    sc_trace(mVcdFile, rhs_V_fu_543_p1, "rhs_V_fu_543_p1");
    sc_trace(mVcdFile, ret_V_9_fu_546_p2, "ret_V_9_fu_546_p2");
    sc_trace(mVcdFile, p_Result_18_1_fu_564_p4, "p_Result_18_1_fu_564_p4");
    sc_trace(mVcdFile, lhs_V_1_fu_573_p1, "lhs_V_1_fu_573_p1");
    sc_trace(mVcdFile, rhs_V_1_fu_577_p1, "rhs_V_1_fu_577_p1");
    sc_trace(mVcdFile, ret_V_9_1_fu_580_p2, "ret_V_9_1_fu_580_p2");
    sc_trace(mVcdFile, p_Result_18_2_fu_598_p4, "p_Result_18_2_fu_598_p4");
    sc_trace(mVcdFile, lhs_V_2_fu_607_p1, "lhs_V_2_fu_607_p1");
    sc_trace(mVcdFile, rhs_V_2_fu_611_p1, "rhs_V_2_fu_611_p1");
    sc_trace(mVcdFile, ret_V_9_2_fu_614_p2, "ret_V_9_2_fu_614_p2");
    sc_trace(mVcdFile, p_Result_18_3_fu_632_p4, "p_Result_18_3_fu_632_p4");
    sc_trace(mVcdFile, lhs_V_3_fu_641_p1, "lhs_V_3_fu_641_p1");
    sc_trace(mVcdFile, rhs_V_3_fu_645_p1, "rhs_V_3_fu_645_p1");
    sc_trace(mVcdFile, ret_V_9_3_fu_648_p2, "ret_V_9_3_fu_648_p2");
    sc_trace(mVcdFile, p_Result_18_4_fu_666_p4, "p_Result_18_4_fu_666_p4");
    sc_trace(mVcdFile, lhs_V_4_fu_675_p1, "lhs_V_4_fu_675_p1");
    sc_trace(mVcdFile, rhs_V_4_fu_679_p1, "rhs_V_4_fu_679_p1");
    sc_trace(mVcdFile, ret_V_9_4_fu_682_p2, "ret_V_9_4_fu_682_p2");
    sc_trace(mVcdFile, p_Result_18_5_fu_700_p4, "p_Result_18_5_fu_700_p4");
    sc_trace(mVcdFile, lhs_V_5_fu_709_p1, "lhs_V_5_fu_709_p1");
    sc_trace(mVcdFile, rhs_V_5_fu_713_p1, "rhs_V_5_fu_713_p1");
    sc_trace(mVcdFile, ret_V_9_5_fu_716_p2, "ret_V_9_5_fu_716_p2");
    sc_trace(mVcdFile, p_Result_18_6_fu_734_p4, "p_Result_18_6_fu_734_p4");
    sc_trace(mVcdFile, lhs_V_6_fu_743_p1, "lhs_V_6_fu_743_p1");
    sc_trace(mVcdFile, rhs_V_6_fu_747_p1, "rhs_V_6_fu_747_p1");
    sc_trace(mVcdFile, ret_V_9_6_fu_750_p2, "ret_V_9_6_fu_750_p2");
    sc_trace(mVcdFile, p_Result_18_7_fu_768_p4, "p_Result_18_7_fu_768_p4");
    sc_trace(mVcdFile, lhs_V_7_fu_777_p1, "lhs_V_7_fu_777_p1");
    sc_trace(mVcdFile, rhs_V_7_fu_781_p1, "rhs_V_7_fu_781_p1");
    sc_trace(mVcdFile, ret_V_9_7_fu_784_p2, "ret_V_9_7_fu_784_p2");
    sc_trace(mVcdFile, tmp_5_fu_802_p3, "tmp_5_fu_802_p3");
    sc_trace(mVcdFile, tmp_7_fu_812_p3, "tmp_7_fu_812_p3");
    sc_trace(mVcdFile, tmp_9_fu_822_p3, "tmp_9_fu_822_p3");
    sc_trace(mVcdFile, tmp_2_fu_832_p3, "tmp_2_fu_832_p3");
    sc_trace(mVcdFile, tmp_1_fu_842_p3, "tmp_1_fu_842_p3");
    sc_trace(mVcdFile, tmp_3_fu_852_p3, "tmp_3_fu_852_p3");
    sc_trace(mVcdFile, tmp_6_fu_862_p3, "tmp_6_fu_862_p3");
    sc_trace(mVcdFile, tmp_11_fu_872_p3, "tmp_11_fu_872_p3");
    sc_trace(mVcdFile, tmp_V_6_trunc_fu_868_p1, "tmp_V_6_trunc_fu_868_p1");
    sc_trace(mVcdFile, tmp_V_5_trunc_fu_858_p1, "tmp_V_5_trunc_fu_858_p1");
    sc_trace(mVcdFile, tmp_V_4_trunc_fu_848_p1, "tmp_V_4_trunc_fu_848_p1");
    sc_trace(mVcdFile, tmp_V_3_trunc_fu_838_p1, "tmp_V_3_trunc_fu_838_p1");
    sc_trace(mVcdFile, tmp_V_2_trunc_fu_828_p1, "tmp_V_2_trunc_fu_828_p1");
    sc_trace(mVcdFile, tmp_V_1_trunc_fu_818_p1, "tmp_V_1_trunc_fu_818_p1");
    sc_trace(mVcdFile, tmp_V_0_trunc_fu_808_p1, "tmp_V_0_trunc_fu_808_p1");
    sc_trace(mVcdFile, tmp_13_fu_878_p9, "tmp_13_fu_878_p9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_329, "ap_condition_329");
#endif

    }
}

pix_subtract::~pix_subtract() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete buf_V_0_U;
    delete buf_V_1_U;
    delete buf_V_2_U;
    delete buf_V_3_U;
    delete buf_V_4_U;
    delete buf_V_5_U;
    delete buf_V_6_U;
    delete buf_V_7_U;
}

void pix_subtract::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter5 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_329.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, arbitrator_load_reg_913.read()))) {
            ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396 = StreamIn_V_Data_V_dout.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396 = ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        if ((esl_seteq<1,1,1>(arbitrator_load_reg_913.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918_pp0_iter3_reg.read()))) {
            ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396 = p_Result_22_7_fu_898_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396 = ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_384 = i_2_reg_922.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_384 = ap_const_lv14_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396 = ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396.read();
        i_2_reg_922 = i_2_fu_416_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396 = ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396 = ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arbitrator = tmp_4_fu_902_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        arbitrator_load_reg_913 = arbitrator.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(arbitrator_load_reg_913.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918_pp0_iter1_reg.read()))) {
        buf_V_0_load_reg_985 = buf_V_0_q0.read();
        buf_V_1_load_reg_990 = buf_V_1_q0.read();
        buf_V_2_load_reg_995 = buf_V_2_q0.read();
        buf_V_3_load_reg_1000 = buf_V_3_q0.read();
        buf_V_4_load_reg_1005 = buf_V_4_q0.read();
        buf_V_5_load_reg_1010 = buf_V_5_q0.read();
        buf_V_6_load_reg_1015 = buf_V_6_q0.read();
        buf_V_7_load_reg_1020 = buf_V_7_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(arbitrator_load_reg_913.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918_pp0_iter2_reg.read()))) {
        tmp_10_reg_1025 = ret_V_9_fu_546_p2.read().range(16, 16);
        tmp_12_reg_1030 = tmp_12_fu_560_p1.read();
        tmp_14_reg_1035 = ret_V_9_1_fu_580_p2.read().range(16, 16);
        tmp_16_reg_1040 = tmp_16_fu_594_p1.read();
        tmp_19_reg_1045 = ret_V_9_2_fu_614_p2.read().range(16, 16);
        tmp_20_reg_1050 = tmp_20_fu_628_p1.read();
        tmp_21_reg_1055 = ret_V_9_3_fu_648_p2.read().range(16, 16);
        tmp_22_reg_1060 = tmp_22_fu_662_p1.read();
        tmp_23_reg_1065 = ret_V_9_4_fu_682_p2.read().range(16, 16);
        tmp_24_reg_1070 = tmp_24_fu_696_p1.read();
        tmp_25_reg_1075 = ret_V_9_5_fu_716_p2.read().range(16, 16);
        tmp_26_reg_1080 = tmp_26_fu_730_p1.read();
        tmp_27_reg_1085 = ret_V_9_6_fu_750_p2.read().range(16, 16);
        tmp_28_reg_1090 = tmp_28_fu_764_p1.read();
        tmp_29_reg_1095 = ret_V_9_7_fu_784_p2.read().range(16, 16);
        tmp_30_reg_1100 = tmp_30_fu_798_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_Data_V_reg_967 = StreamIn_V_Data_V_dout.read();
        tmp_User_V_reg_980 = StreamIn_V_User_V_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        tmp_Data_V_reg_967_pp0_iter2_reg = tmp_Data_V_reg_967.read();
        tmp_User_V_reg_980_pp0_iter2_reg = tmp_User_V_reg_980.read();
        tmp_User_V_reg_980_pp0_iter3_reg = tmp_User_V_reg_980_pp0_iter2_reg.read();
        tmp_User_V_reg_980_pp0_iter4_reg = tmp_User_V_reg_980_pp0_iter3_reg.read();
        tmp_s_reg_918_pp0_iter2_reg = tmp_s_reg_918_pp0_iter1_reg.read();
        tmp_s_reg_918_pp0_iter3_reg = tmp_s_reg_918_pp0_iter2_reg.read();
        tmp_s_reg_918_pp0_iter4_reg = tmp_s_reg_918_pp0_iter3_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_s_reg_918 = tmp_s_fu_410_p2.read();
        tmp_s_reg_918_pp0_iter1_reg = tmp_s_reg_918.read();
    }
}

void pix_subtract::thread_StreamIn_V_Data_V0_status() {
    StreamIn_V_Data_V0_status = (StreamIn_V_Data_V_empty_n.read() & StreamIn_V_User_V_empty_n.read());
}

void pix_subtract::thread_StreamIn_V_Data_V0_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        StreamIn_V_Data_V0_update = ap_const_logic_1;
    } else {
        StreamIn_V_Data_V0_update = ap_const_logic_0;
    }
}

void pix_subtract::thread_StreamIn_V_Data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()))) {
        StreamIn_V_Data_V_blk_n = StreamIn_V_Data_V_empty_n.read();
    } else {
        StreamIn_V_Data_V_blk_n = ap_const_logic_1;
    }
}

void pix_subtract::thread_StreamIn_V_Data_V_read() {
    StreamIn_V_Data_V_read = StreamIn_V_Data_V0_update.read();
}

void pix_subtract::thread_StreamIn_V_User_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()))) {
        StreamIn_V_User_V_blk_n = StreamIn_V_User_V_empty_n.read();
    } else {
        StreamIn_V_User_V_blk_n = ap_const_logic_1;
    }
}

void pix_subtract::thread_StreamIn_V_User_V_read() {
    StreamIn_V_User_V_read = StreamIn_V_Data_V0_update.read();
}

void pix_subtract::thread_StreamOut_V_Data_V1_status() {
    StreamOut_V_Data_V1_status = (StreamOut_V_Data_V_full_n.read() & StreamOut_V_User_V_full_n.read());
}

void pix_subtract::thread_StreamOut_V_Data_V1_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918_pp0_iter4_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        StreamOut_V_Data_V1_update = ap_const_logic_1;
    } else {
        StreamOut_V_Data_V1_update = ap_const_logic_0;
    }
}

void pix_subtract::thread_StreamOut_V_Data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918_pp0_iter4_reg.read()))) {
        StreamOut_V_Data_V_blk_n = StreamOut_V_Data_V_full_n.read();
    } else {
        StreamOut_V_Data_V_blk_n = ap_const_logic_1;
    }
}

void pix_subtract::thread_StreamOut_V_Data_V_din() {
    StreamOut_V_Data_V_din = ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396.read();
}

void pix_subtract::thread_StreamOut_V_Data_V_write() {
    StreamOut_V_Data_V_write = StreamOut_V_Data_V1_update.read();
}

void pix_subtract::thread_StreamOut_V_User_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918_pp0_iter4_reg.read()))) {
        StreamOut_V_User_V_blk_n = StreamOut_V_User_V_full_n.read();
    } else {
        StreamOut_V_User_V_blk_n = ap_const_logic_1;
    }
}

void pix_subtract::thread_StreamOut_V_User_V_din() {
    StreamOut_V_User_V_din = tmp_User_V_reg_980_pp0_iter4_reg.read();
}

void pix_subtract::thread_StreamOut_V_User_V_write() {
    StreamOut_V_User_V_write = StreamOut_V_Data_V1_update.read();
}

void pix_subtract::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void pix_subtract::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pix_subtract::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[2];
}

void pix_subtract::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pix_subtract::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, StreamIn_V_Data_V0_status.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918_pp0_iter4_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, StreamOut_V_Data_V1_status.read())));
}

void pix_subtract::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, StreamIn_V_Data_V0_status.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918_pp0_iter4_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, StreamOut_V_Data_V1_status.read())));
}

void pix_subtract::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, StreamIn_V_Data_V0_status.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918_pp0_iter4_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, StreamOut_V_Data_V1_status.read())));
}

void pix_subtract::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void pix_subtract::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pix_subtract::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && esl_seteq<1,1,1>(ap_const_logic_0, StreamIn_V_Data_V0_status.read()));
}

void pix_subtract::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pix_subtract::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pix_subtract::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pix_subtract::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918_pp0_iter4_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, StreamOut_V_Data_V1_status.read()));
}

void pix_subtract::thread_ap_condition_329() {
    ap_condition_329 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void pix_subtract::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(tmp_s_fu_410_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void pix_subtract::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void pix_subtract::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void pix_subtract::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pix_subtract::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void pix_subtract::thread_ap_phi_mux_i_phi_fu_388_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()))) {
        ap_phi_mux_i_phi_fu_388_p4 = i_2_reg_922.read();
    } else {
        ap_phi_mux_i_phi_fu_388_p4 = i_reg_384.read();
    }
}

void pix_subtract::thread_ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396() {
    ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396 =  (sc_lv<128>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void pix_subtract::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void pix_subtract::thread_buf_V_0_address0() {
    buf_V_0_address0 =  (sc_lv<14>) (i2_fu_422_p1.read());
}

void pix_subtract::thread_buf_V_0_address1() {
    buf_V_0_address1 =  (sc_lv<14>) (i3_fu_442_p1.read());
}

void pix_subtract::thread_buf_V_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_V_0_ce0 = ap_const_logic_1;
    } else {
        buf_V_0_ce0 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buf_V_0_ce1 = ap_const_logic_1;
    } else {
        buf_V_0_ce1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_0_d1() {
    buf_V_0_d1 = StreamIn_V_Data_V_dout.read().range(12-1, 0);
}

void pix_subtract::thread_buf_V_0_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, arbitrator_load_reg_913.read()))) {
        buf_V_0_we1 = ap_const_logic_1;
    } else {
        buf_V_0_we1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_1_address0() {
    buf_V_1_address0 =  (sc_lv<14>) (i2_fu_422_p1.read());
}

void pix_subtract::thread_buf_V_1_address1() {
    buf_V_1_address1 =  (sc_lv<14>) (i3_fu_442_p1.read());
}

void pix_subtract::thread_buf_V_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_V_1_ce0 = ap_const_logic_1;
    } else {
        buf_V_1_ce0 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buf_V_1_ce1 = ap_const_logic_1;
    } else {
        buf_V_1_ce1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_1_d1() {
    buf_V_1_d1 = StreamIn_V_Data_V_dout.read().range(27, 16);
}

void pix_subtract::thread_buf_V_1_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, arbitrator_load_reg_913.read()))) {
        buf_V_1_we1 = ap_const_logic_1;
    } else {
        buf_V_1_we1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_2_address0() {
    buf_V_2_address0 =  (sc_lv<14>) (i2_fu_422_p1.read());
}

void pix_subtract::thread_buf_V_2_address1() {
    buf_V_2_address1 =  (sc_lv<14>) (i3_fu_442_p1.read());
}

void pix_subtract::thread_buf_V_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_V_2_ce0 = ap_const_logic_1;
    } else {
        buf_V_2_ce0 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buf_V_2_ce1 = ap_const_logic_1;
    } else {
        buf_V_2_ce1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_2_d1() {
    buf_V_2_d1 = StreamIn_V_Data_V_dout.read().range(43, 32);
}

void pix_subtract::thread_buf_V_2_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, arbitrator_load_reg_913.read()))) {
        buf_V_2_we1 = ap_const_logic_1;
    } else {
        buf_V_2_we1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_3_address0() {
    buf_V_3_address0 =  (sc_lv<14>) (i2_fu_422_p1.read());
}

void pix_subtract::thread_buf_V_3_address1() {
    buf_V_3_address1 =  (sc_lv<14>) (i3_fu_442_p1.read());
}

void pix_subtract::thread_buf_V_3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_V_3_ce0 = ap_const_logic_1;
    } else {
        buf_V_3_ce0 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_3_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buf_V_3_ce1 = ap_const_logic_1;
    } else {
        buf_V_3_ce1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_3_d1() {
    buf_V_3_d1 = StreamIn_V_Data_V_dout.read().range(59, 48);
}

void pix_subtract::thread_buf_V_3_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, arbitrator_load_reg_913.read()))) {
        buf_V_3_we1 = ap_const_logic_1;
    } else {
        buf_V_3_we1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_4_address0() {
    buf_V_4_address0 =  (sc_lv<14>) (i2_fu_422_p1.read());
}

void pix_subtract::thread_buf_V_4_address1() {
    buf_V_4_address1 =  (sc_lv<14>) (i3_fu_442_p1.read());
}

void pix_subtract::thread_buf_V_4_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_V_4_ce0 = ap_const_logic_1;
    } else {
        buf_V_4_ce0 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_4_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buf_V_4_ce1 = ap_const_logic_1;
    } else {
        buf_V_4_ce1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_4_d1() {
    buf_V_4_d1 = StreamIn_V_Data_V_dout.read().range(75, 64);
}

void pix_subtract::thread_buf_V_4_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, arbitrator_load_reg_913.read()))) {
        buf_V_4_we1 = ap_const_logic_1;
    } else {
        buf_V_4_we1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_5_address0() {
    buf_V_5_address0 =  (sc_lv<14>) (i2_fu_422_p1.read());
}

void pix_subtract::thread_buf_V_5_address1() {
    buf_V_5_address1 =  (sc_lv<14>) (i3_fu_442_p1.read());
}

void pix_subtract::thread_buf_V_5_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_V_5_ce0 = ap_const_logic_1;
    } else {
        buf_V_5_ce0 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_5_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buf_V_5_ce1 = ap_const_logic_1;
    } else {
        buf_V_5_ce1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_5_d1() {
    buf_V_5_d1 = StreamIn_V_Data_V_dout.read().range(91, 80);
}

void pix_subtract::thread_buf_V_5_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, arbitrator_load_reg_913.read()))) {
        buf_V_5_we1 = ap_const_logic_1;
    } else {
        buf_V_5_we1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_6_address0() {
    buf_V_6_address0 =  (sc_lv<14>) (i2_fu_422_p1.read());
}

void pix_subtract::thread_buf_V_6_address1() {
    buf_V_6_address1 =  (sc_lv<14>) (i3_fu_442_p1.read());
}

void pix_subtract::thread_buf_V_6_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_V_6_ce0 = ap_const_logic_1;
    } else {
        buf_V_6_ce0 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_6_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buf_V_6_ce1 = ap_const_logic_1;
    } else {
        buf_V_6_ce1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_6_d1() {
    buf_V_6_d1 = StreamIn_V_Data_V_dout.read().range(107, 96);
}

void pix_subtract::thread_buf_V_6_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, arbitrator_load_reg_913.read()))) {
        buf_V_6_we1 = ap_const_logic_1;
    } else {
        buf_V_6_we1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_7_address0() {
    buf_V_7_address0 =  (sc_lv<14>) (i2_fu_422_p1.read());
}

void pix_subtract::thread_buf_V_7_address1() {
    buf_V_7_address1 =  (sc_lv<14>) (i3_fu_442_p1.read());
}

void pix_subtract::thread_buf_V_7_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_V_7_ce0 = ap_const_logic_1;
    } else {
        buf_V_7_ce0 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_7_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buf_V_7_ce1 = ap_const_logic_1;
    } else {
        buf_V_7_ce1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_buf_V_7_d1() {
    buf_V_7_d1 = StreamIn_V_Data_V_dout.read().range(123, 112);
}

void pix_subtract::thread_buf_V_7_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_918.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, arbitrator_load_reg_913.read()))) {
        buf_V_7_we1 = ap_const_logic_1;
    } else {
        buf_V_7_we1 = ap_const_logic_0;
    }
}

void pix_subtract::thread_i2_fu_422_p1() {
    i2_fu_422_p1 = esl_zext<64,14>(ap_phi_mux_i_phi_fu_388_p4.read());
}

void pix_subtract::thread_i3_fu_442_p1() {
    i3_fu_442_p1 = esl_zext<64,14>(i_reg_384.read());
}

void pix_subtract::thread_i_2_fu_416_p2() {
    i_2_fu_416_p2 = (!ap_phi_mux_i_phi_fu_388_p4.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(ap_phi_mux_i_phi_fu_388_p4.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void pix_subtract::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void pix_subtract::thread_lhs_V_1_fu_573_p1() {
    lhs_V_1_fu_573_p1 = esl_zext<17,16>(p_Result_18_1_fu_564_p4.read());
}

void pix_subtract::thread_lhs_V_2_fu_607_p1() {
    lhs_V_2_fu_607_p1 = esl_zext<17,16>(p_Result_18_2_fu_598_p4.read());
}

void pix_subtract::thread_lhs_V_3_fu_641_p1() {
    lhs_V_3_fu_641_p1 = esl_zext<17,16>(p_Result_18_3_fu_632_p4.read());
}

void pix_subtract::thread_lhs_V_4_fu_675_p1() {
    lhs_V_4_fu_675_p1 = esl_zext<17,16>(p_Result_18_4_fu_666_p4.read());
}

void pix_subtract::thread_lhs_V_5_fu_709_p1() {
    lhs_V_5_fu_709_p1 = esl_zext<17,16>(p_Result_18_5_fu_700_p4.read());
}

void pix_subtract::thread_lhs_V_6_fu_743_p1() {
    lhs_V_6_fu_743_p1 = esl_zext<17,16>(p_Result_18_6_fu_734_p4.read());
}

void pix_subtract::thread_lhs_V_7_fu_777_p1() {
    lhs_V_7_fu_777_p1 = esl_zext<17,16>(p_Result_18_7_fu_768_p4.read());
}

void pix_subtract::thread_lhs_V_fu_539_p1() {
    lhs_V_fu_539_p1 = esl_zext<17,16>(tmp_8_fu_536_p1.read());
}

void pix_subtract::thread_p_Result_18_1_fu_564_p4() {
    p_Result_18_1_fu_564_p4 = tmp_Data_V_reg_967_pp0_iter2_reg.read().range(31, 16);
}

void pix_subtract::thread_p_Result_18_2_fu_598_p4() {
    p_Result_18_2_fu_598_p4 = tmp_Data_V_reg_967_pp0_iter2_reg.read().range(47, 32);
}

void pix_subtract::thread_p_Result_18_3_fu_632_p4() {
    p_Result_18_3_fu_632_p4 = tmp_Data_V_reg_967_pp0_iter2_reg.read().range(63, 48);
}

void pix_subtract::thread_p_Result_18_4_fu_666_p4() {
    p_Result_18_4_fu_666_p4 = tmp_Data_V_reg_967_pp0_iter2_reg.read().range(79, 64);
}

void pix_subtract::thread_p_Result_18_5_fu_700_p4() {
    p_Result_18_5_fu_700_p4 = tmp_Data_V_reg_967_pp0_iter2_reg.read().range(95, 80);
}

void pix_subtract::thread_p_Result_18_6_fu_734_p4() {
    p_Result_18_6_fu_734_p4 = tmp_Data_V_reg_967_pp0_iter2_reg.read().range(111, 96);
}

void pix_subtract::thread_p_Result_18_7_fu_768_p4() {
    p_Result_18_7_fu_768_p4 = tmp_Data_V_reg_967_pp0_iter2_reg.read().range(127, 112);
}

void pix_subtract::thread_p_Result_22_7_fu_898_p1() {
    p_Result_22_7_fu_898_p1 = esl_zext<128,124>(tmp_13_fu_878_p9.read());
}

void pix_subtract::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void pix_subtract::thread_ret_V_9_1_fu_580_p2() {
    ret_V_9_1_fu_580_p2 = (!lhs_V_1_fu_573_p1.read().is_01() || !rhs_V_1_fu_577_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(lhs_V_1_fu_573_p1.read()) - sc_biguint<17>(rhs_V_1_fu_577_p1.read()));
}

void pix_subtract::thread_ret_V_9_2_fu_614_p2() {
    ret_V_9_2_fu_614_p2 = (!lhs_V_2_fu_607_p1.read().is_01() || !rhs_V_2_fu_611_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(lhs_V_2_fu_607_p1.read()) - sc_biguint<17>(rhs_V_2_fu_611_p1.read()));
}

void pix_subtract::thread_ret_V_9_3_fu_648_p2() {
    ret_V_9_3_fu_648_p2 = (!lhs_V_3_fu_641_p1.read().is_01() || !rhs_V_3_fu_645_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(lhs_V_3_fu_641_p1.read()) - sc_biguint<17>(rhs_V_3_fu_645_p1.read()));
}

void pix_subtract::thread_ret_V_9_4_fu_682_p2() {
    ret_V_9_4_fu_682_p2 = (!lhs_V_4_fu_675_p1.read().is_01() || !rhs_V_4_fu_679_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(lhs_V_4_fu_675_p1.read()) - sc_biguint<17>(rhs_V_4_fu_679_p1.read()));
}

void pix_subtract::thread_ret_V_9_5_fu_716_p2() {
    ret_V_9_5_fu_716_p2 = (!lhs_V_5_fu_709_p1.read().is_01() || !rhs_V_5_fu_713_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(lhs_V_5_fu_709_p1.read()) - sc_biguint<17>(rhs_V_5_fu_713_p1.read()));
}

void pix_subtract::thread_ret_V_9_6_fu_750_p2() {
    ret_V_9_6_fu_750_p2 = (!lhs_V_6_fu_743_p1.read().is_01() || !rhs_V_6_fu_747_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(lhs_V_6_fu_743_p1.read()) - sc_biguint<17>(rhs_V_6_fu_747_p1.read()));
}

void pix_subtract::thread_ret_V_9_7_fu_784_p2() {
    ret_V_9_7_fu_784_p2 = (!lhs_V_7_fu_777_p1.read().is_01() || !rhs_V_7_fu_781_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(lhs_V_7_fu_777_p1.read()) - sc_biguint<17>(rhs_V_7_fu_781_p1.read()));
}

void pix_subtract::thread_ret_V_9_fu_546_p2() {
    ret_V_9_fu_546_p2 = (!lhs_V_fu_539_p1.read().is_01() || !rhs_V_fu_543_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(lhs_V_fu_539_p1.read()) - sc_biguint<17>(rhs_V_fu_543_p1.read()));
}

void pix_subtract::thread_rhs_V_1_fu_577_p1() {
    rhs_V_1_fu_577_p1 = esl_zext<17,12>(buf_V_1_load_reg_990.read());
}

void pix_subtract::thread_rhs_V_2_fu_611_p1() {
    rhs_V_2_fu_611_p1 = esl_zext<17,12>(buf_V_2_load_reg_995.read());
}

void pix_subtract::thread_rhs_V_3_fu_645_p1() {
    rhs_V_3_fu_645_p1 = esl_zext<17,12>(buf_V_3_load_reg_1000.read());
}

void pix_subtract::thread_rhs_V_4_fu_679_p1() {
    rhs_V_4_fu_679_p1 = esl_zext<17,12>(buf_V_4_load_reg_1005.read());
}

void pix_subtract::thread_rhs_V_5_fu_713_p1() {
    rhs_V_5_fu_713_p1 = esl_zext<17,12>(buf_V_5_load_reg_1010.read());
}

void pix_subtract::thread_rhs_V_6_fu_747_p1() {
    rhs_V_6_fu_747_p1 = esl_zext<17,12>(buf_V_6_load_reg_1015.read());
}

void pix_subtract::thread_rhs_V_7_fu_781_p1() {
    rhs_V_7_fu_781_p1 = esl_zext<17,12>(buf_V_7_load_reg_1020.read());
}

void pix_subtract::thread_rhs_V_fu_543_p1() {
    rhs_V_fu_543_p1 = esl_zext<17,12>(buf_V_0_load_reg_985.read());
}

void pix_subtract::thread_start_out() {
    start_out = real_start.read();
}

void pix_subtract::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void pix_subtract::thread_tmp_11_fu_872_p3() {
    tmp_11_fu_872_p3 = (!tmp_29_reg_1095.read()[0].is_01())? sc_lv<12>(): ((tmp_29_reg_1095.read()[0].to_bool())? ap_const_lv12_0: tmp_30_reg_1100.read());
}

void pix_subtract::thread_tmp_12_fu_560_p1() {
    tmp_12_fu_560_p1 = ret_V_9_fu_546_p2.read().range(12-1, 0);
}

void pix_subtract::thread_tmp_13_fu_878_p9() {
    tmp_13_fu_878_p9 = esl_concat<108,16>(esl_concat<92,16>(esl_concat<76,16>(esl_concat<60,16>(esl_concat<44,16>(esl_concat<28,16>(esl_concat<12,16>(tmp_11_fu_872_p3.read(), tmp_V_6_trunc_fu_868_p1.read()), tmp_V_5_trunc_fu_858_p1.read()), tmp_V_4_trunc_fu_848_p1.read()), tmp_V_3_trunc_fu_838_p1.read()), tmp_V_2_trunc_fu_828_p1.read()), tmp_V_1_trunc_fu_818_p1.read()), tmp_V_0_trunc_fu_808_p1.read());
}

void pix_subtract::thread_tmp_16_fu_594_p1() {
    tmp_16_fu_594_p1 = ret_V_9_1_fu_580_p2.read().range(12-1, 0);
}

void pix_subtract::thread_tmp_1_fu_842_p3() {
    tmp_1_fu_842_p3 = (!tmp_23_reg_1065.read()[0].is_01())? sc_lv<12>(): ((tmp_23_reg_1065.read()[0].to_bool())? ap_const_lv12_0: tmp_24_reg_1070.read());
}

void pix_subtract::thread_tmp_20_fu_628_p1() {
    tmp_20_fu_628_p1 = ret_V_9_2_fu_614_p2.read().range(12-1, 0);
}

void pix_subtract::thread_tmp_22_fu_662_p1() {
    tmp_22_fu_662_p1 = ret_V_9_3_fu_648_p2.read().range(12-1, 0);
}

void pix_subtract::thread_tmp_24_fu_696_p1() {
    tmp_24_fu_696_p1 = ret_V_9_4_fu_682_p2.read().range(12-1, 0);
}

void pix_subtract::thread_tmp_26_fu_730_p1() {
    tmp_26_fu_730_p1 = ret_V_9_5_fu_716_p2.read().range(12-1, 0);
}

void pix_subtract::thread_tmp_28_fu_764_p1() {
    tmp_28_fu_764_p1 = ret_V_9_6_fu_750_p2.read().range(12-1, 0);
}

void pix_subtract::thread_tmp_2_fu_832_p3() {
    tmp_2_fu_832_p3 = (!tmp_21_reg_1055.read()[0].is_01())? sc_lv<12>(): ((tmp_21_reg_1055.read()[0].to_bool())? ap_const_lv12_0: tmp_22_reg_1060.read());
}

void pix_subtract::thread_tmp_30_fu_798_p1() {
    tmp_30_fu_798_p1 = ret_V_9_7_fu_784_p2.read().range(12-1, 0);
}

void pix_subtract::thread_tmp_3_fu_852_p3() {
    tmp_3_fu_852_p3 = (!tmp_25_reg_1075.read()[0].is_01())? sc_lv<12>(): ((tmp_25_reg_1075.read()[0].to_bool())? ap_const_lv12_0: tmp_26_reg_1080.read());
}

void pix_subtract::thread_tmp_4_fu_902_p2() {
    tmp_4_fu_902_p2 = (arbitrator_load_reg_913.read() ^ ap_const_lv1_1);
}

void pix_subtract::thread_tmp_5_fu_802_p3() {
    tmp_5_fu_802_p3 = (!tmp_10_reg_1025.read()[0].is_01())? sc_lv<12>(): ((tmp_10_reg_1025.read()[0].to_bool())? ap_const_lv12_0: tmp_12_reg_1030.read());
}

void pix_subtract::thread_tmp_6_fu_862_p3() {
    tmp_6_fu_862_p3 = (!tmp_27_reg_1085.read()[0].is_01())? sc_lv<12>(): ((tmp_27_reg_1085.read()[0].to_bool())? ap_const_lv12_0: tmp_28_reg_1090.read());
}

void pix_subtract::thread_tmp_7_fu_812_p3() {
    tmp_7_fu_812_p3 = (!tmp_14_reg_1035.read()[0].is_01())? sc_lv<12>(): ((tmp_14_reg_1035.read()[0].to_bool())? ap_const_lv12_0: tmp_16_reg_1040.read());
}

void pix_subtract::thread_tmp_8_fu_536_p1() {
    tmp_8_fu_536_p1 = tmp_Data_V_reg_967_pp0_iter2_reg.read().range(16-1, 0);
}

void pix_subtract::thread_tmp_9_fu_822_p3() {
    tmp_9_fu_822_p3 = (!tmp_19_reg_1045.read()[0].is_01())? sc_lv<12>(): ((tmp_19_reg_1045.read()[0].to_bool())? ap_const_lv12_0: tmp_20_reg_1050.read());
}

void pix_subtract::thread_tmp_V_0_trunc_fu_808_p1() {
    tmp_V_0_trunc_fu_808_p1 = esl_zext<16,12>(tmp_5_fu_802_p3.read());
}

void pix_subtract::thread_tmp_V_1_trunc_fu_818_p1() {
    tmp_V_1_trunc_fu_818_p1 = esl_zext<16,12>(tmp_7_fu_812_p3.read());
}

void pix_subtract::thread_tmp_V_2_trunc_fu_828_p1() {
    tmp_V_2_trunc_fu_828_p1 = esl_zext<16,12>(tmp_9_fu_822_p3.read());
}

void pix_subtract::thread_tmp_V_3_trunc_fu_838_p1() {
    tmp_V_3_trunc_fu_838_p1 = esl_zext<16,12>(tmp_2_fu_832_p3.read());
}

void pix_subtract::thread_tmp_V_4_trunc_fu_848_p1() {
    tmp_V_4_trunc_fu_848_p1 = esl_zext<16,12>(tmp_1_fu_842_p3.read());
}

void pix_subtract::thread_tmp_V_5_trunc_fu_858_p1() {
    tmp_V_5_trunc_fu_858_p1 = esl_zext<16,12>(tmp_3_fu_852_p3.read());
}

void pix_subtract::thread_tmp_V_6_trunc_fu_868_p1() {
    tmp_V_6_trunc_fu_868_p1 = esl_zext<16,12>(tmp_6_fu_862_p3.read());
}

void pix_subtract::thread_tmp_s_fu_410_p2() {
    tmp_s_fu_410_p2 = (!ap_phi_mux_i_phi_fu_388_p4.read().is_01() || !ap_const_lv14_2800.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_phi_fu_388_p4.read() == ap_const_lv14_2800);
}

void pix_subtract::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_s_fu_410_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_s_fu_410_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

