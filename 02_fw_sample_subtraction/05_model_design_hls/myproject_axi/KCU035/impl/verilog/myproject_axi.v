// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_axi,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku035-fbva676-2-e,HLS_INPUT_CLOCK=2.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.534000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=214,HLS_SYN_DSP=0,HLS_SYN_FF=3339,HLS_SYN_LUT=4517,HLS_VERSION=2018_3}" *)

module myproject_axi (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        VideoIn_TDATA,
        VideoIn_TVALID,
        VideoIn_TREADY,
        VideoIn_TUSER,
        VideoOut_TDATA,
        VideoOut_TVALID,
        VideoOut_TREADY,
        VideoOut_TUSER,
        MetaIn_StreamId,
        MetaIn_StreamId_ap_vld,
        MetaIn_SourceTag,
        MetaIn_SourceTag_ap_vld,
        MetaIn_Xsize_V,
        MetaIn_Xsize_V_ap_vld,
        MetaIn_Xoffs_V,
        MetaIn_Xoffs_V_ap_vld,
        MetaIn_Ysize_V,
        MetaIn_Ysize_V_ap_vld,
        MetaIn_Yoffs_V,
        MetaIn_Yoffs_V_ap_vld,
        MetaIn_DsizeL_V,
        MetaIn_DsizeL_V_ap_vld,
        MetaIn_PixelF,
        MetaIn_PixelF_ap_vld,
        MetaIn_TapG,
        MetaIn_TapG_ap_vld,
        MetaIn_Flags,
        MetaIn_Flags_ap_vld,
        MetaIn_Timestamp,
        MetaIn_Timestamp_ap_vld,
        MetaIn_PixProcessingFlgs,
        MetaIn_PixProcessingFlgs_ap_vld,
        MetaIn_ModPixelF,
        MetaIn_ModPixelF_ap_vld,
        MetaIn_Status,
        MetaIn_Status_ap_vld,
        MetaOut_StreamId,
        MetaOut_SourceTag,
        MetaOut_Xsize_V,
        MetaOut_Xoffs_V,
        MetaOut_Ysize_V,
        MetaOut_Yoffs_V,
        MetaOut_DsizeL_V,
        MetaOut_PixelF,
        MetaOut_TapG,
        MetaOut_Flags,
        MetaOut_Timestamp,
        MetaOut_PixProcessingFlgs,
        MetaOut_ModPixelF,
        MetaOut_Status
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] VideoIn_TDATA;
input   VideoIn_TVALID;
output   VideoIn_TREADY;
input  [3:0] VideoIn_TUSER;
output  [127:0] VideoOut_TDATA;
output   VideoOut_TVALID;
input   VideoOut_TREADY;
output  [3:0] VideoOut_TUSER;
input  [7:0] MetaIn_StreamId;
input   MetaIn_StreamId_ap_vld;
input  [15:0] MetaIn_SourceTag;
input   MetaIn_SourceTag_ap_vld;
input  [23:0] MetaIn_Xsize_V;
input   MetaIn_Xsize_V_ap_vld;
input  [23:0] MetaIn_Xoffs_V;
input   MetaIn_Xoffs_V_ap_vld;
input  [23:0] MetaIn_Ysize_V;
input   MetaIn_Ysize_V_ap_vld;
input  [23:0] MetaIn_Yoffs_V;
input   MetaIn_Yoffs_V_ap_vld;
input  [23:0] MetaIn_DsizeL_V;
input   MetaIn_DsizeL_V_ap_vld;
input  [15:0] MetaIn_PixelF;
input   MetaIn_PixelF_ap_vld;
input  [15:0] MetaIn_TapG;
input   MetaIn_TapG_ap_vld;
input  [7:0] MetaIn_Flags;
input   MetaIn_Flags_ap_vld;
input  [31:0] MetaIn_Timestamp;
input   MetaIn_Timestamp_ap_vld;
input  [7:0] MetaIn_PixProcessingFlgs;
input   MetaIn_PixProcessingFlgs_ap_vld;
input  [31:0] MetaIn_ModPixelF;
input   MetaIn_ModPixelF_ap_vld;
input  [31:0] MetaIn_Status;
input   MetaIn_Status_ap_vld;
output  [7:0] MetaOut_StreamId;
output  [15:0] MetaOut_SourceTag;
output  [23:0] MetaOut_Xsize_V;
output  [23:0] MetaOut_Xoffs_V;
output  [23:0] MetaOut_Ysize_V;
output  [23:0] MetaOut_Yoffs_V;
output  [23:0] MetaOut_DsizeL_V;
output  [15:0] MetaOut_PixelF;
output  [15:0] MetaOut_TapG;
output  [7:0] MetaOut_Flags;
output  [31:0] MetaOut_Timestamp;
output  [7:0] MetaOut_PixProcessingFlgs;
output  [31:0] MetaOut_ModPixelF;
output  [31:0] MetaOut_Status;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] MetaOut_StreamId;
reg[15:0] MetaOut_SourceTag;
reg[23:0] MetaOut_Xsize_V;
reg[23:0] MetaOut_Xoffs_V;
reg[23:0] MetaOut_Ysize_V;
reg[23:0] MetaOut_Yoffs_V;
reg[23:0] MetaOut_DsizeL_V;
reg[15:0] MetaOut_PixelF;
reg[15:0] MetaOut_TapG;
reg[7:0] MetaOut_Flags;
reg[31:0] MetaOut_Timestamp;
reg[7:0] MetaOut_PixProcessingFlgs;
reg[31:0] MetaOut_ModPixelF;
reg[31:0] MetaOut_Status;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [127:0] VideoIn_V_Data_V_0_data_out;
wire    VideoIn_V_Data_V_0_vld_in;
wire    VideoIn_V_Data_V_0_vld_out;
wire    VideoIn_V_Data_V_0_ack_in;
reg    VideoIn_V_Data_V_0_ack_out;
reg   [127:0] VideoIn_V_Data_V_0_payload_A;
reg   [127:0] VideoIn_V_Data_V_0_payload_B;
reg    VideoIn_V_Data_V_0_sel_rd;
reg    VideoIn_V_Data_V_0_sel_wr;
wire    VideoIn_V_Data_V_0_sel;
wire    VideoIn_V_Data_V_0_load_A;
wire    VideoIn_V_Data_V_0_load_B;
reg   [1:0] VideoIn_V_Data_V_0_state;
wire    VideoIn_V_Data_V_0_state_cmp_full;
reg   [3:0] VideoIn_V_User_V_0_data_out;
wire    VideoIn_V_User_V_0_vld_in;
wire    VideoIn_V_User_V_0_vld_out;
wire    VideoIn_V_User_V_0_ack_in;
reg    VideoIn_V_User_V_0_ack_out;
reg   [3:0] VideoIn_V_User_V_0_payload_A;
reg   [3:0] VideoIn_V_User_V_0_payload_B;
reg    VideoIn_V_User_V_0_sel_rd;
reg    VideoIn_V_User_V_0_sel_wr;
wire    VideoIn_V_User_V_0_sel;
wire    VideoIn_V_User_V_0_load_A;
wire    VideoIn_V_User_V_0_load_B;
reg   [1:0] VideoIn_V_User_V_0_state;
wire    VideoIn_V_User_V_0_state_cmp_full;
reg   [127:0] VideoOut_V_Data_V_1_data_out;
wire    VideoOut_V_Data_V_1_vld_in;
wire    VideoOut_V_Data_V_1_vld_out;
wire    VideoOut_V_Data_V_1_ack_in;
wire    VideoOut_V_Data_V_1_ack_out;
reg   [127:0] VideoOut_V_Data_V_1_payload_A;
reg   [127:0] VideoOut_V_Data_V_1_payload_B;
reg    VideoOut_V_Data_V_1_sel_rd;
reg    VideoOut_V_Data_V_1_sel_wr;
wire    VideoOut_V_Data_V_1_sel;
wire    VideoOut_V_Data_V_1_load_A;
wire    VideoOut_V_Data_V_1_load_B;
reg   [1:0] VideoOut_V_Data_V_1_state;
wire    VideoOut_V_Data_V_1_state_cmp_full;
reg   [3:0] VideoOut_V_User_V_1_data_out;
wire    VideoOut_V_User_V_1_vld_in;
wire    VideoOut_V_User_V_1_vld_out;
wire    VideoOut_V_User_V_1_ack_in;
wire    VideoOut_V_User_V_1_ack_out;
reg   [3:0] VideoOut_V_User_V_1_payload_A;
reg   [3:0] VideoOut_V_User_V_1_payload_B;
reg    VideoOut_V_User_V_1_sel_rd;
reg    VideoOut_V_User_V_1_sel_wr;
wire    VideoOut_V_User_V_1_sel;
wire    VideoOut_V_User_V_1_load_A;
wire    VideoOut_V_User_V_1_load_B;
reg   [1:0] VideoOut_V_User_V_1_state;
wire    VideoOut_V_User_V_1_state_cmp_full;
reg   [7:0] MetaIn_StreamId_preg;
reg    MetaIn_StreamId_ap_vld_preg;
reg   [15:0] MetaIn_SourceTag_preg;
reg    MetaIn_SourceTag_ap_vld_preg;
reg   [23:0] MetaIn_Xsize_V_preg;
reg    MetaIn_Xsize_V_ap_vld_preg;
reg   [23:0] MetaIn_Xoffs_V_preg;
reg    MetaIn_Xoffs_V_ap_vld_preg;
reg   [23:0] MetaIn_Ysize_V_preg;
reg    MetaIn_Ysize_V_ap_vld_preg;
reg   [23:0] MetaIn_Yoffs_V_preg;
reg    MetaIn_Yoffs_V_ap_vld_preg;
reg   [23:0] MetaIn_DsizeL_V_preg;
reg    MetaIn_DsizeL_V_ap_vld_preg;
reg   [15:0] MetaIn_PixelF_preg;
reg    MetaIn_PixelF_ap_vld_preg;
reg   [15:0] MetaIn_TapG_preg;
reg    MetaIn_TapG_ap_vld_preg;
reg   [7:0] MetaIn_Flags_preg;
reg    MetaIn_Flags_ap_vld_preg;
reg   [31:0] MetaIn_Timestamp_preg;
reg    MetaIn_Timestamp_ap_vld_preg;
reg   [7:0] MetaIn_PixProcessingFlgs_preg;
reg    MetaIn_PixProcessingFlgs_ap_vld_preg;
reg   [31:0] MetaIn_ModPixelF_preg;
reg    MetaIn_ModPixelF_ap_vld_preg;
reg   [31:0] MetaIn_Status_preg;
reg    MetaIn_Status_ap_vld_preg;
reg    MetaIn_StreamId_blk_n;
wire    ap_CS_fsm_state2;
reg    MetaIn_SourceTag_blk_n;
reg    MetaIn_Xsize_V_blk_n;
reg    MetaIn_Xoffs_V_blk_n;
reg    MetaIn_Ysize_V_blk_n;
reg    MetaIn_Yoffs_V_blk_n;
reg    MetaIn_DsizeL_V_blk_n;
reg    MetaIn_PixelF_blk_n;
reg    MetaIn_TapG_blk_n;
reg    MetaIn_Flags_blk_n;
reg    MetaIn_Timestamp_blk_n;
reg    MetaIn_PixProcessingFlgs_blk_n;
reg    MetaIn_ModPixelF_blk_n;
reg    MetaIn_Status_blk_n;
wire   [127:0] grp_myproject_fu_320_VideoOut_TDATA;
wire   [3:0] grp_myproject_fu_320_VideoOut_TUSER;
wire    grp_myproject_fu_320_VideoIn_TVALID;
wire    grp_myproject_fu_320_VideoIn_TREADY;
wire    grp_myproject_fu_320_ap_start;
wire    grp_myproject_fu_320_VideoOut_TVALID;
wire    grp_myproject_fu_320_VideoOut_TREADY;
wire    grp_myproject_fu_320_ap_done;
wire    grp_myproject_fu_320_ap_ready;
wire    grp_myproject_fu_320_ap_idle;
reg    grp_myproject_fu_320_ap_continue;
reg    grp_myproject_fu_320_ap_start_reg;
reg    ap_block_state2_ignore_call65;
wire    ap_CS_fsm_state3;
wire    ap_sync_grp_myproject_fu_320_ap_ready;
wire    ap_sync_grp_myproject_fu_320_ap_done;
reg    ap_block_state3_on_subcall_done;
reg    ap_sync_reg_grp_myproject_fu_320_ap_ready;
reg    ap_sync_reg_grp_myproject_fu_320_ap_done;
reg    ap_block_state2;
reg   [7:0] MetaOut_StreamId_preg;
reg   [15:0] MetaOut_SourceTag_preg;
reg   [23:0] MetaOut_Xsize_V_preg;
reg   [23:0] MetaOut_Xoffs_V_preg;
reg   [23:0] MetaOut_Ysize_V_preg;
reg   [23:0] MetaOut_Yoffs_V_preg;
reg   [23:0] MetaOut_DsizeL_V_preg;
reg   [15:0] MetaOut_PixelF_preg;
reg   [15:0] MetaOut_TapG_preg;
reg   [7:0] MetaOut_Flags_preg;
reg   [31:0] MetaOut_Timestamp_preg;
reg   [7:0] MetaOut_PixProcessingFlgs_preg;
reg   [31:0] MetaOut_ModPixelF_preg;
reg   [31:0] MetaOut_Status_preg;
wire    ap_CS_fsm_state4;
reg    ap_block_state4;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 VideoIn_V_Data_V_0_sel_rd = 1'b0;
#0 VideoIn_V_Data_V_0_sel_wr = 1'b0;
#0 VideoIn_V_Data_V_0_state = 2'd0;
#0 VideoIn_V_User_V_0_sel_rd = 1'b0;
#0 VideoIn_V_User_V_0_sel_wr = 1'b0;
#0 VideoIn_V_User_V_0_state = 2'd0;
#0 VideoOut_V_Data_V_1_sel_rd = 1'b0;
#0 VideoOut_V_Data_V_1_sel_wr = 1'b0;
#0 VideoOut_V_Data_V_1_state = 2'd0;
#0 VideoOut_V_User_V_1_sel_rd = 1'b0;
#0 VideoOut_V_User_V_1_sel_wr = 1'b0;
#0 VideoOut_V_User_V_1_state = 2'd0;
#0 MetaIn_StreamId_preg = 8'd0;
#0 MetaIn_StreamId_ap_vld_preg = 1'b0;
#0 MetaIn_SourceTag_preg = 16'd0;
#0 MetaIn_SourceTag_ap_vld_preg = 1'b0;
#0 MetaIn_Xsize_V_preg = 24'd0;
#0 MetaIn_Xsize_V_ap_vld_preg = 1'b0;
#0 MetaIn_Xoffs_V_preg = 24'd0;
#0 MetaIn_Xoffs_V_ap_vld_preg = 1'b0;
#0 MetaIn_Ysize_V_preg = 24'd0;
#0 MetaIn_Ysize_V_ap_vld_preg = 1'b0;
#0 MetaIn_Yoffs_V_preg = 24'd0;
#0 MetaIn_Yoffs_V_ap_vld_preg = 1'b0;
#0 MetaIn_DsizeL_V_preg = 24'd0;
#0 MetaIn_DsizeL_V_ap_vld_preg = 1'b0;
#0 MetaIn_PixelF_preg = 16'd0;
#0 MetaIn_PixelF_ap_vld_preg = 1'b0;
#0 MetaIn_TapG_preg = 16'd0;
#0 MetaIn_TapG_ap_vld_preg = 1'b0;
#0 MetaIn_Flags_preg = 8'd0;
#0 MetaIn_Flags_ap_vld_preg = 1'b0;
#0 MetaIn_Timestamp_preg = 32'd0;
#0 MetaIn_Timestamp_ap_vld_preg = 1'b0;
#0 MetaIn_PixProcessingFlgs_preg = 8'd0;
#0 MetaIn_PixProcessingFlgs_ap_vld_preg = 1'b0;
#0 MetaIn_ModPixelF_preg = 32'd0;
#0 MetaIn_ModPixelF_ap_vld_preg = 1'b0;
#0 MetaIn_Status_preg = 32'd0;
#0 MetaIn_Status_ap_vld_preg = 1'b0;
#0 grp_myproject_fu_320_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_myproject_fu_320_ap_ready = 1'b0;
#0 ap_sync_reg_grp_myproject_fu_320_ap_done = 1'b0;
#0 MetaOut_StreamId_preg = 8'd0;
#0 MetaOut_SourceTag_preg = 16'd0;
#0 MetaOut_Xsize_V_preg = 24'd0;
#0 MetaOut_Xoffs_V_preg = 24'd0;
#0 MetaOut_Ysize_V_preg = 24'd0;
#0 MetaOut_Yoffs_V_preg = 24'd0;
#0 MetaOut_DsizeL_V_preg = 24'd0;
#0 MetaOut_PixelF_preg = 16'd0;
#0 MetaOut_TapG_preg = 16'd0;
#0 MetaOut_Flags_preg = 8'd0;
#0 MetaOut_Timestamp_preg = 32'd0;
#0 MetaOut_PixProcessingFlgs_preg = 8'd0;
#0 MetaOut_ModPixelF_preg = 32'd0;
#0 MetaOut_Status_preg = 32'd0;
end

myproject grp_myproject_fu_320(
    .VideoIn_TDATA(VideoIn_V_Data_V_0_data_out),
    .VideoIn_TUSER(VideoIn_V_User_V_0_data_out),
    .VideoOut_TDATA(grp_myproject_fu_320_VideoOut_TDATA),
    .VideoOut_TUSER(grp_myproject_fu_320_VideoOut_TUSER),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .VideoIn_TVALID(grp_myproject_fu_320_VideoIn_TVALID),
    .VideoIn_TREADY(grp_myproject_fu_320_VideoIn_TREADY),
    .ap_start(grp_myproject_fu_320_ap_start),
    .VideoOut_TVALID(grp_myproject_fu_320_VideoOut_TVALID),
    .VideoOut_TREADY(grp_myproject_fu_320_VideoOut_TREADY),
    .ap_done(grp_myproject_fu_320_ap_done),
    .ap_ready(grp_myproject_fu_320_ap_ready),
    .ap_idle(grp_myproject_fu_320_ap_idle),
    .ap_continue(grp_myproject_fu_320_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_DsizeL_V_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_DsizeL_V_ap_vld))) begin
            MetaIn_DsizeL_V_ap_vld_preg <= MetaIn_DsizeL_V_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_DsizeL_V_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_DsizeL_V_preg <= 24'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_DsizeL_V_ap_vld))) begin
            MetaIn_DsizeL_V_preg <= MetaIn_DsizeL_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Flags_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Flags_ap_vld))) begin
            MetaIn_Flags_ap_vld_preg <= MetaIn_Flags_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_Flags_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Flags_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Flags_ap_vld))) begin
            MetaIn_Flags_preg <= MetaIn_Flags;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_ModPixelF_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_ModPixelF_ap_vld))) begin
            MetaIn_ModPixelF_ap_vld_preg <= MetaIn_ModPixelF_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_ModPixelF_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_ModPixelF_preg <= 32'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_ModPixelF_ap_vld))) begin
            MetaIn_ModPixelF_preg <= MetaIn_ModPixelF;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_PixProcessingFlgs_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_PixProcessingFlgs_ap_vld))) begin
            MetaIn_PixProcessingFlgs_ap_vld_preg <= MetaIn_PixProcessingFlgs_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_PixProcessingFlgs_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_PixProcessingFlgs_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_PixProcessingFlgs_ap_vld))) begin
            MetaIn_PixProcessingFlgs_preg <= MetaIn_PixProcessingFlgs;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_PixelF_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_PixelF_ap_vld))) begin
            MetaIn_PixelF_ap_vld_preg <= MetaIn_PixelF_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_PixelF_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_PixelF_preg <= 16'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_PixelF_ap_vld))) begin
            MetaIn_PixelF_preg <= MetaIn_PixelF;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_SourceTag_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_SourceTag_ap_vld))) begin
            MetaIn_SourceTag_ap_vld_preg <= MetaIn_SourceTag_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_SourceTag_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_SourceTag_preg <= 16'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_SourceTag_ap_vld))) begin
            MetaIn_SourceTag_preg <= MetaIn_SourceTag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Status_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Status_ap_vld))) begin
            MetaIn_Status_ap_vld_preg <= MetaIn_Status_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_Status_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Status_preg <= 32'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Status_ap_vld))) begin
            MetaIn_Status_preg <= MetaIn_Status;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_StreamId_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_StreamId_ap_vld))) begin
            MetaIn_StreamId_ap_vld_preg <= MetaIn_StreamId_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_StreamId_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_StreamId_preg <= 8'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_StreamId_ap_vld))) begin
            MetaIn_StreamId_preg <= MetaIn_StreamId;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_TapG_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_TapG_ap_vld))) begin
            MetaIn_TapG_ap_vld_preg <= MetaIn_TapG_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_TapG_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_TapG_preg <= 16'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_TapG_ap_vld))) begin
            MetaIn_TapG_preg <= MetaIn_TapG;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Timestamp_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Timestamp_ap_vld))) begin
            MetaIn_Timestamp_ap_vld_preg <= MetaIn_Timestamp_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_Timestamp_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Timestamp_preg <= 32'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Timestamp_ap_vld))) begin
            MetaIn_Timestamp_preg <= MetaIn_Timestamp;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Xoffs_V_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Xoffs_V_ap_vld))) begin
            MetaIn_Xoffs_V_ap_vld_preg <= MetaIn_Xoffs_V_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_Xoffs_V_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Xoffs_V_preg <= 24'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Xoffs_V_ap_vld))) begin
            MetaIn_Xoffs_V_preg <= MetaIn_Xoffs_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Xsize_V_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Xsize_V_ap_vld))) begin
            MetaIn_Xsize_V_ap_vld_preg <= MetaIn_Xsize_V_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_Xsize_V_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Xsize_V_preg <= 24'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Xsize_V_ap_vld))) begin
            MetaIn_Xsize_V_preg <= MetaIn_Xsize_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Yoffs_V_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Yoffs_V_ap_vld))) begin
            MetaIn_Yoffs_V_ap_vld_preg <= MetaIn_Yoffs_V_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_Yoffs_V_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Yoffs_V_preg <= 24'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Yoffs_V_ap_vld))) begin
            MetaIn_Yoffs_V_preg <= MetaIn_Yoffs_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Ysize_V_ap_vld_preg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Ysize_V_ap_vld))) begin
            MetaIn_Ysize_V_ap_vld_preg <= MetaIn_Ysize_V_ap_vld;
        end else if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (1'b1 == ap_CS_fsm_state4))) begin
            MetaIn_Ysize_V_ap_vld_preg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaIn_Ysize_V_preg <= 24'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == MetaIn_Ysize_V_ap_vld))) begin
            MetaIn_Ysize_V_preg <= MetaIn_Ysize_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_DsizeL_V_preg <= 24'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_DsizeL_V_preg <= MetaIn_DsizeL_V_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_Flags_preg <= 8'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_Flags_preg <= MetaIn_Flags_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_ModPixelF_preg <= 32'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_ModPixelF_preg <= MetaIn_ModPixelF_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_PixProcessingFlgs_preg <= 8'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_PixProcessingFlgs_preg <= MetaIn_PixProcessingFlgs_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_PixelF_preg <= 16'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_PixelF_preg <= MetaIn_PixelF_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_SourceTag_preg <= 16'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_SourceTag_preg <= MetaIn_SourceTag_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_Status_preg <= 32'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_Status_preg <= MetaIn_Status_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_StreamId_preg <= 8'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_StreamId_preg <= MetaIn_StreamId_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_TapG_preg <= 16'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_TapG_preg <= MetaIn_TapG_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_Timestamp_preg <= 32'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_Timestamp_preg <= MetaIn_Timestamp_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_Xoffs_V_preg <= 24'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_Xoffs_V_preg <= MetaIn_Xoffs_V_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_Xsize_V_preg <= 24'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_Xsize_V_preg <= MetaIn_Xsize_V_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_Yoffs_V_preg <= 24'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_Yoffs_V_preg <= MetaIn_Yoffs_V_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MetaOut_Ysize_V_preg <= 24'd0;
    end else begin
        if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
            MetaOut_Ysize_V_preg <= MetaIn_Ysize_V_preg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoIn_V_Data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == VideoIn_V_Data_V_0_ack_out) & (1'b1 == VideoIn_V_Data_V_0_vld_out))) begin
            VideoIn_V_Data_V_0_sel_rd <= ~VideoIn_V_Data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoIn_V_Data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == VideoIn_V_Data_V_0_ack_in) & (1'b1 == VideoIn_V_Data_V_0_vld_in))) begin
            VideoIn_V_Data_V_0_sel_wr <= ~VideoIn_V_Data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoIn_V_Data_V_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == VideoIn_V_Data_V_0_state) & (1'b0 == VideoIn_V_Data_V_0_vld_in)) | ((2'd3 == VideoIn_V_Data_V_0_state) & (1'b0 == VideoIn_V_Data_V_0_vld_in) & (1'b1 == VideoIn_V_Data_V_0_ack_out)))) begin
            VideoIn_V_Data_V_0_state <= 2'd2;
        end else if ((((2'd1 == VideoIn_V_Data_V_0_state) & (1'b0 == VideoIn_V_Data_V_0_ack_out)) | ((2'd3 == VideoIn_V_Data_V_0_state) & (1'b0 == VideoIn_V_Data_V_0_ack_out) & (1'b1 == VideoIn_V_Data_V_0_vld_in)))) begin
            VideoIn_V_Data_V_0_state <= 2'd1;
        end else if (((~((1'b0 == VideoIn_V_Data_V_0_vld_in) & (1'b1 == VideoIn_V_Data_V_0_ack_out)) & ~((1'b0 == VideoIn_V_Data_V_0_ack_out) & (1'b1 == VideoIn_V_Data_V_0_vld_in)) & (2'd3 == VideoIn_V_Data_V_0_state)) | ((2'd1 == VideoIn_V_Data_V_0_state) & (1'b1 == VideoIn_V_Data_V_0_ack_out)) | ((2'd2 == VideoIn_V_Data_V_0_state) & (1'b1 == VideoIn_V_Data_V_0_vld_in)))) begin
            VideoIn_V_Data_V_0_state <= 2'd3;
        end else begin
            VideoIn_V_Data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoIn_V_User_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == VideoIn_V_User_V_0_vld_out) & (1'b1 == VideoIn_V_User_V_0_ack_out))) begin
            VideoIn_V_User_V_0_sel_rd <= ~VideoIn_V_User_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoIn_V_User_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == VideoIn_V_User_V_0_ack_in) & (1'b1 == VideoIn_V_User_V_0_vld_in))) begin
            VideoIn_V_User_V_0_sel_wr <= ~VideoIn_V_User_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoIn_V_User_V_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == VideoIn_V_User_V_0_state) & (1'b0 == VideoIn_V_User_V_0_vld_in)) | ((2'd3 == VideoIn_V_User_V_0_state) & (1'b0 == VideoIn_V_User_V_0_vld_in) & (1'b1 == VideoIn_V_User_V_0_ack_out)))) begin
            VideoIn_V_User_V_0_state <= 2'd2;
        end else if ((((2'd1 == VideoIn_V_User_V_0_state) & (1'b0 == VideoIn_V_User_V_0_ack_out)) | ((2'd3 == VideoIn_V_User_V_0_state) & (1'b0 == VideoIn_V_User_V_0_ack_out) & (1'b1 == VideoIn_V_User_V_0_vld_in)))) begin
            VideoIn_V_User_V_0_state <= 2'd1;
        end else if (((~((1'b0 == VideoIn_V_User_V_0_vld_in) & (1'b1 == VideoIn_V_User_V_0_ack_out)) & ~((1'b0 == VideoIn_V_User_V_0_ack_out) & (1'b1 == VideoIn_V_User_V_0_vld_in)) & (2'd3 == VideoIn_V_User_V_0_state)) | ((2'd1 == VideoIn_V_User_V_0_state) & (1'b1 == VideoIn_V_User_V_0_ack_out)) | ((2'd2 == VideoIn_V_User_V_0_state) & (1'b1 == VideoIn_V_User_V_0_vld_in)))) begin
            VideoIn_V_User_V_0_state <= 2'd3;
        end else begin
            VideoIn_V_User_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoOut_V_Data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == VideoOut_V_Data_V_1_ack_out) & (1'b1 == VideoOut_V_Data_V_1_vld_out))) begin
            VideoOut_V_Data_V_1_sel_rd <= ~VideoOut_V_Data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoOut_V_Data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == VideoOut_V_Data_V_1_ack_in) & (1'b1 == VideoOut_V_Data_V_1_vld_in))) begin
            VideoOut_V_Data_V_1_sel_wr <= ~VideoOut_V_Data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoOut_V_Data_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == VideoOut_V_Data_V_1_state) & (1'b0 == VideoOut_V_Data_V_1_vld_in)) | ((2'd3 == VideoOut_V_Data_V_1_state) & (1'b0 == VideoOut_V_Data_V_1_vld_in) & (1'b1 == VideoOut_V_Data_V_1_ack_out)))) begin
            VideoOut_V_Data_V_1_state <= 2'd2;
        end else if ((((2'd1 == VideoOut_V_Data_V_1_state) & (1'b0 == VideoOut_V_Data_V_1_ack_out)) | ((2'd3 == VideoOut_V_Data_V_1_state) & (1'b0 == VideoOut_V_Data_V_1_ack_out) & (1'b1 == VideoOut_V_Data_V_1_vld_in)))) begin
            VideoOut_V_Data_V_1_state <= 2'd1;
        end else if (((~((1'b0 == VideoOut_V_Data_V_1_vld_in) & (1'b1 == VideoOut_V_Data_V_1_ack_out)) & ~((1'b0 == VideoOut_V_Data_V_1_ack_out) & (1'b1 == VideoOut_V_Data_V_1_vld_in)) & (2'd3 == VideoOut_V_Data_V_1_state)) | ((2'd1 == VideoOut_V_Data_V_1_state) & (1'b1 == VideoOut_V_Data_V_1_ack_out)) | ((2'd2 == VideoOut_V_Data_V_1_state) & (1'b1 == VideoOut_V_Data_V_1_vld_in)))) begin
            VideoOut_V_Data_V_1_state <= 2'd3;
        end else begin
            VideoOut_V_Data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoOut_V_User_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == VideoOut_V_User_V_1_ack_out) & (1'b1 == VideoOut_V_User_V_1_vld_out))) begin
            VideoOut_V_User_V_1_sel_rd <= ~VideoOut_V_User_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoOut_V_User_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == VideoOut_V_User_V_1_ack_in) & (1'b1 == VideoOut_V_User_V_1_vld_in))) begin
            VideoOut_V_User_V_1_sel_wr <= ~VideoOut_V_User_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        VideoOut_V_User_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == VideoOut_V_User_V_1_state) & (1'b0 == VideoOut_V_User_V_1_vld_in)) | ((2'd3 == VideoOut_V_User_V_1_state) & (1'b0 == VideoOut_V_User_V_1_vld_in) & (1'b1 == VideoOut_V_User_V_1_ack_out)))) begin
            VideoOut_V_User_V_1_state <= 2'd2;
        end else if ((((2'd1 == VideoOut_V_User_V_1_state) & (1'b0 == VideoOut_V_User_V_1_ack_out)) | ((2'd3 == VideoOut_V_User_V_1_state) & (1'b0 == VideoOut_V_User_V_1_ack_out) & (1'b1 == VideoOut_V_User_V_1_vld_in)))) begin
            VideoOut_V_User_V_1_state <= 2'd1;
        end else if (((~((1'b0 == VideoOut_V_User_V_1_vld_in) & (1'b1 == VideoOut_V_User_V_1_ack_out)) & ~((1'b0 == VideoOut_V_User_V_1_ack_out) & (1'b1 == VideoOut_V_User_V_1_vld_in)) & (2'd3 == VideoOut_V_User_V_1_state)) | ((2'd1 == VideoOut_V_User_V_1_state) & (1'b1 == VideoOut_V_User_V_1_ack_out)) | ((2'd2 == VideoOut_V_User_V_1_state) & (1'b1 == VideoOut_V_User_V_1_vld_in)))) begin
            VideoOut_V_User_V_1_state <= 2'd3;
        end else begin
            VideoOut_V_User_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_myproject_fu_320_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_sync_reg_grp_myproject_fu_320_ap_done <= 1'b0;
        end else if ((grp_myproject_fu_320_ap_done == 1'b1)) begin
            ap_sync_reg_grp_myproject_fu_320_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_myproject_fu_320_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_sync_reg_grp_myproject_fu_320_ap_ready <= 1'b0;
        end else if ((grp_myproject_fu_320_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_myproject_fu_320_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_myproject_fu_320_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_myproject_fu_320_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state3)) | (~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2)))) begin
            grp_myproject_fu_320_ap_start_reg <= 1'b1;
        end else if ((grp_myproject_fu_320_ap_ready == 1'b1)) begin
            grp_myproject_fu_320_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == VideoIn_V_Data_V_0_load_A)) begin
        VideoIn_V_Data_V_0_payload_A <= VideoIn_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == VideoIn_V_Data_V_0_load_B)) begin
        VideoIn_V_Data_V_0_payload_B <= VideoIn_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == VideoIn_V_User_V_0_load_A)) begin
        VideoIn_V_User_V_0_payload_A <= VideoIn_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == VideoIn_V_User_V_0_load_B)) begin
        VideoIn_V_User_V_0_payload_B <= VideoIn_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == VideoOut_V_Data_V_1_load_A)) begin
        VideoOut_V_Data_V_1_payload_A <= grp_myproject_fu_320_VideoOut_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == VideoOut_V_Data_V_1_load_B)) begin
        VideoOut_V_Data_V_1_payload_B <= grp_myproject_fu_320_VideoOut_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == VideoOut_V_User_V_1_load_A)) begin
        VideoOut_V_User_V_1_payload_A <= grp_myproject_fu_320_VideoOut_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == VideoOut_V_User_V_1_load_B)) begin
        VideoOut_V_User_V_1_payload_B <= grp_myproject_fu_320_VideoOut_TUSER;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_DsizeL_V_blk_n = 1'b0;
    end else begin
        MetaIn_DsizeL_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_Flags_blk_n = 1'b0;
    end else begin
        MetaIn_Flags_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_ModPixelF_blk_n = 1'b0;
    end else begin
        MetaIn_ModPixelF_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_PixProcessingFlgs_blk_n = 1'b0;
    end else begin
        MetaIn_PixProcessingFlgs_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_PixelF_blk_n = 1'b0;
    end else begin
        MetaIn_PixelF_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_SourceTag_blk_n = 1'b0;
    end else begin
        MetaIn_SourceTag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_Status_blk_n = 1'b0;
    end else begin
        MetaIn_Status_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_StreamId_blk_n = 1'b0;
    end else begin
        MetaIn_StreamId_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_TapG_blk_n = 1'b0;
    end else begin
        MetaIn_TapG_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_Timestamp_blk_n = 1'b0;
    end else begin
        MetaIn_Timestamp_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_Xoffs_V_blk_n = 1'b0;
    end else begin
        MetaIn_Xoffs_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_Xsize_V_blk_n = 1'b0;
    end else begin
        MetaIn_Xsize_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_Yoffs_V_blk_n = 1'b0;
    end else begin
        MetaIn_Yoffs_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MetaIn_Ysize_V_blk_n = 1'b0;
    end else begin
        MetaIn_Ysize_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_DsizeL_V = MetaIn_DsizeL_V_preg;
    end else begin
        MetaOut_DsizeL_V = MetaOut_DsizeL_V_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_Flags = MetaIn_Flags_preg;
    end else begin
        MetaOut_Flags = MetaOut_Flags_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_ModPixelF = MetaIn_ModPixelF_preg;
    end else begin
        MetaOut_ModPixelF = MetaOut_ModPixelF_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_PixProcessingFlgs = MetaIn_PixProcessingFlgs_preg;
    end else begin
        MetaOut_PixProcessingFlgs = MetaOut_PixProcessingFlgs_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_PixelF = MetaIn_PixelF_preg;
    end else begin
        MetaOut_PixelF = MetaOut_PixelF_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_SourceTag = MetaIn_SourceTag_preg;
    end else begin
        MetaOut_SourceTag = MetaOut_SourceTag_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_Status = MetaIn_Status_preg;
    end else begin
        MetaOut_Status = MetaOut_Status_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_StreamId = MetaIn_StreamId_preg;
    end else begin
        MetaOut_StreamId = MetaOut_StreamId_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_TapG = MetaIn_TapG_preg;
    end else begin
        MetaOut_TapG = MetaOut_TapG_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_Timestamp = MetaIn_Timestamp_preg;
    end else begin
        MetaOut_Timestamp = MetaOut_Timestamp_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_Xoffs_V = MetaIn_Xoffs_V_preg;
    end else begin
        MetaOut_Xoffs_V = MetaOut_Xoffs_V_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_Xsize_V = MetaIn_Xsize_V_preg;
    end else begin
        MetaOut_Xsize_V = MetaOut_Xsize_V_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_Yoffs_V = MetaIn_Yoffs_V_preg;
    end else begin
        MetaOut_Yoffs_V = MetaOut_Yoffs_V_preg;
    end
end

always @ (*) begin
    if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
        MetaOut_Ysize_V = MetaIn_Ysize_V_preg;
    end else begin
        MetaOut_Ysize_V = MetaOut_Ysize_V_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        VideoIn_V_Data_V_0_ack_out = grp_myproject_fu_320_VideoIn_TREADY;
    end else begin
        VideoIn_V_Data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == VideoIn_V_Data_V_0_sel)) begin
        VideoIn_V_Data_V_0_data_out = VideoIn_V_Data_V_0_payload_B;
    end else begin
        VideoIn_V_Data_V_0_data_out = VideoIn_V_Data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        VideoIn_V_User_V_0_ack_out = grp_myproject_fu_320_VideoIn_TREADY;
    end else begin
        VideoIn_V_User_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == VideoIn_V_User_V_0_sel)) begin
        VideoIn_V_User_V_0_data_out = VideoIn_V_User_V_0_payload_B;
    end else begin
        VideoIn_V_User_V_0_data_out = VideoIn_V_User_V_0_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == VideoOut_V_Data_V_1_sel)) begin
        VideoOut_V_Data_V_1_data_out = VideoOut_V_Data_V_1_payload_B;
    end else begin
        VideoOut_V_Data_V_1_data_out = VideoOut_V_Data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == VideoOut_V_User_V_1_sel)) begin
        VideoOut_V_User_V_1_data_out = VideoOut_V_User_V_1_payload_B;
    end else begin
        VideoOut_V_User_V_1_data_out = VideoOut_V_User_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (VideoOut_V_User_V_1_state[1'd0] == 1'b0) & (VideoOut_V_Data_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (VideoOut_V_User_V_1_state[1'd0] == 1'b0) & (VideoOut_V_Data_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_myproject_fu_320_ap_continue = 1'b1;
    end else begin
        grp_myproject_fu_320_ap_continue = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in)) & (VideoOut_V_User_V_1_state[1'd0] == 1'b0) & (VideoOut_V_Data_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign VideoIn_TREADY = VideoIn_V_User_V_0_state[1'd1];

assign VideoIn_V_Data_V_0_ack_in = VideoIn_V_Data_V_0_state[1'd1];

assign VideoIn_V_Data_V_0_load_A = (~VideoIn_V_Data_V_0_sel_wr & VideoIn_V_Data_V_0_state_cmp_full);

assign VideoIn_V_Data_V_0_load_B = (VideoIn_V_Data_V_0_state_cmp_full & VideoIn_V_Data_V_0_sel_wr);

assign VideoIn_V_Data_V_0_sel = VideoIn_V_Data_V_0_sel_rd;

assign VideoIn_V_Data_V_0_state_cmp_full = ((VideoIn_V_Data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign VideoIn_V_Data_V_0_vld_in = VideoIn_TVALID;

assign VideoIn_V_Data_V_0_vld_out = VideoIn_V_Data_V_0_state[1'd0];

assign VideoIn_V_User_V_0_ack_in = VideoIn_V_User_V_0_state[1'd1];

assign VideoIn_V_User_V_0_load_A = (~VideoIn_V_User_V_0_sel_wr & VideoIn_V_User_V_0_state_cmp_full);

assign VideoIn_V_User_V_0_load_B = (VideoIn_V_User_V_0_state_cmp_full & VideoIn_V_User_V_0_sel_wr);

assign VideoIn_V_User_V_0_sel = VideoIn_V_User_V_0_sel_rd;

assign VideoIn_V_User_V_0_state_cmp_full = ((VideoIn_V_User_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign VideoIn_V_User_V_0_vld_in = VideoIn_TVALID;

assign VideoIn_V_User_V_0_vld_out = VideoIn_V_User_V_0_state[1'd0];

assign VideoOut_TDATA = VideoOut_V_Data_V_1_data_out;

assign VideoOut_TUSER = VideoOut_V_User_V_1_data_out;

assign VideoOut_TVALID = VideoOut_V_User_V_1_state[1'd0];

assign VideoOut_V_Data_V_1_ack_in = VideoOut_V_Data_V_1_state[1'd1];

assign VideoOut_V_Data_V_1_ack_out = VideoOut_TREADY;

assign VideoOut_V_Data_V_1_load_A = (~VideoOut_V_Data_V_1_sel_wr & VideoOut_V_Data_V_1_state_cmp_full);

assign VideoOut_V_Data_V_1_load_B = (VideoOut_V_Data_V_1_state_cmp_full & VideoOut_V_Data_V_1_sel_wr);

assign VideoOut_V_Data_V_1_sel = VideoOut_V_Data_V_1_sel_rd;

assign VideoOut_V_Data_V_1_state_cmp_full = ((VideoOut_V_Data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign VideoOut_V_Data_V_1_vld_in = grp_myproject_fu_320_VideoOut_TVALID;

assign VideoOut_V_Data_V_1_vld_out = VideoOut_V_Data_V_1_state[1'd0];

assign VideoOut_V_User_V_1_ack_in = VideoOut_V_User_V_1_state[1'd1];

assign VideoOut_V_User_V_1_ack_out = VideoOut_TREADY;

assign VideoOut_V_User_V_1_load_A = (~VideoOut_V_User_V_1_sel_wr & VideoOut_V_User_V_1_state_cmp_full);

assign VideoOut_V_User_V_1_load_B = (VideoOut_V_User_V_1_state_cmp_full & VideoOut_V_User_V_1_sel_wr);

assign VideoOut_V_User_V_1_sel = VideoOut_V_User_V_1_sel_rd;

assign VideoOut_V_User_V_1_state_cmp_full = ((VideoOut_V_User_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign VideoOut_V_User_V_1_vld_in = grp_myproject_fu_320_VideoOut_TVALID;

assign VideoOut_V_User_V_1_vld_out = VideoOut_V_User_V_1_state[1'd0];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state2 = ((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg));
end

always @ (*) begin
    ap_block_state2_ignore_call65 = ((1'b0 == MetaIn_Status_ap_vld_preg) | (1'b0 == MetaIn_ModPixelF_ap_vld_preg) | (1'b0 == MetaIn_PixProcessingFlgs_ap_vld_preg) | (1'b0 == MetaIn_Timestamp_ap_vld_preg) | (1'b0 == MetaIn_Flags_ap_vld_preg) | (1'b0 == MetaIn_TapG_ap_vld_preg) | (1'b0 == MetaIn_PixelF_ap_vld_preg) | (1'b0 == MetaIn_DsizeL_V_ap_vld_preg) | (1'b0 == MetaIn_Yoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Ysize_V_ap_vld_preg) | (1'b0 == MetaIn_Xoffs_V_ap_vld_preg) | (1'b0 == MetaIn_Xsize_V_ap_vld_preg) | (1'b0 == MetaIn_SourceTag_ap_vld_preg) | (1'b0 == MetaIn_StreamId_ap_vld_preg));
end

always @ (*) begin
    ap_block_state3_on_subcall_done = ((ap_sync_grp_myproject_fu_320_ap_ready & ap_sync_grp_myproject_fu_320_ap_done) == 1'b0);
end

always @ (*) begin
    ap_block_state4 = ((1'b0 == VideoOut_V_User_V_1_ack_in) | (1'b0 == VideoOut_V_Data_V_1_ack_in));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_myproject_fu_320_ap_done = (grp_myproject_fu_320_ap_done | ap_sync_reg_grp_myproject_fu_320_ap_done);

assign ap_sync_grp_myproject_fu_320_ap_ready = (grp_myproject_fu_320_ap_ready | ap_sync_reg_grp_myproject_fu_320_ap_ready);

assign grp_myproject_fu_320_VideoIn_TVALID = VideoIn_V_User_V_0_state[1'd0];

assign grp_myproject_fu_320_VideoOut_TREADY = ((ap_CS_fsm_state3 & VideoOut_V_User_V_1_ack_in) | (ap_CS_fsm_state3 & VideoOut_V_Data_V_1_ack_in));

assign grp_myproject_fu_320_ap_start = grp_myproject_fu_320_ap_start_reg;

endmodule //myproject_axi
