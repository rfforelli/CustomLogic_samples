// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pix_subtract (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        StreamIn_V_Data_V_dout,
        StreamIn_V_Data_V_empty_n,
        StreamIn_V_Data_V_read,
        StreamIn_V_User_V_dout,
        StreamIn_V_User_V_empty_n,
        StreamIn_V_User_V_read,
        StreamOut_V_Data_V_din,
        StreamOut_V_Data_V_full_n,
        StreamOut_V_Data_V_write,
        StreamOut_V_User_V_din,
        StreamOut_V_User_V_full_n,
        StreamOut_V_User_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state8 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [127:0] StreamIn_V_Data_V_dout;
input   StreamIn_V_Data_V_empty_n;
output   StreamIn_V_Data_V_read;
input  [3:0] StreamIn_V_User_V_dout;
input   StreamIn_V_User_V_empty_n;
output   StreamIn_V_User_V_read;
output  [127:0] StreamOut_V_Data_V_din;
input   StreamOut_V_Data_V_full_n;
output   StreamOut_V_Data_V_write;
output  [3:0] StreamOut_V_User_V_din;
input   StreamOut_V_User_V_full_n;
output   StreamOut_V_User_V_write;

reg ap_done;
reg ap_idle;
reg start_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [0:0] arbitrator;
wire   [13:0] buf_V_0_address0;
reg    buf_V_0_ce0;
wire   [11:0] buf_V_0_q0;
wire   [13:0] buf_V_0_address1;
reg    buf_V_0_ce1;
reg    buf_V_0_we1;
wire   [11:0] buf_V_0_d1;
wire   [13:0] buf_V_1_address0;
reg    buf_V_1_ce0;
wire   [11:0] buf_V_1_q0;
wire   [13:0] buf_V_1_address1;
reg    buf_V_1_ce1;
reg    buf_V_1_we1;
wire   [11:0] buf_V_1_d1;
wire   [13:0] buf_V_2_address0;
reg    buf_V_2_ce0;
wire   [11:0] buf_V_2_q0;
wire   [13:0] buf_V_2_address1;
reg    buf_V_2_ce1;
reg    buf_V_2_we1;
wire   [11:0] buf_V_2_d1;
wire   [13:0] buf_V_3_address0;
reg    buf_V_3_ce0;
wire   [11:0] buf_V_3_q0;
wire   [13:0] buf_V_3_address1;
reg    buf_V_3_ce1;
reg    buf_V_3_we1;
wire   [11:0] buf_V_3_d1;
wire   [13:0] buf_V_4_address0;
reg    buf_V_4_ce0;
wire   [11:0] buf_V_4_q0;
wire   [13:0] buf_V_4_address1;
reg    buf_V_4_ce1;
reg    buf_V_4_we1;
wire   [11:0] buf_V_4_d1;
wire   [13:0] buf_V_5_address0;
reg    buf_V_5_ce0;
wire   [11:0] buf_V_5_q0;
wire   [13:0] buf_V_5_address1;
reg    buf_V_5_ce1;
reg    buf_V_5_we1;
wire   [11:0] buf_V_5_d1;
wire   [13:0] buf_V_6_address0;
reg    buf_V_6_ce0;
wire   [11:0] buf_V_6_q0;
wire   [13:0] buf_V_6_address1;
reg    buf_V_6_ce1;
reg    buf_V_6_we1;
wire   [11:0] buf_V_6_d1;
wire   [13:0] buf_V_7_address0;
reg    buf_V_7_ce0;
wire   [11:0] buf_V_7_q0;
wire   [13:0] buf_V_7_address1;
reg    buf_V_7_ce1;
reg    buf_V_7_we1;
wire   [11:0] buf_V_7_d1;
reg    StreamIn_V_Data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_s_reg_918;
reg    StreamIn_V_User_V_blk_n;
reg    StreamOut_V_Data_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] tmp_s_reg_918_pp0_iter4_reg;
reg    StreamOut_V_User_V_blk_n;
reg   [13:0] i_reg_384;
reg   [0:0] arbitrator_load_reg_913;
reg    ap_block_state1;
wire   [0:0] tmp_s_fu_410_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    StreamIn_V_Data_V0_status;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    StreamOut_V_Data_V1_status;
reg    ap_block_state7_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_s_reg_918_pp0_iter1_reg;
reg   [0:0] tmp_s_reg_918_pp0_iter2_reg;
reg   [0:0] tmp_s_reg_918_pp0_iter3_reg;
wire   [13:0] i_2_fu_416_p2;
reg   [13:0] i_2_reg_922;
reg    ap_enable_reg_pp0_iter0;
reg   [127:0] tmp_Data_V_reg_967;
reg   [127:0] tmp_Data_V_reg_967_pp0_iter2_reg;
reg   [3:0] tmp_User_V_reg_980;
reg   [3:0] tmp_User_V_reg_980_pp0_iter2_reg;
reg   [3:0] tmp_User_V_reg_980_pp0_iter3_reg;
reg   [3:0] tmp_User_V_reg_980_pp0_iter4_reg;
reg   [11:0] buf_V_0_load_reg_985;
reg    ap_enable_reg_pp0_iter2;
reg   [11:0] buf_V_1_load_reg_990;
reg   [11:0] buf_V_2_load_reg_995;
reg   [11:0] buf_V_3_load_reg_1000;
reg   [11:0] buf_V_4_load_reg_1005;
reg   [11:0] buf_V_5_load_reg_1010;
reg   [11:0] buf_V_6_load_reg_1015;
reg   [11:0] buf_V_7_load_reg_1020;
reg   [0:0] tmp_10_reg_1025;
wire   [11:0] tmp_12_fu_560_p1;
reg   [11:0] tmp_12_reg_1030;
reg   [0:0] tmp_14_reg_1035;
wire   [11:0] tmp_16_fu_594_p1;
reg   [11:0] tmp_16_reg_1040;
reg   [0:0] tmp_19_reg_1045;
wire   [11:0] tmp_20_fu_628_p1;
reg   [11:0] tmp_20_reg_1050;
reg   [0:0] tmp_21_reg_1055;
wire   [11:0] tmp_22_fu_662_p1;
reg   [11:0] tmp_22_reg_1060;
reg   [0:0] tmp_23_reg_1065;
wire   [11:0] tmp_24_fu_696_p1;
reg   [11:0] tmp_24_reg_1070;
reg   [0:0] tmp_25_reg_1075;
wire   [11:0] tmp_26_fu_730_p1;
reg   [11:0] tmp_26_reg_1080;
reg   [0:0] tmp_27_reg_1085;
wire   [11:0] tmp_28_fu_764_p1;
reg   [11:0] tmp_28_reg_1090;
reg   [0:0] tmp_29_reg_1095;
wire   [11:0] tmp_30_fu_798_p1;
reg   [11:0] tmp_30_reg_1100;
wire   [127:0] p_Result_22_7_fu_898_p1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg   [13:0] ap_phi_mux_i_phi_fu_388_p4;
wire   [127:0] ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396;
reg   [127:0] ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396;
reg   [127:0] ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396;
reg   [127:0] ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396;
reg   [127:0] ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396;
reg   [127:0] ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396;
wire   [63:0] i2_fu_422_p1;
wire   [63:0] i3_fu_442_p1;
reg    StreamIn_V_Data_V0_update;
reg    StreamOut_V_Data_V1_update;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] tmp_4_fu_902_p2;
wire    ap_CS_fsm_state8;
wire   [15:0] tmp_8_fu_536_p1;
wire   [16:0] lhs_V_fu_539_p1;
wire   [16:0] rhs_V_fu_543_p1;
wire   [16:0] ret_V_9_fu_546_p2;
wire   [15:0] p_Result_18_1_fu_564_p4;
wire   [16:0] lhs_V_1_fu_573_p1;
wire   [16:0] rhs_V_1_fu_577_p1;
wire   [16:0] ret_V_9_1_fu_580_p2;
wire   [15:0] p_Result_18_2_fu_598_p4;
wire   [16:0] lhs_V_2_fu_607_p1;
wire   [16:0] rhs_V_2_fu_611_p1;
wire   [16:0] ret_V_9_2_fu_614_p2;
wire   [15:0] p_Result_18_3_fu_632_p4;
wire   [16:0] lhs_V_3_fu_641_p1;
wire   [16:0] rhs_V_3_fu_645_p1;
wire   [16:0] ret_V_9_3_fu_648_p2;
wire   [15:0] p_Result_18_4_fu_666_p4;
wire   [16:0] lhs_V_4_fu_675_p1;
wire   [16:0] rhs_V_4_fu_679_p1;
wire   [16:0] ret_V_9_4_fu_682_p2;
wire   [15:0] p_Result_18_5_fu_700_p4;
wire   [16:0] lhs_V_5_fu_709_p1;
wire   [16:0] rhs_V_5_fu_713_p1;
wire   [16:0] ret_V_9_5_fu_716_p2;
wire   [15:0] p_Result_18_6_fu_734_p4;
wire   [16:0] lhs_V_6_fu_743_p1;
wire   [16:0] rhs_V_6_fu_747_p1;
wire   [16:0] ret_V_9_6_fu_750_p2;
wire   [15:0] p_Result_18_7_fu_768_p4;
wire   [16:0] lhs_V_7_fu_777_p1;
wire   [16:0] rhs_V_7_fu_781_p1;
wire   [16:0] ret_V_9_7_fu_784_p2;
wire   [11:0] tmp_5_fu_802_p3;
wire   [11:0] tmp_7_fu_812_p3;
wire   [11:0] tmp_9_fu_822_p3;
wire   [11:0] tmp_2_fu_832_p3;
wire   [11:0] tmp_1_fu_842_p3;
wire   [11:0] tmp_3_fu_852_p3;
wire   [11:0] tmp_6_fu_862_p3;
wire   [11:0] tmp_11_fu_872_p3;
wire   [15:0] tmp_V_6_trunc_fu_868_p1;
wire   [15:0] tmp_V_5_trunc_fu_858_p1;
wire   [15:0] tmp_V_4_trunc_fu_848_p1;
wire   [15:0] tmp_V_3_trunc_fu_838_p1;
wire   [15:0] tmp_V_2_trunc_fu_828_p1;
wire   [15:0] tmp_V_1_trunc_fu_818_p1;
wire   [15:0] tmp_V_0_trunc_fu_808_p1;
wire   [123:0] tmp_13_fu_878_p9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_329;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 arbitrator = 1'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

pix_subtract_buf_V_0 #(
    .DataWidth( 12 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .q0(buf_V_0_q0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .we1(buf_V_0_we1),
    .d1(buf_V_0_d1)
);

pix_subtract_buf_V_0 #(
    .DataWidth( 12 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .q0(buf_V_1_q0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .we1(buf_V_1_we1),
    .d1(buf_V_1_d1)
);

pix_subtract_buf_V_0 #(
    .DataWidth( 12 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .q0(buf_V_2_q0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .we1(buf_V_2_we1),
    .d1(buf_V_2_d1)
);

pix_subtract_buf_V_0 #(
    .DataWidth( 12 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
buf_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_3_address0),
    .ce0(buf_V_3_ce0),
    .q0(buf_V_3_q0),
    .address1(buf_V_3_address1),
    .ce1(buf_V_3_ce1),
    .we1(buf_V_3_we1),
    .d1(buf_V_3_d1)
);

pix_subtract_buf_V_0 #(
    .DataWidth( 12 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
buf_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_4_address0),
    .ce0(buf_V_4_ce0),
    .q0(buf_V_4_q0),
    .address1(buf_V_4_address1),
    .ce1(buf_V_4_ce1),
    .we1(buf_V_4_we1),
    .d1(buf_V_4_d1)
);

pix_subtract_buf_V_0 #(
    .DataWidth( 12 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
buf_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_5_address0),
    .ce0(buf_V_5_ce0),
    .q0(buf_V_5_q0),
    .address1(buf_V_5_address1),
    .ce1(buf_V_5_ce1),
    .we1(buf_V_5_we1),
    .d1(buf_V_5_d1)
);

pix_subtract_buf_V_0 #(
    .DataWidth( 12 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
buf_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_6_address0),
    .ce0(buf_V_6_ce0),
    .q0(buf_V_6_q0),
    .address1(buf_V_6_address1),
    .ce1(buf_V_6_ce1),
    .we1(buf_V_6_we1),
    .d1(buf_V_6_d1)
);

pix_subtract_buf_V_0 #(
    .DataWidth( 12 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
buf_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_7_address0),
    .ce0(buf_V_7_ce0),
    .q0(buf_V_7_q0),
    .address1(buf_V_7_address1),
    .ce1(buf_V_7_ce1),
    .we1(buf_V_7_we1),
    .d1(buf_V_7_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_329)) begin
        if (((arbitrator_load_reg_913 == 1'd0) & (tmp_s_reg_918 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396 <= StreamIn_V_Data_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396 <= ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((tmp_s_reg_918_pp0_iter3_reg == 1'd0) & (arbitrator_load_reg_913 == 1'd1))) begin
            ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396 <= p_Result_22_7_fu_898_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396 <= ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_384 <= i_2_reg_922;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_384 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396 <= ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396;
        i_2_reg_922 <= i_2_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396 <= ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396 <= ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        arbitrator <= tmp_4_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        arbitrator_load_reg_913 <= arbitrator;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_918_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (arbitrator_load_reg_913 == 1'd1))) begin
        buf_V_0_load_reg_985 <= buf_V_0_q0;
        buf_V_1_load_reg_990 <= buf_V_1_q0;
        buf_V_2_load_reg_995 <= buf_V_2_q0;
        buf_V_3_load_reg_1000 <= buf_V_3_q0;
        buf_V_4_load_reg_1005 <= buf_V_4_q0;
        buf_V_5_load_reg_1010 <= buf_V_5_q0;
        buf_V_6_load_reg_1015 <= buf_V_6_q0;
        buf_V_7_load_reg_1020 <= buf_V_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_918_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (arbitrator_load_reg_913 == 1'd1))) begin
        tmp_10_reg_1025 <= ret_V_9_fu_546_p2[32'd16];
        tmp_12_reg_1030 <= tmp_12_fu_560_p1;
        tmp_14_reg_1035 <= ret_V_9_1_fu_580_p2[32'd16];
        tmp_16_reg_1040 <= tmp_16_fu_594_p1;
        tmp_19_reg_1045 <= ret_V_9_2_fu_614_p2[32'd16];
        tmp_20_reg_1050 <= tmp_20_fu_628_p1;
        tmp_21_reg_1055 <= ret_V_9_3_fu_648_p2[32'd16];
        tmp_22_reg_1060 <= tmp_22_fu_662_p1;
        tmp_23_reg_1065 <= ret_V_9_4_fu_682_p2[32'd16];
        tmp_24_reg_1070 <= tmp_24_fu_696_p1;
        tmp_25_reg_1075 <= ret_V_9_5_fu_716_p2[32'd16];
        tmp_26_reg_1080 <= tmp_26_fu_730_p1;
        tmp_27_reg_1085 <= ret_V_9_6_fu_750_p2[32'd16];
        tmp_28_reg_1090 <= tmp_28_fu_764_p1;
        tmp_29_reg_1095 <= ret_V_9_7_fu_784_p2[32'd16];
        tmp_30_reg_1100 <= tmp_30_fu_798_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_918 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_Data_V_reg_967 <= StreamIn_V_Data_V_dout;
        tmp_User_V_reg_980 <= StreamIn_V_User_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_Data_V_reg_967_pp0_iter2_reg <= tmp_Data_V_reg_967;
        tmp_User_V_reg_980_pp0_iter2_reg <= tmp_User_V_reg_980;
        tmp_User_V_reg_980_pp0_iter3_reg <= tmp_User_V_reg_980_pp0_iter2_reg;
        tmp_User_V_reg_980_pp0_iter4_reg <= tmp_User_V_reg_980_pp0_iter3_reg;
        tmp_s_reg_918_pp0_iter2_reg <= tmp_s_reg_918_pp0_iter1_reg;
        tmp_s_reg_918_pp0_iter3_reg <= tmp_s_reg_918_pp0_iter2_reg;
        tmp_s_reg_918_pp0_iter4_reg <= tmp_s_reg_918_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_s_reg_918 <= tmp_s_fu_410_p2;
        tmp_s_reg_918_pp0_iter1_reg <= tmp_s_reg_918;
    end
end

always @ (*) begin
    if (((tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        StreamIn_V_Data_V0_update = 1'b1;
    end else begin
        StreamIn_V_Data_V0_update = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        StreamIn_V_Data_V_blk_n = StreamIn_V_Data_V_empty_n;
    end else begin
        StreamIn_V_Data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        StreamIn_V_User_V_blk_n = StreamIn_V_User_V_empty_n;
    end else begin
        StreamIn_V_User_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_s_reg_918_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        StreamOut_V_Data_V1_update = 1'b1;
    end else begin
        StreamOut_V_Data_V1_update = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_918_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        StreamOut_V_Data_V_blk_n = StreamOut_V_Data_V_full_n;
    end else begin
        StreamOut_V_Data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_s_reg_918_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        StreamOut_V_User_V_blk_n = StreamOut_V_User_V_full_n;
    end else begin
        StreamOut_V_User_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((tmp_s_fu_410_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_388_p4 = i_2_reg_922;
    end else begin
        ap_phi_mux_i_phi_fu_388_p4 = i_reg_384;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arbitrator_load_reg_913 == 1'd0) & (tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_0_we1 = 1'b1;
    end else begin
        buf_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arbitrator_load_reg_913 == 1'd0) & (tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arbitrator_load_reg_913 == 1'd0) & (tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_V_3_ce0 = 1'b1;
    end else begin
        buf_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_3_ce1 = 1'b1;
    end else begin
        buf_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arbitrator_load_reg_913 == 1'd0) & (tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_3_we1 = 1'b1;
    end else begin
        buf_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_V_4_ce0 = 1'b1;
    end else begin
        buf_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_4_ce1 = 1'b1;
    end else begin
        buf_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arbitrator_load_reg_913 == 1'd0) & (tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_4_we1 = 1'b1;
    end else begin
        buf_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_V_5_ce0 = 1'b1;
    end else begin
        buf_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_5_ce1 = 1'b1;
    end else begin
        buf_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arbitrator_load_reg_913 == 1'd0) & (tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_5_we1 = 1'b1;
    end else begin
        buf_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_V_6_ce0 = 1'b1;
    end else begin
        buf_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_6_ce1 = 1'b1;
    end else begin
        buf_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arbitrator_load_reg_913 == 1'd0) & (tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_6_we1 = 1'b1;
    end else begin
        buf_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_V_7_ce0 = 1'b1;
    end else begin
        buf_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_7_ce1 = 1'b1;
    end else begin
        buf_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arbitrator_load_reg_913 == 1'd0) & (tmp_s_reg_918 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_7_we1 = 1'b1;
    end else begin
        buf_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_s_fu_410_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_s_fu_410_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign StreamIn_V_Data_V0_status = (StreamIn_V_User_V_empty_n & StreamIn_V_Data_V_empty_n);

assign StreamIn_V_Data_V_read = StreamIn_V_Data_V0_update;

assign StreamIn_V_User_V_read = StreamIn_V_Data_V0_update;

assign StreamOut_V_Data_V1_status = (StreamOut_V_User_V_full_n & StreamOut_V_Data_V_full_n);

assign StreamOut_V_Data_V_din = ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396;

assign StreamOut_V_Data_V_write = StreamOut_V_Data_V1_update;

assign StreamOut_V_User_V_din = tmp_User_V_reg_980_pp0_iter4_reg;

assign StreamOut_V_User_V_write = StreamOut_V_Data_V1_update;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_s_reg_918_pp0_iter4_reg == 1'd0) & (1'b0 == StreamOut_V_Data_V1_status) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((tmp_s_reg_918 == 1'd0) & (1'b0 == StreamIn_V_Data_V0_status) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_s_reg_918_pp0_iter4_reg == 1'd0) & (1'b0 == StreamOut_V_Data_V1_status) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((tmp_s_reg_918 == 1'd0) & (1'b0 == StreamIn_V_Data_V0_status) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_s_reg_918_pp0_iter4_reg == 1'd0) & (1'b0 == StreamOut_V_Data_V1_status) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((tmp_s_reg_918 == 1'd0) & (1'b0 == StreamIn_V_Data_V0_status) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((tmp_s_reg_918 == 1'd0) & (1'b0 == StreamIn_V_Data_V0_status));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter5 = ((tmp_s_reg_918_pp0_iter4_reg == 1'd0) & (1'b0 == StreamOut_V_Data_V1_status));
end

always @ (*) begin
    ap_condition_329 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396 = 'bx;

assign ap_ready = internal_ap_ready;

assign buf_V_0_address0 = i2_fu_422_p1;

assign buf_V_0_address1 = i3_fu_442_p1;

assign buf_V_0_d1 = StreamIn_V_Data_V_dout[11:0];

assign buf_V_1_address0 = i2_fu_422_p1;

assign buf_V_1_address1 = i3_fu_442_p1;

assign buf_V_1_d1 = {{StreamIn_V_Data_V_dout[27:16]}};

assign buf_V_2_address0 = i2_fu_422_p1;

assign buf_V_2_address1 = i3_fu_442_p1;

assign buf_V_2_d1 = {{StreamIn_V_Data_V_dout[43:32]}};

assign buf_V_3_address0 = i2_fu_422_p1;

assign buf_V_3_address1 = i3_fu_442_p1;

assign buf_V_3_d1 = {{StreamIn_V_Data_V_dout[59:48]}};

assign buf_V_4_address0 = i2_fu_422_p1;

assign buf_V_4_address1 = i3_fu_442_p1;

assign buf_V_4_d1 = {{StreamIn_V_Data_V_dout[75:64]}};

assign buf_V_5_address0 = i2_fu_422_p1;

assign buf_V_5_address1 = i3_fu_442_p1;

assign buf_V_5_d1 = {{StreamIn_V_Data_V_dout[91:80]}};

assign buf_V_6_address0 = i2_fu_422_p1;

assign buf_V_6_address1 = i3_fu_442_p1;

assign buf_V_6_d1 = {{StreamIn_V_Data_V_dout[107:96]}};

assign buf_V_7_address0 = i2_fu_422_p1;

assign buf_V_7_address1 = i3_fu_442_p1;

assign buf_V_7_d1 = {{StreamIn_V_Data_V_dout[123:112]}};

assign i2_fu_422_p1 = ap_phi_mux_i_phi_fu_388_p4;

assign i3_fu_442_p1 = i_reg_384;

assign i_2_fu_416_p2 = (ap_phi_mux_i_phi_fu_388_p4 + 14'd1);

assign lhs_V_1_fu_573_p1 = p_Result_18_1_fu_564_p4;

assign lhs_V_2_fu_607_p1 = p_Result_18_2_fu_598_p4;

assign lhs_V_3_fu_641_p1 = p_Result_18_3_fu_632_p4;

assign lhs_V_4_fu_675_p1 = p_Result_18_4_fu_666_p4;

assign lhs_V_5_fu_709_p1 = p_Result_18_5_fu_700_p4;

assign lhs_V_6_fu_743_p1 = p_Result_18_6_fu_734_p4;

assign lhs_V_7_fu_777_p1 = p_Result_18_7_fu_768_p4;

assign lhs_V_fu_539_p1 = tmp_8_fu_536_p1;

assign p_Result_18_1_fu_564_p4 = {{tmp_Data_V_reg_967_pp0_iter2_reg[31:16]}};

assign p_Result_18_2_fu_598_p4 = {{tmp_Data_V_reg_967_pp0_iter2_reg[47:32]}};

assign p_Result_18_3_fu_632_p4 = {{tmp_Data_V_reg_967_pp0_iter2_reg[63:48]}};

assign p_Result_18_4_fu_666_p4 = {{tmp_Data_V_reg_967_pp0_iter2_reg[79:64]}};

assign p_Result_18_5_fu_700_p4 = {{tmp_Data_V_reg_967_pp0_iter2_reg[95:80]}};

assign p_Result_18_6_fu_734_p4 = {{tmp_Data_V_reg_967_pp0_iter2_reg[111:96]}};

assign p_Result_18_7_fu_768_p4 = {{tmp_Data_V_reg_967_pp0_iter2_reg[127:112]}};

assign p_Result_22_7_fu_898_p1 = tmp_13_fu_878_p9;

assign ret_V_9_1_fu_580_p2 = (lhs_V_1_fu_573_p1 - rhs_V_1_fu_577_p1);

assign ret_V_9_2_fu_614_p2 = (lhs_V_2_fu_607_p1 - rhs_V_2_fu_611_p1);

assign ret_V_9_3_fu_648_p2 = (lhs_V_3_fu_641_p1 - rhs_V_3_fu_645_p1);

assign ret_V_9_4_fu_682_p2 = (lhs_V_4_fu_675_p1 - rhs_V_4_fu_679_p1);

assign ret_V_9_5_fu_716_p2 = (lhs_V_5_fu_709_p1 - rhs_V_5_fu_713_p1);

assign ret_V_9_6_fu_750_p2 = (lhs_V_6_fu_743_p1 - rhs_V_6_fu_747_p1);

assign ret_V_9_7_fu_784_p2 = (lhs_V_7_fu_777_p1 - rhs_V_7_fu_781_p1);

assign ret_V_9_fu_546_p2 = (lhs_V_fu_539_p1 - rhs_V_fu_543_p1);

assign rhs_V_1_fu_577_p1 = buf_V_1_load_reg_990;

assign rhs_V_2_fu_611_p1 = buf_V_2_load_reg_995;

assign rhs_V_3_fu_645_p1 = buf_V_3_load_reg_1000;

assign rhs_V_4_fu_679_p1 = buf_V_4_load_reg_1005;

assign rhs_V_5_fu_713_p1 = buf_V_5_load_reg_1010;

assign rhs_V_6_fu_747_p1 = buf_V_6_load_reg_1015;

assign rhs_V_7_fu_781_p1 = buf_V_7_load_reg_1020;

assign rhs_V_fu_543_p1 = buf_V_0_load_reg_985;

assign start_out = real_start;

assign tmp_11_fu_872_p3 = ((tmp_29_reg_1095[0:0] === 1'b1) ? 12'd0 : tmp_30_reg_1100);

assign tmp_12_fu_560_p1 = ret_V_9_fu_546_p2[11:0];

assign tmp_13_fu_878_p9 = {{{{{{{{tmp_11_fu_872_p3}, {tmp_V_6_trunc_fu_868_p1}}, {tmp_V_5_trunc_fu_858_p1}}, {tmp_V_4_trunc_fu_848_p1}}, {tmp_V_3_trunc_fu_838_p1}}, {tmp_V_2_trunc_fu_828_p1}}, {tmp_V_1_trunc_fu_818_p1}}, {tmp_V_0_trunc_fu_808_p1}};

assign tmp_16_fu_594_p1 = ret_V_9_1_fu_580_p2[11:0];

assign tmp_1_fu_842_p3 = ((tmp_23_reg_1065[0:0] === 1'b1) ? 12'd0 : tmp_24_reg_1070);

assign tmp_20_fu_628_p1 = ret_V_9_2_fu_614_p2[11:0];

assign tmp_22_fu_662_p1 = ret_V_9_3_fu_648_p2[11:0];

assign tmp_24_fu_696_p1 = ret_V_9_4_fu_682_p2[11:0];

assign tmp_26_fu_730_p1 = ret_V_9_5_fu_716_p2[11:0];

assign tmp_28_fu_764_p1 = ret_V_9_6_fu_750_p2[11:0];

assign tmp_2_fu_832_p3 = ((tmp_21_reg_1055[0:0] === 1'b1) ? 12'd0 : tmp_22_reg_1060);

assign tmp_30_fu_798_p1 = ret_V_9_7_fu_784_p2[11:0];

assign tmp_3_fu_852_p3 = ((tmp_25_reg_1075[0:0] === 1'b1) ? 12'd0 : tmp_26_reg_1080);

assign tmp_4_fu_902_p2 = (arbitrator_load_reg_913 ^ 1'd1);

assign tmp_5_fu_802_p3 = ((tmp_10_reg_1025[0:0] === 1'b1) ? 12'd0 : tmp_12_reg_1030);

assign tmp_6_fu_862_p3 = ((tmp_27_reg_1085[0:0] === 1'b1) ? 12'd0 : tmp_28_reg_1090);

assign tmp_7_fu_812_p3 = ((tmp_14_reg_1035[0:0] === 1'b1) ? 12'd0 : tmp_16_reg_1040);

assign tmp_8_fu_536_p1 = tmp_Data_V_reg_967_pp0_iter2_reg[15:0];

assign tmp_9_fu_822_p3 = ((tmp_19_reg_1045[0:0] === 1'b1) ? 12'd0 : tmp_20_reg_1050);

assign tmp_V_0_trunc_fu_808_p1 = tmp_5_fu_802_p3;

assign tmp_V_1_trunc_fu_818_p1 = tmp_7_fu_812_p3;

assign tmp_V_2_trunc_fu_828_p1 = tmp_9_fu_822_p3;

assign tmp_V_3_trunc_fu_838_p1 = tmp_2_fu_832_p3;

assign tmp_V_4_trunc_fu_848_p1 = tmp_1_fu_842_p3;

assign tmp_V_5_trunc_fu_858_p1 = tmp_3_fu_852_p3;

assign tmp_V_6_trunc_fu_868_p1 = tmp_6_fu_862_p3;

assign tmp_s_fu_410_p2 = ((ap_phi_mux_i_phi_fu_388_p4 == 14'd10240) ? 1'b1 : 1'b0);

endmodule //pix_subtract
