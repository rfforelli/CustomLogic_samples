-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pix_subtract is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    StreamIn_V_Data_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    StreamIn_V_Data_V_empty_n : IN STD_LOGIC;
    StreamIn_V_Data_V_read : OUT STD_LOGIC;
    StreamIn_V_User_V_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    StreamIn_V_User_V_empty_n : IN STD_LOGIC;
    StreamIn_V_User_V_read : OUT STD_LOGIC;
    StreamOut_V_Data_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    StreamOut_V_Data_V_full_n : IN STD_LOGIC;
    StreamOut_V_Data_V_write : OUT STD_LOGIC;
    StreamOut_V_User_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    StreamOut_V_User_V_full_n : IN STD_LOGIC;
    StreamOut_V_User_V_write : OUT STD_LOGIC );
end;


architecture behav of pix_subtract is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv14_2800 : STD_LOGIC_VECTOR (13 downto 0) := "10100000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal arbitrator : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal buf_V_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_0_ce0 : STD_LOGIC;
    signal buf_V_0_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_0_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_0_ce1 : STD_LOGIC;
    signal buf_V_0_we1 : STD_LOGIC;
    signal buf_V_0_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_1_ce0 : STD_LOGIC;
    signal buf_V_1_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_1_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_1_ce1 : STD_LOGIC;
    signal buf_V_1_we1 : STD_LOGIC;
    signal buf_V_1_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_2_ce0 : STD_LOGIC;
    signal buf_V_2_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_2_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_2_ce1 : STD_LOGIC;
    signal buf_V_2_we1 : STD_LOGIC;
    signal buf_V_2_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_3_ce0 : STD_LOGIC;
    signal buf_V_3_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_3_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_3_ce1 : STD_LOGIC;
    signal buf_V_3_we1 : STD_LOGIC;
    signal buf_V_3_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_4_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_4_ce0 : STD_LOGIC;
    signal buf_V_4_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_4_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_4_ce1 : STD_LOGIC;
    signal buf_V_4_we1 : STD_LOGIC;
    signal buf_V_4_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_5_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_5_ce0 : STD_LOGIC;
    signal buf_V_5_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_5_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_5_ce1 : STD_LOGIC;
    signal buf_V_5_we1 : STD_LOGIC;
    signal buf_V_5_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_6_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_6_ce0 : STD_LOGIC;
    signal buf_V_6_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_6_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_6_ce1 : STD_LOGIC;
    signal buf_V_6_we1 : STD_LOGIC;
    signal buf_V_6_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_7_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_7_ce0 : STD_LOGIC;
    signal buf_V_7_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_7_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal buf_V_7_ce1 : STD_LOGIC;
    signal buf_V_7_we1 : STD_LOGIC;
    signal buf_V_7_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal StreamIn_V_Data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_s_reg_918 : STD_LOGIC_VECTOR (0 downto 0);
    signal StreamIn_V_User_V_blk_n : STD_LOGIC;
    signal StreamOut_V_Data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_s_reg_918_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal StreamOut_V_User_V_blk_n : STD_LOGIC;
    signal i_reg_384 : STD_LOGIC_VECTOR (13 downto 0);
    signal arbitrator_load_reg_913 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_s_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal StreamIn_V_Data_V0_status : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal StreamOut_V_Data_V1_status : STD_LOGIC;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_s_reg_918_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_918_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_918_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_416_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_2_reg_922 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_Data_V_reg_967 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_Data_V_reg_967_pp0_iter2_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_User_V_reg_980 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_980_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_980_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_980_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_V_0_load_reg_985 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal buf_V_1_load_reg_990 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_2_load_reg_995 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_3_load_reg_1000 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_4_load_reg_1005 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_5_load_reg_1010 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_6_load_reg_1015 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_7_load_reg_1020 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_10_reg_1025 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_560_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_reg_1030 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_reg_1035 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_594_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_16_reg_1040 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_19_reg_1045 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_628_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_20_reg_1050 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_21_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_662_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_reg_1060 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_23_reg_1065 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_696_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_24_reg_1070 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_25_reg_1075 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_730_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_reg_1080 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_reg_1085 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_764_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_28_reg_1090 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_1095 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_798_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_30_reg_1100 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_22_7_fu_898_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_phi_mux_i_phi_fu_388_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396 : STD_LOGIC_VECTOR (127 downto 0);
    signal i2_fu_422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i3_fu_442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal StreamIn_V_Data_V0_update : STD_LOGIC;
    signal StreamOut_V_Data_V1_update : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_4_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_8_fu_536_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_539_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_fu_543_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_fu_546_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_18_1_fu_564_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_1_fu_573_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_1_fu_577_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_1_fu_580_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_18_2_fu_598_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_2_fu_607_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_2_fu_611_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_2_fu_614_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_18_3_fu_632_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_3_fu_641_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_3_fu_645_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_3_fu_648_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_18_4_fu_666_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_4_fu_675_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_4_fu_679_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_4_fu_682_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_18_5_fu_700_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_5_fu_709_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_5_fu_713_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_5_fu_716_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_18_6_fu_734_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_6_fu_743_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_6_fu_747_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_6_fu_750_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_18_7_fu_768_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_7_fu_777_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_7_fu_781_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_7_fu_784_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_5_fu_802_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_812_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_822_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_832_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_842_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_fu_852_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_862_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_fu_872_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_V_6_trunc_fu_868_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_5_trunc_fu_858_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_4_trunc_fu_848_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_3_trunc_fu_838_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_2_trunc_fu_828_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_1_trunc_fu_818_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_0_trunc_fu_808_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_878_p9 : STD_LOGIC_VECTOR (123 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_329 : BOOLEAN;

    component pix_subtract_buf_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    buf_V_0_U : component pix_subtract_buf_V_0
    generic map (
        DataWidth => 12,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_0_address0,
        ce0 => buf_V_0_ce0,
        q0 => buf_V_0_q0,
        address1 => buf_V_0_address1,
        ce1 => buf_V_0_ce1,
        we1 => buf_V_0_we1,
        d1 => buf_V_0_d1);

    buf_V_1_U : component pix_subtract_buf_V_0
    generic map (
        DataWidth => 12,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_1_address0,
        ce0 => buf_V_1_ce0,
        q0 => buf_V_1_q0,
        address1 => buf_V_1_address1,
        ce1 => buf_V_1_ce1,
        we1 => buf_V_1_we1,
        d1 => buf_V_1_d1);

    buf_V_2_U : component pix_subtract_buf_V_0
    generic map (
        DataWidth => 12,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_2_address0,
        ce0 => buf_V_2_ce0,
        q0 => buf_V_2_q0,
        address1 => buf_V_2_address1,
        ce1 => buf_V_2_ce1,
        we1 => buf_V_2_we1,
        d1 => buf_V_2_d1);

    buf_V_3_U : component pix_subtract_buf_V_0
    generic map (
        DataWidth => 12,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_3_address0,
        ce0 => buf_V_3_ce0,
        q0 => buf_V_3_q0,
        address1 => buf_V_3_address1,
        ce1 => buf_V_3_ce1,
        we1 => buf_V_3_we1,
        d1 => buf_V_3_d1);

    buf_V_4_U : component pix_subtract_buf_V_0
    generic map (
        DataWidth => 12,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_4_address0,
        ce0 => buf_V_4_ce0,
        q0 => buf_V_4_q0,
        address1 => buf_V_4_address1,
        ce1 => buf_V_4_ce1,
        we1 => buf_V_4_we1,
        d1 => buf_V_4_d1);

    buf_V_5_U : component pix_subtract_buf_V_0
    generic map (
        DataWidth => 12,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_5_address0,
        ce0 => buf_V_5_ce0,
        q0 => buf_V_5_q0,
        address1 => buf_V_5_address1,
        ce1 => buf_V_5_ce1,
        we1 => buf_V_5_we1,
        d1 => buf_V_5_d1);

    buf_V_6_U : component pix_subtract_buf_V_0
    generic map (
        DataWidth => 12,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_6_address0,
        ce0 => buf_V_6_ce0,
        q0 => buf_V_6_q0,
        address1 => buf_V_6_address1,
        ce1 => buf_V_6_ce1,
        we1 => buf_V_6_we1,
        d1 => buf_V_6_d1);

    buf_V_7_U : component pix_subtract_buf_V_0
    generic map (
        DataWidth => 12,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_7_address0,
        ce0 => buf_V_7_ce0,
        q0 => buf_V_7_q0,
        address1 => buf_V_7_address1,
        ce1 => buf_V_7_ce1,
        we1 => buf_V_7_we1,
        d1 => buf_V_7_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_329)) then
                if (((arbitrator_load_reg_913 = ap_const_lv1_0) and (tmp_s_reg_918 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396 <= StreamIn_V_Data_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396 <= ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((tmp_s_reg_918_pp0_iter3_reg = ap_const_lv1_0) and (arbitrator_load_reg_913 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396 <= p_Result_22_7_fu_898_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396 <= ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396;
                end if;
            end if; 
        end if;
    end process;

    i_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_384 <= i_2_reg_922;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_384 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_tmp_Data_V_4_reg_396 <= ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396;
                i_2_reg_922 <= i_2_fu_416_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396 <= ap_phi_reg_pp0_iter2_tmp_Data_V_4_reg_396;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_tmp_Data_V_4_reg_396 <= ap_phi_reg_pp0_iter3_tmp_Data_V_4_reg_396;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                arbitrator <= tmp_4_fu_902_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                arbitrator_load_reg_913 <= arbitrator;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_918_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (arbitrator_load_reg_913 = ap_const_lv1_1))) then
                buf_V_0_load_reg_985 <= buf_V_0_q0;
                buf_V_1_load_reg_990 <= buf_V_1_q0;
                buf_V_2_load_reg_995 <= buf_V_2_q0;
                buf_V_3_load_reg_1000 <= buf_V_3_q0;
                buf_V_4_load_reg_1005 <= buf_V_4_q0;
                buf_V_5_load_reg_1010 <= buf_V_5_q0;
                buf_V_6_load_reg_1015 <= buf_V_6_q0;
                buf_V_7_load_reg_1020 <= buf_V_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_918_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (arbitrator_load_reg_913 = ap_const_lv1_1))) then
                tmp_10_reg_1025 <= ret_V_9_fu_546_p2(16 downto 16);
                tmp_12_reg_1030 <= tmp_12_fu_560_p1;
                tmp_14_reg_1035 <= ret_V_9_1_fu_580_p2(16 downto 16);
                tmp_16_reg_1040 <= tmp_16_fu_594_p1;
                tmp_19_reg_1045 <= ret_V_9_2_fu_614_p2(16 downto 16);
                tmp_20_reg_1050 <= tmp_20_fu_628_p1;
                tmp_21_reg_1055 <= ret_V_9_3_fu_648_p2(16 downto 16);
                tmp_22_reg_1060 <= tmp_22_fu_662_p1;
                tmp_23_reg_1065 <= ret_V_9_4_fu_682_p2(16 downto 16);
                tmp_24_reg_1070 <= tmp_24_fu_696_p1;
                tmp_25_reg_1075 <= ret_V_9_5_fu_716_p2(16 downto 16);
                tmp_26_reg_1080 <= tmp_26_fu_730_p1;
                tmp_27_reg_1085 <= ret_V_9_6_fu_750_p2(16 downto 16);
                tmp_28_reg_1090 <= tmp_28_fu_764_p1;
                tmp_29_reg_1095 <= ret_V_9_7_fu_784_p2(16 downto 16);
                tmp_30_reg_1100 <= tmp_30_fu_798_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_918 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_Data_V_reg_967 <= StreamIn_V_Data_V_dout;
                tmp_User_V_reg_980 <= StreamIn_V_User_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                tmp_Data_V_reg_967_pp0_iter2_reg <= tmp_Data_V_reg_967;
                tmp_User_V_reg_980_pp0_iter2_reg <= tmp_User_V_reg_980;
                tmp_User_V_reg_980_pp0_iter3_reg <= tmp_User_V_reg_980_pp0_iter2_reg;
                tmp_User_V_reg_980_pp0_iter4_reg <= tmp_User_V_reg_980_pp0_iter3_reg;
                tmp_s_reg_918_pp0_iter2_reg <= tmp_s_reg_918_pp0_iter1_reg;
                tmp_s_reg_918_pp0_iter3_reg <= tmp_s_reg_918_pp0_iter2_reg;
                tmp_s_reg_918_pp0_iter4_reg <= tmp_s_reg_918_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_s_reg_918 <= tmp_s_fu_410_p2;
                tmp_s_reg_918_pp0_iter1_reg <= tmp_s_reg_918;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, tmp_s_fu_410_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_s_fu_410_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_s_fu_410_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    StreamIn_V_Data_V0_status <= (StreamIn_V_User_V_empty_n and StreamIn_V_Data_V_empty_n);

    StreamIn_V_Data_V0_update_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_918, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            StreamIn_V_Data_V0_update <= ap_const_logic_1;
        else 
            StreamIn_V_Data_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    StreamIn_V_Data_V_blk_n_assign_proc : process(StreamIn_V_Data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_s_reg_918)
    begin
        if (((tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamIn_V_Data_V_blk_n <= StreamIn_V_Data_V_empty_n;
        else 
            StreamIn_V_Data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamIn_V_Data_V_read <= StreamIn_V_Data_V0_update;

    StreamIn_V_User_V_blk_n_assign_proc : process(StreamIn_V_User_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_s_reg_918)
    begin
        if (((tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamIn_V_User_V_blk_n <= StreamIn_V_User_V_empty_n;
        else 
            StreamIn_V_User_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamIn_V_User_V_read <= StreamIn_V_Data_V0_update;
    StreamOut_V_Data_V1_status <= (StreamOut_V_User_V_full_n and StreamOut_V_Data_V_full_n);

    StreamOut_V_Data_V1_update_assign_proc : process(ap_enable_reg_pp0_iter5, tmp_s_reg_918_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_s_reg_918_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            StreamOut_V_Data_V1_update <= ap_const_logic_1;
        else 
            StreamOut_V_Data_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    StreamOut_V_Data_V_blk_n_assign_proc : process(StreamOut_V_Data_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, tmp_s_reg_918_pp0_iter4_reg)
    begin
        if (((tmp_s_reg_918_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamOut_V_Data_V_blk_n <= StreamOut_V_Data_V_full_n;
        else 
            StreamOut_V_Data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamOut_V_Data_V_din <= ap_phi_reg_pp0_iter5_tmp_Data_V_4_reg_396;
    StreamOut_V_Data_V_write <= StreamOut_V_Data_V1_update;

    StreamOut_V_User_V_blk_n_assign_proc : process(StreamOut_V_User_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, tmp_s_reg_918_pp0_iter4_reg)
    begin
        if (((tmp_s_reg_918_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamOut_V_User_V_blk_n <= StreamOut_V_User_V_full_n;
        else 
            StreamOut_V_User_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamOut_V_User_V_din <= tmp_User_V_reg_980_pp0_iter4_reg;
    StreamOut_V_User_V_write <= StreamOut_V_Data_V1_update;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state8 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_s_reg_918, ap_enable_reg_pp0_iter5, tmp_s_reg_918_pp0_iter4_reg, StreamIn_V_Data_V0_status, StreamOut_V_Data_V1_status)
    begin
                ap_block_pp0_stage0_01001 <= (((tmp_s_reg_918_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_0 = StreamOut_V_Data_V1_status) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((tmp_s_reg_918 = ap_const_lv1_0) and (ap_const_logic_0 = StreamIn_V_Data_V0_status) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_s_reg_918, ap_enable_reg_pp0_iter5, tmp_s_reg_918_pp0_iter4_reg, StreamIn_V_Data_V0_status, StreamOut_V_Data_V1_status)
    begin
                ap_block_pp0_stage0_11001 <= (((tmp_s_reg_918_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_0 = StreamOut_V_Data_V1_status) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((tmp_s_reg_918 = ap_const_lv1_0) and (ap_const_logic_0 = StreamIn_V_Data_V0_status) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_s_reg_918, ap_enable_reg_pp0_iter5, tmp_s_reg_918_pp0_iter4_reg, StreamIn_V_Data_V0_status, StreamOut_V_Data_V1_status)
    begin
                ap_block_pp0_stage0_subdone <= (((tmp_s_reg_918_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_0 = StreamOut_V_Data_V1_status) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((tmp_s_reg_918 = ap_const_lv1_0) and (ap_const_logic_0 = StreamIn_V_Data_V0_status) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(tmp_s_reg_918, StreamIn_V_Data_V0_status)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((tmp_s_reg_918 = ap_const_lv1_0) and (ap_const_logic_0 = StreamIn_V_Data_V0_status));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter5_assign_proc : process(tmp_s_reg_918_pp0_iter4_reg, StreamOut_V_Data_V1_status)
    begin
                ap_block_state7_pp0_stage0_iter5 <= ((tmp_s_reg_918_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_0 = StreamOut_V_Data_V1_status));
    end process;


    ap_condition_329_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_329 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_s_fu_410_p2)
    begin
        if ((tmp_s_fu_410_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_388_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_s_reg_918, i_reg_384, i_2_reg_922)
    begin
        if (((tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_388_p4 <= i_2_reg_922;
        else 
            ap_phi_mux_i_phi_fu_388_p4 <= i_reg_384;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_tmp_Data_V_4_reg_396 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;
    buf_V_0_address0 <= i2_fu_422_p1(14 - 1 downto 0);
    buf_V_0_address1 <= i3_fu_442_p1(14 - 1 downto 0);

    buf_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_V_0_ce0 <= ap_const_logic_1;
        else 
            buf_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_0_ce1 <= ap_const_logic_1;
        else 
            buf_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_0_d1 <= StreamIn_V_Data_V_dout(12 - 1 downto 0);

    buf_V_0_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_918, arbitrator_load_reg_913, ap_block_pp0_stage0_11001)
    begin
        if (((arbitrator_load_reg_913 = ap_const_lv1_0) and (tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_0_we1 <= ap_const_logic_1;
        else 
            buf_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_1_address0 <= i2_fu_422_p1(14 - 1 downto 0);
    buf_V_1_address1 <= i3_fu_442_p1(14 - 1 downto 0);

    buf_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_V_1_ce0 <= ap_const_logic_1;
        else 
            buf_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_1_ce1 <= ap_const_logic_1;
        else 
            buf_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_1_d1 <= StreamIn_V_Data_V_dout(27 downto 16);

    buf_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_918, arbitrator_load_reg_913, ap_block_pp0_stage0_11001)
    begin
        if (((arbitrator_load_reg_913 = ap_const_lv1_0) and (tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_1_we1 <= ap_const_logic_1;
        else 
            buf_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_2_address0 <= i2_fu_422_p1(14 - 1 downto 0);
    buf_V_2_address1 <= i3_fu_442_p1(14 - 1 downto 0);

    buf_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_V_2_ce0 <= ap_const_logic_1;
        else 
            buf_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_2_ce1 <= ap_const_logic_1;
        else 
            buf_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_2_d1 <= StreamIn_V_Data_V_dout(43 downto 32);

    buf_V_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_918, arbitrator_load_reg_913, ap_block_pp0_stage0_11001)
    begin
        if (((arbitrator_load_reg_913 = ap_const_lv1_0) and (tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_2_we1 <= ap_const_logic_1;
        else 
            buf_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_3_address0 <= i2_fu_422_p1(14 - 1 downto 0);
    buf_V_3_address1 <= i3_fu_442_p1(14 - 1 downto 0);

    buf_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_V_3_ce0 <= ap_const_logic_1;
        else 
            buf_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_3_ce1 <= ap_const_logic_1;
        else 
            buf_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_3_d1 <= StreamIn_V_Data_V_dout(59 downto 48);

    buf_V_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_918, arbitrator_load_reg_913, ap_block_pp0_stage0_11001)
    begin
        if (((arbitrator_load_reg_913 = ap_const_lv1_0) and (tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_3_we1 <= ap_const_logic_1;
        else 
            buf_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_4_address0 <= i2_fu_422_p1(14 - 1 downto 0);
    buf_V_4_address1 <= i3_fu_442_p1(14 - 1 downto 0);

    buf_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_V_4_ce0 <= ap_const_logic_1;
        else 
            buf_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_4_ce1 <= ap_const_logic_1;
        else 
            buf_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_4_d1 <= StreamIn_V_Data_V_dout(75 downto 64);

    buf_V_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_918, arbitrator_load_reg_913, ap_block_pp0_stage0_11001)
    begin
        if (((arbitrator_load_reg_913 = ap_const_lv1_0) and (tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_4_we1 <= ap_const_logic_1;
        else 
            buf_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_5_address0 <= i2_fu_422_p1(14 - 1 downto 0);
    buf_V_5_address1 <= i3_fu_442_p1(14 - 1 downto 0);

    buf_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_V_5_ce0 <= ap_const_logic_1;
        else 
            buf_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_5_ce1 <= ap_const_logic_1;
        else 
            buf_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_5_d1 <= StreamIn_V_Data_V_dout(91 downto 80);

    buf_V_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_918, arbitrator_load_reg_913, ap_block_pp0_stage0_11001)
    begin
        if (((arbitrator_load_reg_913 = ap_const_lv1_0) and (tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_5_we1 <= ap_const_logic_1;
        else 
            buf_V_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_6_address0 <= i2_fu_422_p1(14 - 1 downto 0);
    buf_V_6_address1 <= i3_fu_442_p1(14 - 1 downto 0);

    buf_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_V_6_ce0 <= ap_const_logic_1;
        else 
            buf_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_6_ce1 <= ap_const_logic_1;
        else 
            buf_V_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_6_d1 <= StreamIn_V_Data_V_dout(107 downto 96);

    buf_V_6_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_918, arbitrator_load_reg_913, ap_block_pp0_stage0_11001)
    begin
        if (((arbitrator_load_reg_913 = ap_const_lv1_0) and (tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_6_we1 <= ap_const_logic_1;
        else 
            buf_V_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_7_address0 <= i2_fu_422_p1(14 - 1 downto 0);
    buf_V_7_address1 <= i3_fu_442_p1(14 - 1 downto 0);

    buf_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_V_7_ce0 <= ap_const_logic_1;
        else 
            buf_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_7_ce1 <= ap_const_logic_1;
        else 
            buf_V_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_7_d1 <= StreamIn_V_Data_V_dout(123 downto 112);

    buf_V_7_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_s_reg_918, arbitrator_load_reg_913, ap_block_pp0_stage0_11001)
    begin
        if (((arbitrator_load_reg_913 = ap_const_lv1_0) and (tmp_s_reg_918 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_7_we1 <= ap_const_logic_1;
        else 
            buf_V_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    i2_fu_422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_phi_fu_388_p4),64));
    i3_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_384),64));
    i_2_fu_416_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_388_p4) + unsigned(ap_const_lv14_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    lhs_V_1_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_1_fu_564_p4),17));
    lhs_V_2_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_2_fu_598_p4),17));
    lhs_V_3_fu_641_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_3_fu_632_p4),17));
    lhs_V_4_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_4_fu_666_p4),17));
    lhs_V_5_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_5_fu_700_p4),17));
    lhs_V_6_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_6_fu_734_p4),17));
    lhs_V_7_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_7_fu_768_p4),17));
    lhs_V_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_536_p1),17));
    p_Result_18_1_fu_564_p4 <= tmp_Data_V_reg_967_pp0_iter2_reg(31 downto 16);
    p_Result_18_2_fu_598_p4 <= tmp_Data_V_reg_967_pp0_iter2_reg(47 downto 32);
    p_Result_18_3_fu_632_p4 <= tmp_Data_V_reg_967_pp0_iter2_reg(63 downto 48);
    p_Result_18_4_fu_666_p4 <= tmp_Data_V_reg_967_pp0_iter2_reg(79 downto 64);
    p_Result_18_5_fu_700_p4 <= tmp_Data_V_reg_967_pp0_iter2_reg(95 downto 80);
    p_Result_18_6_fu_734_p4 <= tmp_Data_V_reg_967_pp0_iter2_reg(111 downto 96);
    p_Result_18_7_fu_768_p4 <= tmp_Data_V_reg_967_pp0_iter2_reg(127 downto 112);
    p_Result_22_7_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_878_p9),128));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_9_1_fu_580_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_573_p1) - unsigned(rhs_V_1_fu_577_p1));
    ret_V_9_2_fu_614_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_607_p1) - unsigned(rhs_V_2_fu_611_p1));
    ret_V_9_3_fu_648_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_641_p1) - unsigned(rhs_V_3_fu_645_p1));
    ret_V_9_4_fu_682_p2 <= std_logic_vector(unsigned(lhs_V_4_fu_675_p1) - unsigned(rhs_V_4_fu_679_p1));
    ret_V_9_5_fu_716_p2 <= std_logic_vector(unsigned(lhs_V_5_fu_709_p1) - unsigned(rhs_V_5_fu_713_p1));
    ret_V_9_6_fu_750_p2 <= std_logic_vector(unsigned(lhs_V_6_fu_743_p1) - unsigned(rhs_V_6_fu_747_p1));
    ret_V_9_7_fu_784_p2 <= std_logic_vector(unsigned(lhs_V_7_fu_777_p1) - unsigned(rhs_V_7_fu_781_p1));
    ret_V_9_fu_546_p2 <= std_logic_vector(unsigned(lhs_V_fu_539_p1) - unsigned(rhs_V_fu_543_p1));
    rhs_V_1_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_V_1_load_reg_990),17));
    rhs_V_2_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_V_2_load_reg_995),17));
    rhs_V_3_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_V_3_load_reg_1000),17));
    rhs_V_4_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_V_4_load_reg_1005),17));
    rhs_V_5_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_V_5_load_reg_1010),17));
    rhs_V_6_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_V_6_load_reg_1015),17));
    rhs_V_7_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_V_7_load_reg_1020),17));
    rhs_V_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_V_0_load_reg_985),17));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_11_fu_872_p3 <= 
        ap_const_lv12_0 when (tmp_29_reg_1095(0) = '1') else 
        tmp_30_reg_1100;
    tmp_12_fu_560_p1 <= ret_V_9_fu_546_p2(12 - 1 downto 0);
    tmp_13_fu_878_p9 <= (((((((tmp_11_fu_872_p3 & tmp_V_6_trunc_fu_868_p1) & tmp_V_5_trunc_fu_858_p1) & tmp_V_4_trunc_fu_848_p1) & tmp_V_3_trunc_fu_838_p1) & tmp_V_2_trunc_fu_828_p1) & tmp_V_1_trunc_fu_818_p1) & tmp_V_0_trunc_fu_808_p1);
    tmp_16_fu_594_p1 <= ret_V_9_1_fu_580_p2(12 - 1 downto 0);
    tmp_1_fu_842_p3 <= 
        ap_const_lv12_0 when (tmp_23_reg_1065(0) = '1') else 
        tmp_24_reg_1070;
    tmp_20_fu_628_p1 <= ret_V_9_2_fu_614_p2(12 - 1 downto 0);
    tmp_22_fu_662_p1 <= ret_V_9_3_fu_648_p2(12 - 1 downto 0);
    tmp_24_fu_696_p1 <= ret_V_9_4_fu_682_p2(12 - 1 downto 0);
    tmp_26_fu_730_p1 <= ret_V_9_5_fu_716_p2(12 - 1 downto 0);
    tmp_28_fu_764_p1 <= ret_V_9_6_fu_750_p2(12 - 1 downto 0);
    tmp_2_fu_832_p3 <= 
        ap_const_lv12_0 when (tmp_21_reg_1055(0) = '1') else 
        tmp_22_reg_1060;
    tmp_30_fu_798_p1 <= ret_V_9_7_fu_784_p2(12 - 1 downto 0);
    tmp_3_fu_852_p3 <= 
        ap_const_lv12_0 when (tmp_25_reg_1075(0) = '1') else 
        tmp_26_reg_1080;
    tmp_4_fu_902_p2 <= (arbitrator_load_reg_913 xor ap_const_lv1_1);
    tmp_5_fu_802_p3 <= 
        ap_const_lv12_0 when (tmp_10_reg_1025(0) = '1') else 
        tmp_12_reg_1030;
    tmp_6_fu_862_p3 <= 
        ap_const_lv12_0 when (tmp_27_reg_1085(0) = '1') else 
        tmp_28_reg_1090;
    tmp_7_fu_812_p3 <= 
        ap_const_lv12_0 when (tmp_14_reg_1035(0) = '1') else 
        tmp_16_reg_1040;
    tmp_8_fu_536_p1 <= tmp_Data_V_reg_967_pp0_iter2_reg(16 - 1 downto 0);
    tmp_9_fu_822_p3 <= 
        ap_const_lv12_0 when (tmp_19_reg_1045(0) = '1') else 
        tmp_20_reg_1050;
    tmp_V_0_trunc_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_802_p3),16));
    tmp_V_1_trunc_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_812_p3),16));
    tmp_V_2_trunc_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_822_p3),16));
    tmp_V_3_trunc_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_832_p3),16));
    tmp_V_4_trunc_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_842_p3),16));
    tmp_V_5_trunc_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_852_p3),16));
    tmp_V_6_trunc_fu_868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_862_p3),16));
    tmp_s_fu_410_p2 <= "1" when (ap_phi_mux_i_phi_fu_388_p4 = ap_const_lv14_2800) else "0";
end behav;
