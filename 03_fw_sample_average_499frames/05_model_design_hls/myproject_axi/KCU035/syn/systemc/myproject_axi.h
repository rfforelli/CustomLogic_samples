// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_axi_HH_
#define _myproject_axi_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject.h"

namespace ap_rtl {

struct myproject_axi : public sc_module {
    // Port declarations 56
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<128> > VideoIn_TDATA;
    sc_in< sc_logic > VideoIn_TVALID;
    sc_out< sc_logic > VideoIn_TREADY;
    sc_in< sc_lv<4> > VideoIn_TUSER;
    sc_out< sc_lv<128> > VideoOut_TDATA;
    sc_out< sc_logic > VideoOut_TVALID;
    sc_in< sc_logic > VideoOut_TREADY;
    sc_out< sc_lv<4> > VideoOut_TUSER;
    sc_in< sc_lv<8> > MetaIn_StreamId;
    sc_in< sc_logic > MetaIn_StreamId_ap_vld;
    sc_in< sc_lv<16> > MetaIn_SourceTag;
    sc_in< sc_logic > MetaIn_SourceTag_ap_vld;
    sc_in< sc_lv<24> > MetaIn_Xsize_V;
    sc_in< sc_logic > MetaIn_Xsize_V_ap_vld;
    sc_in< sc_lv<24> > MetaIn_Xoffs_V;
    sc_in< sc_logic > MetaIn_Xoffs_V_ap_vld;
    sc_in< sc_lv<24> > MetaIn_Ysize_V;
    sc_in< sc_logic > MetaIn_Ysize_V_ap_vld;
    sc_in< sc_lv<24> > MetaIn_Yoffs_V;
    sc_in< sc_logic > MetaIn_Yoffs_V_ap_vld;
    sc_in< sc_lv<24> > MetaIn_DsizeL_V;
    sc_in< sc_logic > MetaIn_DsizeL_V_ap_vld;
    sc_in< sc_lv<16> > MetaIn_PixelF;
    sc_in< sc_logic > MetaIn_PixelF_ap_vld;
    sc_in< sc_lv<16> > MetaIn_TapG;
    sc_in< sc_logic > MetaIn_TapG_ap_vld;
    sc_in< sc_lv<8> > MetaIn_Flags;
    sc_in< sc_logic > MetaIn_Flags_ap_vld;
    sc_in< sc_lv<32> > MetaIn_Timestamp;
    sc_in< sc_logic > MetaIn_Timestamp_ap_vld;
    sc_in< sc_lv<8> > MetaIn_PixProcessingFlgs;
    sc_in< sc_logic > MetaIn_PixProcessingFlgs_ap_vld;
    sc_in< sc_lv<32> > MetaIn_ModPixelF;
    sc_in< sc_logic > MetaIn_ModPixelF_ap_vld;
    sc_in< sc_lv<32> > MetaIn_Status;
    sc_in< sc_logic > MetaIn_Status_ap_vld;
    sc_out< sc_lv<8> > MetaOut_StreamId;
    sc_out< sc_lv<16> > MetaOut_SourceTag;
    sc_out< sc_lv<24> > MetaOut_Xsize_V;
    sc_out< sc_lv<24> > MetaOut_Xoffs_V;
    sc_out< sc_lv<24> > MetaOut_Ysize_V;
    sc_out< sc_lv<24> > MetaOut_Yoffs_V;
    sc_out< sc_lv<24> > MetaOut_DsizeL_V;
    sc_out< sc_lv<16> > MetaOut_PixelF;
    sc_out< sc_lv<16> > MetaOut_TapG;
    sc_out< sc_lv<8> > MetaOut_Flags;
    sc_out< sc_lv<32> > MetaOut_Timestamp;
    sc_out< sc_lv<8> > MetaOut_PixProcessingFlgs;
    sc_out< sc_lv<32> > MetaOut_ModPixelF;
    sc_out< sc_lv<32> > MetaOut_Status;


    // Module declarations
    myproject_axi(sc_module_name name);
    SC_HAS_PROCESS(myproject_axi);

    ~myproject_axi();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    myproject* grp_myproject_fu_320;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<128> > VideoIn_V_Data_V_0_data_out;
    sc_signal< sc_logic > VideoIn_V_Data_V_0_vld_in;
    sc_signal< sc_logic > VideoIn_V_Data_V_0_vld_out;
    sc_signal< sc_logic > VideoIn_V_Data_V_0_ack_in;
    sc_signal< sc_logic > VideoIn_V_Data_V_0_ack_out;
    sc_signal< sc_lv<128> > VideoIn_V_Data_V_0_payload_A;
    sc_signal< sc_lv<128> > VideoIn_V_Data_V_0_payload_B;
    sc_signal< sc_logic > VideoIn_V_Data_V_0_sel_rd;
    sc_signal< sc_logic > VideoIn_V_Data_V_0_sel_wr;
    sc_signal< sc_logic > VideoIn_V_Data_V_0_sel;
    sc_signal< sc_logic > VideoIn_V_Data_V_0_load_A;
    sc_signal< sc_logic > VideoIn_V_Data_V_0_load_B;
    sc_signal< sc_lv<2> > VideoIn_V_Data_V_0_state;
    sc_signal< sc_logic > VideoIn_V_Data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > VideoIn_V_User_V_0_data_out;
    sc_signal< sc_logic > VideoIn_V_User_V_0_vld_in;
    sc_signal< sc_logic > VideoIn_V_User_V_0_vld_out;
    sc_signal< sc_logic > VideoIn_V_User_V_0_ack_in;
    sc_signal< sc_logic > VideoIn_V_User_V_0_ack_out;
    sc_signal< sc_lv<4> > VideoIn_V_User_V_0_payload_A;
    sc_signal< sc_lv<4> > VideoIn_V_User_V_0_payload_B;
    sc_signal< sc_logic > VideoIn_V_User_V_0_sel_rd;
    sc_signal< sc_logic > VideoIn_V_User_V_0_sel_wr;
    sc_signal< sc_logic > VideoIn_V_User_V_0_sel;
    sc_signal< sc_logic > VideoIn_V_User_V_0_load_A;
    sc_signal< sc_logic > VideoIn_V_User_V_0_load_B;
    sc_signal< sc_lv<2> > VideoIn_V_User_V_0_state;
    sc_signal< sc_logic > VideoIn_V_User_V_0_state_cmp_full;
    sc_signal< sc_lv<128> > VideoOut_V_Data_V_1_data_out;
    sc_signal< sc_logic > VideoOut_V_Data_V_1_vld_in;
    sc_signal< sc_logic > VideoOut_V_Data_V_1_vld_out;
    sc_signal< sc_logic > VideoOut_V_Data_V_1_ack_in;
    sc_signal< sc_logic > VideoOut_V_Data_V_1_ack_out;
    sc_signal< sc_lv<128> > VideoOut_V_Data_V_1_payload_A;
    sc_signal< sc_lv<128> > VideoOut_V_Data_V_1_payload_B;
    sc_signal< sc_logic > VideoOut_V_Data_V_1_sel_rd;
    sc_signal< sc_logic > VideoOut_V_Data_V_1_sel_wr;
    sc_signal< sc_logic > VideoOut_V_Data_V_1_sel;
    sc_signal< sc_logic > VideoOut_V_Data_V_1_load_A;
    sc_signal< sc_logic > VideoOut_V_Data_V_1_load_B;
    sc_signal< sc_lv<2> > VideoOut_V_Data_V_1_state;
    sc_signal< sc_logic > VideoOut_V_Data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > VideoOut_V_User_V_1_data_out;
    sc_signal< sc_logic > VideoOut_V_User_V_1_vld_in;
    sc_signal< sc_logic > VideoOut_V_User_V_1_vld_out;
    sc_signal< sc_logic > VideoOut_V_User_V_1_ack_in;
    sc_signal< sc_logic > VideoOut_V_User_V_1_ack_out;
    sc_signal< sc_lv<4> > VideoOut_V_User_V_1_payload_A;
    sc_signal< sc_lv<4> > VideoOut_V_User_V_1_payload_B;
    sc_signal< sc_logic > VideoOut_V_User_V_1_sel_rd;
    sc_signal< sc_logic > VideoOut_V_User_V_1_sel_wr;
    sc_signal< sc_logic > VideoOut_V_User_V_1_sel;
    sc_signal< sc_logic > VideoOut_V_User_V_1_load_A;
    sc_signal< sc_logic > VideoOut_V_User_V_1_load_B;
    sc_signal< sc_lv<2> > VideoOut_V_User_V_1_state;
    sc_signal< sc_logic > VideoOut_V_User_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > MetaIn_StreamId_preg;
    sc_signal< sc_logic > MetaIn_StreamId_ap_vld_preg;
    sc_signal< sc_lv<16> > MetaIn_SourceTag_preg;
    sc_signal< sc_logic > MetaIn_SourceTag_ap_vld_preg;
    sc_signal< sc_lv<24> > MetaIn_Xsize_V_preg;
    sc_signal< sc_logic > MetaIn_Xsize_V_ap_vld_preg;
    sc_signal< sc_lv<24> > MetaIn_Xoffs_V_preg;
    sc_signal< sc_logic > MetaIn_Xoffs_V_ap_vld_preg;
    sc_signal< sc_lv<24> > MetaIn_Ysize_V_preg;
    sc_signal< sc_logic > MetaIn_Ysize_V_ap_vld_preg;
    sc_signal< sc_lv<24> > MetaIn_Yoffs_V_preg;
    sc_signal< sc_logic > MetaIn_Yoffs_V_ap_vld_preg;
    sc_signal< sc_lv<24> > MetaIn_DsizeL_V_preg;
    sc_signal< sc_logic > MetaIn_DsizeL_V_ap_vld_preg;
    sc_signal< sc_lv<16> > MetaIn_PixelF_preg;
    sc_signal< sc_logic > MetaIn_PixelF_ap_vld_preg;
    sc_signal< sc_lv<16> > MetaIn_TapG_preg;
    sc_signal< sc_logic > MetaIn_TapG_ap_vld_preg;
    sc_signal< sc_lv<8> > MetaIn_Flags_preg;
    sc_signal< sc_logic > MetaIn_Flags_ap_vld_preg;
    sc_signal< sc_lv<32> > MetaIn_Timestamp_preg;
    sc_signal< sc_logic > MetaIn_Timestamp_ap_vld_preg;
    sc_signal< sc_lv<8> > MetaIn_PixProcessingFlgs_preg;
    sc_signal< sc_logic > MetaIn_PixProcessingFlgs_ap_vld_preg;
    sc_signal< sc_lv<32> > MetaIn_ModPixelF_preg;
    sc_signal< sc_logic > MetaIn_ModPixelF_ap_vld_preg;
    sc_signal< sc_lv<32> > MetaIn_Status_preg;
    sc_signal< sc_logic > MetaIn_Status_ap_vld_preg;
    sc_signal< sc_logic > MetaIn_StreamId_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > MetaIn_SourceTag_blk_n;
    sc_signal< sc_logic > MetaIn_Xsize_V_blk_n;
    sc_signal< sc_logic > MetaIn_Xoffs_V_blk_n;
    sc_signal< sc_logic > MetaIn_Ysize_V_blk_n;
    sc_signal< sc_logic > MetaIn_Yoffs_V_blk_n;
    sc_signal< sc_logic > MetaIn_DsizeL_V_blk_n;
    sc_signal< sc_logic > MetaIn_PixelF_blk_n;
    sc_signal< sc_logic > MetaIn_TapG_blk_n;
    sc_signal< sc_logic > MetaIn_Flags_blk_n;
    sc_signal< sc_logic > MetaIn_Timestamp_blk_n;
    sc_signal< sc_logic > MetaIn_PixProcessingFlgs_blk_n;
    sc_signal< sc_logic > MetaIn_ModPixelF_blk_n;
    sc_signal< sc_logic > MetaIn_Status_blk_n;
    sc_signal< sc_lv<128> > grp_myproject_fu_320_VideoOut_TDATA;
    sc_signal< sc_lv<4> > grp_myproject_fu_320_VideoOut_TUSER;
    sc_signal< sc_logic > grp_myproject_fu_320_VideoIn_TVALID;
    sc_signal< sc_logic > grp_myproject_fu_320_VideoIn_TREADY;
    sc_signal< sc_logic > grp_myproject_fu_320_ap_start;
    sc_signal< sc_logic > grp_myproject_fu_320_VideoOut_TVALID;
    sc_signal< sc_logic > grp_myproject_fu_320_VideoOut_TREADY;
    sc_signal< sc_logic > grp_myproject_fu_320_ap_done;
    sc_signal< sc_logic > grp_myproject_fu_320_ap_ready;
    sc_signal< sc_logic > grp_myproject_fu_320_ap_idle;
    sc_signal< sc_logic > grp_myproject_fu_320_ap_continue;
    sc_signal< sc_logic > grp_myproject_fu_320_ap_start_reg;
    sc_signal< bool > ap_block_state2_ignore_call65;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_sync_grp_myproject_fu_320_ap_ready;
    sc_signal< sc_logic > ap_sync_grp_myproject_fu_320_ap_done;
    sc_signal< bool > ap_block_state3_on_subcall_done;
    sc_signal< sc_logic > ap_sync_reg_grp_myproject_fu_320_ap_ready;
    sc_signal< sc_logic > ap_sync_reg_grp_myproject_fu_320_ap_done;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<8> > MetaOut_StreamId_preg;
    sc_signal< sc_lv<16> > MetaOut_SourceTag_preg;
    sc_signal< sc_lv<24> > MetaOut_Xsize_V_preg;
    sc_signal< sc_lv<24> > MetaOut_Xoffs_V_preg;
    sc_signal< sc_lv<24> > MetaOut_Ysize_V_preg;
    sc_signal< sc_lv<24> > MetaOut_Yoffs_V_preg;
    sc_signal< sc_lv<24> > MetaOut_DsizeL_V_preg;
    sc_signal< sc_lv<16> > MetaOut_PixelF_preg;
    sc_signal< sc_lv<16> > MetaOut_TapG_preg;
    sc_signal< sc_lv<8> > MetaOut_Flags_preg;
    sc_signal< sc_lv<32> > MetaOut_Timestamp_preg;
    sc_signal< sc_lv<8> > MetaOut_PixProcessingFlgs_preg;
    sc_signal< sc_lv<32> > MetaOut_ModPixelF_preg;
    sc_signal< sc_lv<32> > MetaOut_Status_preg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_MetaIn_DsizeL_V_blk_n();
    void thread_MetaIn_Flags_blk_n();
    void thread_MetaIn_ModPixelF_blk_n();
    void thread_MetaIn_PixProcessingFlgs_blk_n();
    void thread_MetaIn_PixelF_blk_n();
    void thread_MetaIn_SourceTag_blk_n();
    void thread_MetaIn_Status_blk_n();
    void thread_MetaIn_StreamId_blk_n();
    void thread_MetaIn_TapG_blk_n();
    void thread_MetaIn_Timestamp_blk_n();
    void thread_MetaIn_Xoffs_V_blk_n();
    void thread_MetaIn_Xsize_V_blk_n();
    void thread_MetaIn_Yoffs_V_blk_n();
    void thread_MetaIn_Ysize_V_blk_n();
    void thread_MetaOut_DsizeL_V();
    void thread_MetaOut_Flags();
    void thread_MetaOut_ModPixelF();
    void thread_MetaOut_PixProcessingFlgs();
    void thread_MetaOut_PixelF();
    void thread_MetaOut_SourceTag();
    void thread_MetaOut_Status();
    void thread_MetaOut_StreamId();
    void thread_MetaOut_TapG();
    void thread_MetaOut_Timestamp();
    void thread_MetaOut_Xoffs_V();
    void thread_MetaOut_Xsize_V();
    void thread_MetaOut_Yoffs_V();
    void thread_MetaOut_Ysize_V();
    void thread_VideoIn_TREADY();
    void thread_VideoIn_V_Data_V_0_ack_in();
    void thread_VideoIn_V_Data_V_0_ack_out();
    void thread_VideoIn_V_Data_V_0_data_out();
    void thread_VideoIn_V_Data_V_0_load_A();
    void thread_VideoIn_V_Data_V_0_load_B();
    void thread_VideoIn_V_Data_V_0_sel();
    void thread_VideoIn_V_Data_V_0_state_cmp_full();
    void thread_VideoIn_V_Data_V_0_vld_in();
    void thread_VideoIn_V_Data_V_0_vld_out();
    void thread_VideoIn_V_User_V_0_ack_in();
    void thread_VideoIn_V_User_V_0_ack_out();
    void thread_VideoIn_V_User_V_0_data_out();
    void thread_VideoIn_V_User_V_0_load_A();
    void thread_VideoIn_V_User_V_0_load_B();
    void thread_VideoIn_V_User_V_0_sel();
    void thread_VideoIn_V_User_V_0_state_cmp_full();
    void thread_VideoIn_V_User_V_0_vld_in();
    void thread_VideoIn_V_User_V_0_vld_out();
    void thread_VideoOut_TDATA();
    void thread_VideoOut_TUSER();
    void thread_VideoOut_TVALID();
    void thread_VideoOut_V_Data_V_1_ack_in();
    void thread_VideoOut_V_Data_V_1_ack_out();
    void thread_VideoOut_V_Data_V_1_data_out();
    void thread_VideoOut_V_Data_V_1_load_A();
    void thread_VideoOut_V_Data_V_1_load_B();
    void thread_VideoOut_V_Data_V_1_sel();
    void thread_VideoOut_V_Data_V_1_state_cmp_full();
    void thread_VideoOut_V_Data_V_1_vld_in();
    void thread_VideoOut_V_Data_V_1_vld_out();
    void thread_VideoOut_V_User_V_1_ack_in();
    void thread_VideoOut_V_User_V_1_ack_out();
    void thread_VideoOut_V_User_V_1_data_out();
    void thread_VideoOut_V_User_V_1_load_A();
    void thread_VideoOut_V_User_V_1_load_B();
    void thread_VideoOut_V_User_V_1_sel();
    void thread_VideoOut_V_User_V_1_state_cmp_full();
    void thread_VideoOut_V_User_V_1_vld_in();
    void thread_VideoOut_V_User_V_1_vld_out();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state2();
    void thread_ap_block_state2_ignore_call65();
    void thread_ap_block_state3_on_subcall_done();
    void thread_ap_block_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_grp_myproject_fu_320_ap_done();
    void thread_ap_sync_grp_myproject_fu_320_ap_ready();
    void thread_grp_myproject_fu_320_VideoIn_TVALID();
    void thread_grp_myproject_fu_320_VideoOut_TREADY();
    void thread_grp_myproject_fu_320_ap_continue();
    void thread_grp_myproject_fu_320_ap_start();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
