-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pix_average is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    StreamIn_V_Data_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    StreamIn_V_Data_V_empty_n : IN STD_LOGIC;
    StreamIn_V_Data_V_read : OUT STD_LOGIC;
    StreamIn_V_User_V_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    StreamIn_V_User_V_empty_n : IN STD_LOGIC;
    StreamIn_V_User_V_read : OUT STD_LOGIC;
    StreamOut_V_Data_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    StreamOut_V_Data_V_full_n : IN STD_LOGIC;
    StreamOut_V_Data_V_write : OUT STD_LOGIC;
    StreamOut_V_User_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    StreamOut_V_User_V_full_n : IN STD_LOGIC;
    StreamOut_V_User_V_write : OUT STD_LOGIC );
end;


architecture behav of pix_average is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_1F3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110011";
    constant ap_const_lv14_2800 : STD_LOGIC_VECTOR (13 downto 0) := "10100000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv44_20D56C : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000001000001101010101101100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal cntr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sum_V_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_ce0 : STD_LOGIC;
    signal sum_V_0_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_0_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_ce1 : STD_LOGIC;
    signal sum_V_0_we1 : STD_LOGIC;
    signal sum_V_0_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_ce0 : STD_LOGIC;
    signal sum_V_1_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_1_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_ce1 : STD_LOGIC;
    signal sum_V_1_we1 : STD_LOGIC;
    signal sum_V_1_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_ce0 : STD_LOGIC;
    signal sum_V_2_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_2_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_ce1 : STD_LOGIC;
    signal sum_V_2_we1 : STD_LOGIC;
    signal sum_V_2_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_ce0 : STD_LOGIC;
    signal sum_V_3_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_3_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_ce1 : STD_LOGIC;
    signal sum_V_3_we1 : STD_LOGIC;
    signal sum_V_3_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_4_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_ce0 : STD_LOGIC;
    signal sum_V_4_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_4_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_ce1 : STD_LOGIC;
    signal sum_V_4_we1 : STD_LOGIC;
    signal sum_V_4_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_5_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_ce0 : STD_LOGIC;
    signal sum_V_5_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_5_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_ce1 : STD_LOGIC;
    signal sum_V_5_we1 : STD_LOGIC;
    signal sum_V_5_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_6_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_ce0 : STD_LOGIC;
    signal sum_V_6_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_6_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_ce1 : STD_LOGIC;
    signal sum_V_6_we1 : STD_LOGIC;
    signal sum_V_6_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_7_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_ce0 : STD_LOGIC;
    signal sum_V_7_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_7_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_ce1 : STD_LOGIC;
    signal sum_V_7_we1 : STD_LOGIC;
    signal sum_V_7_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal StreamIn_V_Data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_s_reg_1118 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1118_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal StreamIn_V_User_V_blk_n : STD_LOGIC;
    signal StreamOut_V_Data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal tmp_s_reg_1118_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal StreamOut_V_User_V_blk_n : STD_LOGIC;
    signal output_buf_reg_396 : STD_LOGIC_VECTOR (131 downto 0);
    signal i_reg_408 : STD_LOGIC_VECTOR (13 downto 0);
    signal reg_431 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal StreamIn_V_Data_V0_status : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal StreamOut_V_Data_V1_status : STD_LOGIC;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_6_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1113 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_435 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_439 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_443 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_447 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_451 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_455 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_459 : STD_LOGIC_VECTOR (20 downto 0);
    signal cntr_load_reg_1104 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_6_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal tmp_s_reg_1118_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1118_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1118_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1118_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1118_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1118_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_485_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal sum_V_0_addr_1_reg_1127 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_1_reg_1127_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_1_reg_1127_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_1_reg_1127_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_1_reg_1133 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_1_reg_1133_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_1_reg_1133_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_1_reg_1133_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_1_reg_1139 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_1_reg_1139_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_1_reg_1139_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_1_reg_1139_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_1_reg_1145 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_1_reg_1145_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_1_reg_1145_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_1_reg_1145_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_1_reg_1151 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_1_reg_1151_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_1_reg_1151_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_1_reg_1151_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_1_reg_1157 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_1_reg_1157_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_1_reg_1157_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_1_reg_1157_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_1_reg_1163 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_1_reg_1163_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_1_reg_1163_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_1_reg_1163_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_1_reg_1169 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_1_reg_1169_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_1_reg_1169_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_1_reg_1169_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_reg_1175 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_reg_1175_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_reg_1175_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_reg_1175_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_reg_1181 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_reg_1181_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_reg_1181_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_reg_1181_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_reg_1187 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_reg_1187_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_reg_1187_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_reg_1187_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_reg_1193 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_reg_1193_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_reg_1193_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_reg_1193_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_reg_1199 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_reg_1199_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_reg_1199_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_reg_1199_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_reg_1205 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_reg_1205_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_reg_1205_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_reg_1205_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_reg_1211 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_reg_1211_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_reg_1211_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_reg_1211_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_reg_1217 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_reg_1217_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_reg_1217_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_reg_1217_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_Data_V_reg_1223 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_User_V_reg_1235 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_1235_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_1235_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_1235_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_1235_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_1235_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_1235_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_603_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_1281 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_1281_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_1281_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_1281_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_1281_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_1281_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_fu_610_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_reg_1286 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_9_1_fu_616_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_1_reg_1291 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_1_reg_1291_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_1_reg_1291_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_1_reg_1291_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_1_reg_1291_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_1_reg_1291_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_1_fu_629_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_1_reg_1296 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_9_2_fu_635_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_2_reg_1301 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_2_reg_1301_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_2_reg_1301_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_2_reg_1301_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_2_reg_1301_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_2_reg_1301_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_2_fu_648_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_2_reg_1306 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_9_3_fu_654_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_3_reg_1311 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_3_reg_1311_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_3_reg_1311_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_3_reg_1311_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_3_reg_1311_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_3_reg_1311_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_3_fu_667_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_3_reg_1316 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_9_4_fu_673_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_4_reg_1321 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_4_reg_1321_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_4_reg_1321_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_4_reg_1321_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_4_reg_1321_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_4_reg_1321_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_4_fu_686_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_4_reg_1326 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_9_5_fu_692_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_5_reg_1331 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_5_reg_1331_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_5_reg_1331_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_5_reg_1331_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_5_reg_1331_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_5_reg_1331_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_5_fu_705_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_5_reg_1336 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_9_6_fu_711_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_6_reg_1341 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_6_reg_1341_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_6_reg_1341_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_6_reg_1341_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_6_reg_1341_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_6_reg_1341_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_6_fu_724_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_6_reg_1346 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_9_7_fu_730_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_7_reg_1351 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_7_reg_1351_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_7_reg_1351_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_7_reg_1351_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_7_reg_1351_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_7_reg_1351_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_7_fu_743_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_7_reg_1356 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_12_reg_1361 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_13_reg_1366 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_14_reg_1371 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_15_reg_1376 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_16_reg_1381 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_17_reg_1386 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_18_reg_1391 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_19_reg_1396 : STD_LOGIC_VECTOR (13 downto 0);
    signal output_buf_1_fu_1071_p5 : STD_LOGIC_VECTOR (131 downto 0);
    signal tmp_5_fu_1087_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1406 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_phi_mux_output_buf_4_phi_fu_422_p6 : STD_LOGIC_VECTOR (131 downto 0);
    signal output_buf14_part_se_fu_1058_p5 : STD_LOGIC_VECTOR (131 downto 0);
    signal ap_phi_reg_pp0_iter9_output_buf_4_reg_419 : STD_LOGIC_VECTOR (131 downto 0);
    signal output_buf10_part_se_fu_953_p5 : STD_LOGIC_VECTOR (131 downto 0);
    signal i3_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i2_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal StreamIn_V_Data_V0_update : STD_LOGIC;
    signal StreamOut_V_Data_V1_update : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal storemerge_fu_1092_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_fu_527_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_527_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_537_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_537_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_547_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_547_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_557_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_557_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_567_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_567_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_577_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_577_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_587_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_587_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_597_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_597_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_fu_606_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_1_fu_625_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_2_fu_644_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_3_fu_663_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_4_fu_682_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_5_fu_701_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_6_fu_720_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_7_fu_739_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_527_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_537_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_547_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_557_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_567_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_577_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_587_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_597_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_11_fu_829_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_V_0_trunc_fu_833_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_25_fu_836_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_V_1_trunc_fu_848_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_12_1_fu_851_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_V_2_trunc_fu_863_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_12_2_fu_866_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_V_3_trunc_fu_878_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_12_3_fu_881_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_V_4_trunc_fu_893_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_12_4_fu_896_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_V_5_trunc_fu_908_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_12_5_fu_911_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_V_6_trunc_fu_923_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_12_6_fu_926_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_V_7_trunc_fu_938_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_12_7_fu_941_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_10_fu_966_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_s_fu_970_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_1_fu_981_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_2_fu_992_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_3_fu_1003_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_4_fu_1014_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_5_fu_1025_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_6_fu_1036_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_7_fu_1047_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_527_ce : STD_LOGIC;
    signal grp_fu_537_ce : STD_LOGIC;
    signal grp_fu_547_ce : STD_LOGIC;
    signal grp_fu_557_ce : STD_LOGIC;
    signal grp_fu_567_ce : STD_LOGIC;
    signal grp_fu_577_ce : STD_LOGIC;
    signal grp_fu_587_ce : STD_LOGIC;
    signal grp_fu_597_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_527_p10 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_537_p10 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_547_p10 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_557_p10 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_567_p10 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_577_p10 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_587_p10 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_597_p10 : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_condition_166 : BOOLEAN;
    signal ap_condition_1196 : BOOLEAN;
    signal ap_condition_1199 : BOOLEAN;

    component myproject_axi_mul_23ns_21ns_44_6_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (22 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component pix_average_sum_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (20 downto 0) );
    end component;



begin
    sum_V_0_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_0_address0,
        ce0 => sum_V_0_ce0,
        q0 => sum_V_0_q0,
        address1 => sum_V_0_address1,
        ce1 => sum_V_0_ce1,
        we1 => sum_V_0_we1,
        d1 => sum_V_0_d1);

    sum_V_1_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_1_address0,
        ce0 => sum_V_1_ce0,
        q0 => sum_V_1_q0,
        address1 => sum_V_1_address1,
        ce1 => sum_V_1_ce1,
        we1 => sum_V_1_we1,
        d1 => sum_V_1_d1);

    sum_V_2_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_2_address0,
        ce0 => sum_V_2_ce0,
        q0 => sum_V_2_q0,
        address1 => sum_V_2_address1,
        ce1 => sum_V_2_ce1,
        we1 => sum_V_2_we1,
        d1 => sum_V_2_d1);

    sum_V_3_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_3_address0,
        ce0 => sum_V_3_ce0,
        q0 => sum_V_3_q0,
        address1 => sum_V_3_address1,
        ce1 => sum_V_3_ce1,
        we1 => sum_V_3_we1,
        d1 => sum_V_3_d1);

    sum_V_4_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_4_address0,
        ce0 => sum_V_4_ce0,
        q0 => sum_V_4_q0,
        address1 => sum_V_4_address1,
        ce1 => sum_V_4_ce1,
        we1 => sum_V_4_we1,
        d1 => sum_V_4_d1);

    sum_V_5_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_5_address0,
        ce0 => sum_V_5_ce0,
        q0 => sum_V_5_q0,
        address1 => sum_V_5_address1,
        ce1 => sum_V_5_ce1,
        we1 => sum_V_5_we1,
        d1 => sum_V_5_d1);

    sum_V_6_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_6_address0,
        ce0 => sum_V_6_ce0,
        q0 => sum_V_6_q0,
        address1 => sum_V_6_address1,
        ce1 => sum_V_6_ce1,
        we1 => sum_V_6_we1,
        d1 => sum_V_6_d1);

    sum_V_7_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_7_address0,
        ce0 => sum_V_7_ce0,
        q0 => sum_V_7_q0,
        address1 => sum_V_7_address1,
        ce1 => sum_V_7_ce1,
        we1 => sum_V_7_we1,
        d1 => sum_V_7_d1);

    myproject_axi_mul_23ns_21ns_44_6_1_U5 : component myproject_axi_mul_23ns_21ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 23,
        din1_WIDTH => 21,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_527_p0,
        din1 => grp_fu_527_p1,
        ce => grp_fu_527_ce,
        dout => grp_fu_527_p2);

    myproject_axi_mul_23ns_21ns_44_6_1_U6 : component myproject_axi_mul_23ns_21ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 23,
        din1_WIDTH => 21,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_537_p0,
        din1 => grp_fu_537_p1,
        ce => grp_fu_537_ce,
        dout => grp_fu_537_p2);

    myproject_axi_mul_23ns_21ns_44_6_1_U7 : component myproject_axi_mul_23ns_21ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 23,
        din1_WIDTH => 21,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_547_p0,
        din1 => grp_fu_547_p1,
        ce => grp_fu_547_ce,
        dout => grp_fu_547_p2);

    myproject_axi_mul_23ns_21ns_44_6_1_U8 : component myproject_axi_mul_23ns_21ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 23,
        din1_WIDTH => 21,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_557_p0,
        din1 => grp_fu_557_p1,
        ce => grp_fu_557_ce,
        dout => grp_fu_557_p2);

    myproject_axi_mul_23ns_21ns_44_6_1_U9 : component myproject_axi_mul_23ns_21ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 23,
        din1_WIDTH => 21,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_567_p0,
        din1 => grp_fu_567_p1,
        ce => grp_fu_567_ce,
        dout => grp_fu_567_p2);

    myproject_axi_mul_23ns_21ns_44_6_1_U10 : component myproject_axi_mul_23ns_21ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 23,
        din1_WIDTH => 21,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_577_p0,
        din1 => grp_fu_577_p1,
        ce => grp_fu_577_ce,
        dout => grp_fu_577_p2);

    myproject_axi_mul_23ns_21ns_44_6_1_U11 : component myproject_axi_mul_23ns_21ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 23,
        din1_WIDTH => 21,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_587_p0,
        din1 => grp_fu_587_p1,
        ce => grp_fu_587_ce,
        dout => grp_fu_587_p2);

    myproject_axi_mul_23ns_21ns_44_6_1_U12 : component myproject_axi_mul_23ns_21ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 23,
        din1_WIDTH => 21,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_597_p0,
        din1 => grp_fu_597_p1,
        ce => grp_fu_597_ce,
        dout => grp_fu_597_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0))) then 
                i_reg_408 <= i_2_fu_485_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_408 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                cntr <= storemerge_fu_1092_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cntr_load_reg_1104 <= cntr;
                tmp_6_reg_1109 <= tmp_6_fu_467_p2;
                tmp_8_reg_1113 <= tmp_8_fu_473_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter8_reg = ap_const_lv1_0))) then
                output_buf_reg_396 <= output_buf_1_fu_1071_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter2_reg = ap_const_lv1_0))) then
                p_Result_9_1_reg_1291 <= tmp_Data_V_reg_1223(31 downto 16);
                p_Result_9_2_reg_1301 <= tmp_Data_V_reg_1223(47 downto 32);
                p_Result_9_3_reg_1311 <= tmp_Data_V_reg_1223(63 downto 48);
                p_Result_9_4_reg_1321 <= tmp_Data_V_reg_1223(79 downto 64);
                p_Result_9_5_reg_1331 <= tmp_Data_V_reg_1223(95 downto 80);
                p_Result_9_6_reg_1341 <= tmp_Data_V_reg_1223(111 downto 96);
                p_Result_9_7_reg_1351 <= tmp_Data_V_reg_1223(127 downto 112);
                ret_V_7_1_reg_1296 <= ret_V_7_1_fu_629_p2;
                ret_V_7_2_reg_1306 <= ret_V_7_2_fu_648_p2;
                ret_V_7_3_reg_1316 <= ret_V_7_3_fu_667_p2;
                ret_V_7_4_reg_1326 <= ret_V_7_4_fu_686_p2;
                ret_V_7_5_reg_1336 <= ret_V_7_5_fu_705_p2;
                ret_V_7_6_reg_1346 <= ret_V_7_6_fu_724_p2;
                ret_V_7_7_reg_1356 <= ret_V_7_7_fu_743_p2;
                ret_V_7_reg_1286 <= ret_V_7_fu_610_p2;
                tmp_9_reg_1281 <= tmp_9_fu_603_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                p_Result_9_1_reg_1291_pp0_iter4_reg <= p_Result_9_1_reg_1291;
                p_Result_9_1_reg_1291_pp0_iter5_reg <= p_Result_9_1_reg_1291_pp0_iter4_reg;
                p_Result_9_1_reg_1291_pp0_iter6_reg <= p_Result_9_1_reg_1291_pp0_iter5_reg;
                p_Result_9_1_reg_1291_pp0_iter7_reg <= p_Result_9_1_reg_1291_pp0_iter6_reg;
                p_Result_9_1_reg_1291_pp0_iter8_reg <= p_Result_9_1_reg_1291_pp0_iter7_reg;
                p_Result_9_2_reg_1301_pp0_iter4_reg <= p_Result_9_2_reg_1301;
                p_Result_9_2_reg_1301_pp0_iter5_reg <= p_Result_9_2_reg_1301_pp0_iter4_reg;
                p_Result_9_2_reg_1301_pp0_iter6_reg <= p_Result_9_2_reg_1301_pp0_iter5_reg;
                p_Result_9_2_reg_1301_pp0_iter7_reg <= p_Result_9_2_reg_1301_pp0_iter6_reg;
                p_Result_9_2_reg_1301_pp0_iter8_reg <= p_Result_9_2_reg_1301_pp0_iter7_reg;
                p_Result_9_3_reg_1311_pp0_iter4_reg <= p_Result_9_3_reg_1311;
                p_Result_9_3_reg_1311_pp0_iter5_reg <= p_Result_9_3_reg_1311_pp0_iter4_reg;
                p_Result_9_3_reg_1311_pp0_iter6_reg <= p_Result_9_3_reg_1311_pp0_iter5_reg;
                p_Result_9_3_reg_1311_pp0_iter7_reg <= p_Result_9_3_reg_1311_pp0_iter6_reg;
                p_Result_9_3_reg_1311_pp0_iter8_reg <= p_Result_9_3_reg_1311_pp0_iter7_reg;
                p_Result_9_4_reg_1321_pp0_iter4_reg <= p_Result_9_4_reg_1321;
                p_Result_9_4_reg_1321_pp0_iter5_reg <= p_Result_9_4_reg_1321_pp0_iter4_reg;
                p_Result_9_4_reg_1321_pp0_iter6_reg <= p_Result_9_4_reg_1321_pp0_iter5_reg;
                p_Result_9_4_reg_1321_pp0_iter7_reg <= p_Result_9_4_reg_1321_pp0_iter6_reg;
                p_Result_9_4_reg_1321_pp0_iter8_reg <= p_Result_9_4_reg_1321_pp0_iter7_reg;
                p_Result_9_5_reg_1331_pp0_iter4_reg <= p_Result_9_5_reg_1331;
                p_Result_9_5_reg_1331_pp0_iter5_reg <= p_Result_9_5_reg_1331_pp0_iter4_reg;
                p_Result_9_5_reg_1331_pp0_iter6_reg <= p_Result_9_5_reg_1331_pp0_iter5_reg;
                p_Result_9_5_reg_1331_pp0_iter7_reg <= p_Result_9_5_reg_1331_pp0_iter6_reg;
                p_Result_9_5_reg_1331_pp0_iter8_reg <= p_Result_9_5_reg_1331_pp0_iter7_reg;
                p_Result_9_6_reg_1341_pp0_iter4_reg <= p_Result_9_6_reg_1341;
                p_Result_9_6_reg_1341_pp0_iter5_reg <= p_Result_9_6_reg_1341_pp0_iter4_reg;
                p_Result_9_6_reg_1341_pp0_iter6_reg <= p_Result_9_6_reg_1341_pp0_iter5_reg;
                p_Result_9_6_reg_1341_pp0_iter7_reg <= p_Result_9_6_reg_1341_pp0_iter6_reg;
                p_Result_9_6_reg_1341_pp0_iter8_reg <= p_Result_9_6_reg_1341_pp0_iter7_reg;
                p_Result_9_7_reg_1351_pp0_iter4_reg <= p_Result_9_7_reg_1351;
                p_Result_9_7_reg_1351_pp0_iter5_reg <= p_Result_9_7_reg_1351_pp0_iter4_reg;
                p_Result_9_7_reg_1351_pp0_iter6_reg <= p_Result_9_7_reg_1351_pp0_iter5_reg;
                p_Result_9_7_reg_1351_pp0_iter7_reg <= p_Result_9_7_reg_1351_pp0_iter6_reg;
                p_Result_9_7_reg_1351_pp0_iter8_reg <= p_Result_9_7_reg_1351_pp0_iter7_reg;
                sum_V_0_addr_1_reg_1127_pp0_iter2_reg <= sum_V_0_addr_1_reg_1127_pp0_iter1_reg;
                sum_V_0_addr_1_reg_1127_pp0_iter3_reg <= sum_V_0_addr_1_reg_1127_pp0_iter2_reg;
                sum_V_0_addr_reg_1175_pp0_iter2_reg <= sum_V_0_addr_reg_1175_pp0_iter1_reg;
                sum_V_0_addr_reg_1175_pp0_iter3_reg <= sum_V_0_addr_reg_1175_pp0_iter2_reg;
                sum_V_1_addr_1_reg_1133_pp0_iter2_reg <= sum_V_1_addr_1_reg_1133_pp0_iter1_reg;
                sum_V_1_addr_1_reg_1133_pp0_iter3_reg <= sum_V_1_addr_1_reg_1133_pp0_iter2_reg;
                sum_V_1_addr_reg_1181_pp0_iter2_reg <= sum_V_1_addr_reg_1181_pp0_iter1_reg;
                sum_V_1_addr_reg_1181_pp0_iter3_reg <= sum_V_1_addr_reg_1181_pp0_iter2_reg;
                sum_V_2_addr_1_reg_1139_pp0_iter2_reg <= sum_V_2_addr_1_reg_1139_pp0_iter1_reg;
                sum_V_2_addr_1_reg_1139_pp0_iter3_reg <= sum_V_2_addr_1_reg_1139_pp0_iter2_reg;
                sum_V_2_addr_reg_1187_pp0_iter2_reg <= sum_V_2_addr_reg_1187_pp0_iter1_reg;
                sum_V_2_addr_reg_1187_pp0_iter3_reg <= sum_V_2_addr_reg_1187_pp0_iter2_reg;
                sum_V_3_addr_1_reg_1145_pp0_iter2_reg <= sum_V_3_addr_1_reg_1145_pp0_iter1_reg;
                sum_V_3_addr_1_reg_1145_pp0_iter3_reg <= sum_V_3_addr_1_reg_1145_pp0_iter2_reg;
                sum_V_3_addr_reg_1193_pp0_iter2_reg <= sum_V_3_addr_reg_1193_pp0_iter1_reg;
                sum_V_3_addr_reg_1193_pp0_iter3_reg <= sum_V_3_addr_reg_1193_pp0_iter2_reg;
                sum_V_4_addr_1_reg_1151_pp0_iter2_reg <= sum_V_4_addr_1_reg_1151_pp0_iter1_reg;
                sum_V_4_addr_1_reg_1151_pp0_iter3_reg <= sum_V_4_addr_1_reg_1151_pp0_iter2_reg;
                sum_V_4_addr_reg_1199_pp0_iter2_reg <= sum_V_4_addr_reg_1199_pp0_iter1_reg;
                sum_V_4_addr_reg_1199_pp0_iter3_reg <= sum_V_4_addr_reg_1199_pp0_iter2_reg;
                sum_V_5_addr_1_reg_1157_pp0_iter2_reg <= sum_V_5_addr_1_reg_1157_pp0_iter1_reg;
                sum_V_5_addr_1_reg_1157_pp0_iter3_reg <= sum_V_5_addr_1_reg_1157_pp0_iter2_reg;
                sum_V_5_addr_reg_1205_pp0_iter2_reg <= sum_V_5_addr_reg_1205_pp0_iter1_reg;
                sum_V_5_addr_reg_1205_pp0_iter3_reg <= sum_V_5_addr_reg_1205_pp0_iter2_reg;
                sum_V_6_addr_1_reg_1163_pp0_iter2_reg <= sum_V_6_addr_1_reg_1163_pp0_iter1_reg;
                sum_V_6_addr_1_reg_1163_pp0_iter3_reg <= sum_V_6_addr_1_reg_1163_pp0_iter2_reg;
                sum_V_6_addr_reg_1211_pp0_iter2_reg <= sum_V_6_addr_reg_1211_pp0_iter1_reg;
                sum_V_6_addr_reg_1211_pp0_iter3_reg <= sum_V_6_addr_reg_1211_pp0_iter2_reg;
                sum_V_7_addr_1_reg_1169_pp0_iter2_reg <= sum_V_7_addr_1_reg_1169_pp0_iter1_reg;
                sum_V_7_addr_1_reg_1169_pp0_iter3_reg <= sum_V_7_addr_1_reg_1169_pp0_iter2_reg;
                sum_V_7_addr_reg_1217_pp0_iter2_reg <= sum_V_7_addr_reg_1217_pp0_iter1_reg;
                sum_V_7_addr_reg_1217_pp0_iter3_reg <= sum_V_7_addr_reg_1217_pp0_iter2_reg;
                tmp_9_reg_1281_pp0_iter4_reg <= tmp_9_reg_1281;
                tmp_9_reg_1281_pp0_iter5_reg <= tmp_9_reg_1281_pp0_iter4_reg;
                tmp_9_reg_1281_pp0_iter6_reg <= tmp_9_reg_1281_pp0_iter5_reg;
                tmp_9_reg_1281_pp0_iter7_reg <= tmp_9_reg_1281_pp0_iter6_reg;
                tmp_9_reg_1281_pp0_iter8_reg <= tmp_9_reg_1281_pp0_iter7_reg;
                tmp_User_V_reg_1235_pp0_iter3_reg <= tmp_User_V_reg_1235;
                tmp_User_V_reg_1235_pp0_iter4_reg <= tmp_User_V_reg_1235_pp0_iter3_reg;
                tmp_User_V_reg_1235_pp0_iter5_reg <= tmp_User_V_reg_1235_pp0_iter4_reg;
                tmp_User_V_reg_1235_pp0_iter6_reg <= tmp_User_V_reg_1235_pp0_iter5_reg;
                tmp_User_V_reg_1235_pp0_iter7_reg <= tmp_User_V_reg_1235_pp0_iter6_reg;
                tmp_User_V_reg_1235_pp0_iter8_reg <= tmp_User_V_reg_1235_pp0_iter7_reg;
                tmp_s_reg_1118_pp0_iter2_reg <= tmp_s_reg_1118_pp0_iter1_reg;
                tmp_s_reg_1118_pp0_iter3_reg <= tmp_s_reg_1118_pp0_iter2_reg;
                tmp_s_reg_1118_pp0_iter4_reg <= tmp_s_reg_1118_pp0_iter3_reg;
                tmp_s_reg_1118_pp0_iter5_reg <= tmp_s_reg_1118_pp0_iter4_reg;
                tmp_s_reg_1118_pp0_iter6_reg <= tmp_s_reg_1118_pp0_iter5_reg;
                tmp_s_reg_1118_pp0_iter7_reg <= tmp_s_reg_1118_pp0_iter6_reg;
                tmp_s_reg_1118_pp0_iter8_reg <= tmp_s_reg_1118_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter1_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_1109 = ap_const_lv1_0) and (tmp_s_reg_1118_pp0_iter1_reg = ap_const_lv1_0)))) then
                reg_431 <= sum_V_0_q0;
                reg_435 <= sum_V_1_q0;
                reg_439 <= sum_V_2_q0;
                reg_443 <= sum_V_3_q0;
                reg_447 <= sum_V_4_q0;
                reg_451 <= sum_V_5_q0;
                reg_455 <= sum_V_6_q0;
                reg_459 <= sum_V_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0))) then
                sum_V_0_addr_1_reg_1127 <= i3_fu_491_p1(14 - 1 downto 0);
                sum_V_1_addr_1_reg_1133 <= i3_fu_491_p1(14 - 1 downto 0);
                sum_V_2_addr_1_reg_1139 <= i3_fu_491_p1(14 - 1 downto 0);
                sum_V_3_addr_1_reg_1145 <= i3_fu_491_p1(14 - 1 downto 0);
                sum_V_4_addr_1_reg_1151 <= i3_fu_491_p1(14 - 1 downto 0);
                sum_V_5_addr_1_reg_1157 <= i3_fu_491_p1(14 - 1 downto 0);
                sum_V_6_addr_1_reg_1163 <= i3_fu_491_p1(14 - 1 downto 0);
                sum_V_7_addr_1_reg_1169 <= i3_fu_491_p1(14 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_0_addr_1_reg_1127_pp0_iter1_reg <= sum_V_0_addr_1_reg_1127;
                sum_V_0_addr_reg_1175_pp0_iter1_reg <= sum_V_0_addr_reg_1175;
                sum_V_1_addr_1_reg_1133_pp0_iter1_reg <= sum_V_1_addr_1_reg_1133;
                sum_V_1_addr_reg_1181_pp0_iter1_reg <= sum_V_1_addr_reg_1181;
                sum_V_2_addr_1_reg_1139_pp0_iter1_reg <= sum_V_2_addr_1_reg_1139;
                sum_V_2_addr_reg_1187_pp0_iter1_reg <= sum_V_2_addr_reg_1187;
                sum_V_3_addr_1_reg_1145_pp0_iter1_reg <= sum_V_3_addr_1_reg_1145;
                sum_V_3_addr_reg_1193_pp0_iter1_reg <= sum_V_3_addr_reg_1193;
                sum_V_4_addr_1_reg_1151_pp0_iter1_reg <= sum_V_4_addr_1_reg_1151;
                sum_V_4_addr_reg_1199_pp0_iter1_reg <= sum_V_4_addr_reg_1199;
                sum_V_5_addr_1_reg_1157_pp0_iter1_reg <= sum_V_5_addr_1_reg_1157;
                sum_V_5_addr_reg_1205_pp0_iter1_reg <= sum_V_5_addr_reg_1205;
                sum_V_6_addr_1_reg_1163_pp0_iter1_reg <= sum_V_6_addr_1_reg_1163;
                sum_V_6_addr_reg_1211_pp0_iter1_reg <= sum_V_6_addr_reg_1211;
                sum_V_7_addr_1_reg_1169_pp0_iter1_reg <= sum_V_7_addr_1_reg_1169;
                sum_V_7_addr_reg_1217_pp0_iter1_reg <= sum_V_7_addr_reg_1217;
                tmp_s_reg_1118 <= tmp_s_fu_479_p2;
                tmp_s_reg_1118_pp0_iter1_reg <= tmp_s_reg_1118;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0))) then
                sum_V_0_addr_reg_1175 <= i2_fu_503_p1(14 - 1 downto 0);
                sum_V_1_addr_reg_1181 <= i2_fu_503_p1(14 - 1 downto 0);
                sum_V_2_addr_reg_1187 <= i2_fu_503_p1(14 - 1 downto 0);
                sum_V_3_addr_reg_1193 <= i2_fu_503_p1(14 - 1 downto 0);
                sum_V_4_addr_reg_1199 <= i2_fu_503_p1(14 - 1 downto 0);
                sum_V_5_addr_reg_1205 <= i2_fu_503_p1(14 - 1 downto 0);
                sum_V_6_addr_reg_1211 <= i2_fu_503_p1(14 - 1 downto 0);
                sum_V_7_addr_reg_1217 <= i2_fu_503_p1(14 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter7_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0))) then
                tmp_12_reg_1361 <= grp_fu_527_p2(43 downto 30);
                tmp_13_reg_1366 <= grp_fu_537_p2(43 downto 30);
                tmp_14_reg_1371 <= grp_fu_547_p2(43 downto 30);
                tmp_15_reg_1376 <= grp_fu_557_p2(43 downto 30);
                tmp_16_reg_1381 <= grp_fu_567_p2(43 downto 30);
                tmp_17_reg_1386 <= grp_fu_577_p2(43 downto 30);
                tmp_18_reg_1391 <= grp_fu_587_p2(43 downto 30);
                tmp_19_reg_1396 <= grp_fu_597_p2(43 downto 30);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (tmp_8_reg_1113 = ap_const_lv1_0))) then
                tmp_5_reg_1406 <= tmp_5_fu_1087_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_Data_V_reg_1223 <= StreamIn_V_Data_V_dout;
                tmp_User_V_reg_1235 <= StreamIn_V_User_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter9, tmp_s_fu_479_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_s_fu_479_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_s_fu_479_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    StreamIn_V_Data_V0_status <= (StreamIn_V_User_V_empty_n and StreamIn_V_Data_V_empty_n);

    StreamIn_V_Data_V0_update_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_s_reg_1118_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter1_reg = ap_const_lv1_0))) then 
            StreamIn_V_Data_V0_update <= ap_const_logic_1;
        else 
            StreamIn_V_Data_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    StreamIn_V_Data_V_blk_n_assign_proc : process(StreamIn_V_Data_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, tmp_s_reg_1118_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamIn_V_Data_V_blk_n <= StreamIn_V_Data_V_empty_n;
        else 
            StreamIn_V_Data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamIn_V_Data_V_read <= StreamIn_V_Data_V0_update;

    StreamIn_V_User_V_blk_n_assign_proc : process(StreamIn_V_User_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, tmp_s_reg_1118_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamIn_V_User_V_blk_n <= StreamIn_V_User_V_empty_n;
        else 
            StreamIn_V_User_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamIn_V_User_V_read <= StreamIn_V_Data_V0_update;
    StreamOut_V_Data_V1_status <= (StreamOut_V_User_V_full_n and StreamOut_V_Data_V_full_n);

    StreamOut_V_Data_V1_update_assign_proc : process(ap_enable_reg_pp0_iter9, tmp_s_reg_1118_pp0_iter8_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter8_reg = ap_const_lv1_0))) then 
            StreamOut_V_Data_V1_update <= ap_const_logic_1;
        else 
            StreamOut_V_Data_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    StreamOut_V_Data_V_blk_n_assign_proc : process(StreamOut_V_Data_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter9, tmp_s_reg_1118_pp0_iter8_reg)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamOut_V_Data_V_blk_n <= StreamOut_V_Data_V_full_n;
        else 
            StreamOut_V_Data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamOut_V_Data_V_din <= ap_phi_mux_output_buf_4_phi_fu_422_p6(128 - 1 downto 0);
    StreamOut_V_Data_V_write <= StreamOut_V_Data_V1_update;

    StreamOut_V_User_V_blk_n_assign_proc : process(StreamOut_V_User_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter9, tmp_s_reg_1118_pp0_iter8_reg)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamOut_V_User_V_blk_n <= StreamOut_V_User_V_full_n;
        else 
            StreamOut_V_User_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamOut_V_User_V_din <= tmp_User_V_reg_1235_pp0_iter8_reg;
    StreamOut_V_User_V_write <= StreamOut_V_Data_V1_update;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(2);
    ap_CS_fsm_state13 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_s_reg_1118_pp0_iter1_reg, ap_enable_reg_pp0_iter9, tmp_s_reg_1118_pp0_iter8_reg, StreamIn_V_Data_V0_status, StreamOut_V_Data_V1_status)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_logic_0 = StreamOut_V_Data_V1_status) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = StreamIn_V_Data_V0_status) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_s_reg_1118_pp0_iter1_reg, ap_enable_reg_pp0_iter9, tmp_s_reg_1118_pp0_iter8_reg, StreamIn_V_Data_V0_status, StreamOut_V_Data_V1_status)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_logic_0 = StreamOut_V_Data_V1_status) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = StreamIn_V_Data_V0_status) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_s_reg_1118_pp0_iter1_reg, ap_enable_reg_pp0_iter9, tmp_s_reg_1118_pp0_iter8_reg, StreamIn_V_Data_V0_status, StreamOut_V_Data_V1_status)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_logic_0 = StreamOut_V_Data_V1_status) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = StreamIn_V_Data_V0_status) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter9_assign_proc : process(tmp_s_reg_1118_pp0_iter8_reg, StreamOut_V_Data_V1_status)
    begin
                ap_block_state11_pp0_stage0_iter9 <= ((ap_const_logic_0 = StreamOut_V_Data_V1_status) and (tmp_s_reg_1118_pp0_iter8_reg = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(tmp_s_reg_1118_pp0_iter1_reg, StreamIn_V_Data_V0_status)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((ap_const_logic_0 = StreamIn_V_Data_V0_status) and (tmp_s_reg_1118_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1196_assign_proc : process(ap_block_pp0_stage0, tmp_s_fu_479_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_1196 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_s_fu_479_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1199_assign_proc : process(ap_block_pp0_stage0, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
                ap_condition_1199 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_166_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter9, tmp_s_reg_1118_pp0_iter8_reg)
    begin
                ap_condition_166 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (tmp_s_reg_1118_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_s_fu_479_p2)
    begin
        if ((tmp_s_fu_479_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_output_buf_4_phi_fu_422_p6_assign_proc : process(output_buf_reg_396, tmp_6_reg_1109, tmp_8_reg_1113, output_buf14_part_se_fu_1058_p5, ap_phi_reg_pp0_iter9_output_buf_4_reg_419, output_buf10_part_se_fu_953_p5, ap_condition_166)
    begin
        if ((ap_const_boolean_1 = ap_condition_166)) then
            if (((tmp_8_reg_1113 = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                ap_phi_mux_output_buf_4_phi_fu_422_p6 <= output_buf_reg_396;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                ap_phi_mux_output_buf_4_phi_fu_422_p6 <= output_buf10_part_se_fu_953_p5;
            elsif ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                ap_phi_mux_output_buf_4_phi_fu_422_p6 <= output_buf14_part_se_fu_1058_p5;
            else 
                ap_phi_mux_output_buf_4_phi_fu_422_p6 <= ap_phi_reg_pp0_iter9_output_buf_4_reg_419;
            end if;
        else 
            ap_phi_mux_output_buf_4_phi_fu_422_p6 <= ap_phi_reg_pp0_iter9_output_buf_4_reg_419;
        end if; 
    end process;

    ap_phi_reg_pp0_iter9_output_buf_4_reg_419 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    grp_fu_527_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_527_ce <= ap_const_logic_1;
        else 
            grp_fu_527_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_527_p0 <= ap_const_lv44_20D56C(23 - 1 downto 0);
    grp_fu_527_p1 <= grp_fu_527_p10(21 - 1 downto 0);
    grp_fu_527_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_431),44));

    grp_fu_537_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_537_ce <= ap_const_logic_1;
        else 
            grp_fu_537_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_537_p0 <= ap_const_lv44_20D56C(23 - 1 downto 0);
    grp_fu_537_p1 <= grp_fu_537_p10(21 - 1 downto 0);
    grp_fu_537_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_435),44));

    grp_fu_547_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_547_ce <= ap_const_logic_1;
        else 
            grp_fu_547_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_547_p0 <= ap_const_lv44_20D56C(23 - 1 downto 0);
    grp_fu_547_p1 <= grp_fu_547_p10(21 - 1 downto 0);
    grp_fu_547_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_439),44));

    grp_fu_557_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_557_ce <= ap_const_logic_1;
        else 
            grp_fu_557_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_557_p0 <= ap_const_lv44_20D56C(23 - 1 downto 0);
    grp_fu_557_p1 <= grp_fu_557_p10(21 - 1 downto 0);
    grp_fu_557_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_443),44));

    grp_fu_567_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_567_ce <= ap_const_logic_1;
        else 
            grp_fu_567_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_567_p0 <= ap_const_lv44_20D56C(23 - 1 downto 0);
    grp_fu_567_p1 <= grp_fu_567_p10(21 - 1 downto 0);
    grp_fu_567_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_447),44));

    grp_fu_577_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_577_ce <= ap_const_logic_1;
        else 
            grp_fu_577_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_577_p0 <= ap_const_lv44_20D56C(23 - 1 downto 0);
    grp_fu_577_p1 <= grp_fu_577_p10(21 - 1 downto 0);
    grp_fu_577_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_451),44));

    grp_fu_587_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_587_ce <= ap_const_logic_1;
        else 
            grp_fu_587_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_587_p0 <= ap_const_lv44_20D56C(23 - 1 downto 0);
    grp_fu_587_p1 <= grp_fu_587_p10(21 - 1 downto 0);
    grp_fu_587_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_455),44));

    grp_fu_597_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_597_ce <= ap_const_logic_1;
        else 
            grp_fu_597_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_597_p0 <= ap_const_lv44_20D56C(23 - 1 downto 0);
    grp_fu_597_p1 <= grp_fu_597_p10(21 - 1 downto 0);
    grp_fu_597_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_459),44));
    i2_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_408),64));
    i3_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_408),64));
    i_2_fu_485_p2 <= std_logic_vector(unsigned(i_reg_408) + unsigned(ap_const_lv14_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    output_buf10_part_se_fu_953_p5 <= (output_buf_reg_396(131 downto 128) & p_Result_12_7_fu_941_p5);
    output_buf14_part_se_fu_1058_p5 <= (output_buf_reg_396(131 downto 128) & p_Result_7_fu_1047_p5);
    output_buf_1_fu_1071_p5 <= (tmp_User_V_reg_1235_pp0_iter8_reg & ap_phi_mux_output_buf_4_phi_fu_422_p6(127 downto 0));
    p_Result_12_1_fu_851_p5 <= (p_Result_s_25_fu_836_p5(127 downto 32) & tmp_V_1_trunc_fu_848_p1 & p_Result_s_25_fu_836_p5(15 downto 0));
    p_Result_12_2_fu_866_p5 <= (p_Result_12_1_fu_851_p5(127 downto 48) & tmp_V_2_trunc_fu_863_p1 & p_Result_12_1_fu_851_p5(31 downto 0));
    p_Result_12_3_fu_881_p5 <= (p_Result_12_2_fu_866_p5(127 downto 64) & tmp_V_3_trunc_fu_878_p1 & p_Result_12_2_fu_866_p5(47 downto 0));
    p_Result_12_4_fu_896_p5 <= (p_Result_12_3_fu_881_p5(127 downto 80) & tmp_V_4_trunc_fu_893_p1 & p_Result_12_3_fu_881_p5(63 downto 0));
    p_Result_12_5_fu_911_p5 <= (p_Result_12_4_fu_896_p5(127 downto 96) & tmp_V_5_trunc_fu_908_p1 & p_Result_12_4_fu_896_p5(79 downto 0));
    p_Result_12_6_fu_926_p5 <= (p_Result_12_5_fu_911_p5(127 downto 112) & tmp_V_6_trunc_fu_923_p1 & p_Result_12_5_fu_911_p5(95 downto 0));
    p_Result_12_7_fu_941_p5 <= (tmp_V_7_trunc_fu_938_p1 & p_Result_12_6_fu_926_p5(111 downto 0));
    p_Result_1_fu_981_p5 <= (p_Result_s_fu_970_p5(127 downto 32) & p_Result_9_1_reg_1291_pp0_iter8_reg & p_Result_s_fu_970_p5(15 downto 0));
    p_Result_2_fu_992_p5 <= (p_Result_1_fu_981_p5(127 downto 48) & p_Result_9_2_reg_1301_pp0_iter8_reg & p_Result_1_fu_981_p5(31 downto 0));
    p_Result_3_fu_1003_p5 <= (p_Result_2_fu_992_p5(127 downto 64) & p_Result_9_3_reg_1311_pp0_iter8_reg & p_Result_2_fu_992_p5(47 downto 0));
    p_Result_4_fu_1014_p5 <= (p_Result_3_fu_1003_p5(127 downto 80) & p_Result_9_4_reg_1321_pp0_iter8_reg & p_Result_3_fu_1003_p5(63 downto 0));
    p_Result_5_fu_1025_p5 <= (p_Result_4_fu_1014_p5(127 downto 96) & p_Result_9_5_reg_1331_pp0_iter8_reg & p_Result_4_fu_1014_p5(79 downto 0));
    p_Result_6_fu_1036_p5 <= (p_Result_5_fu_1025_p5(127 downto 112) & p_Result_9_6_reg_1341_pp0_iter8_reg & p_Result_5_fu_1025_p5(95 downto 0));
    p_Result_7_fu_1047_p5 <= (p_Result_9_7_reg_1351_pp0_iter8_reg & p_Result_6_fu_1036_p5(111 downto 0));
    p_Result_9_1_fu_616_p4 <= tmp_Data_V_reg_1223(31 downto 16);
    p_Result_9_2_fu_635_p4 <= tmp_Data_V_reg_1223(47 downto 32);
    p_Result_9_3_fu_654_p4 <= tmp_Data_V_reg_1223(63 downto 48);
    p_Result_9_4_fu_673_p4 <= tmp_Data_V_reg_1223(79 downto 64);
    p_Result_9_5_fu_692_p4 <= tmp_Data_V_reg_1223(95 downto 80);
    p_Result_9_6_fu_711_p4 <= tmp_Data_V_reg_1223(111 downto 96);
    p_Result_9_7_fu_730_p4 <= tmp_Data_V_reg_1223(127 downto 112);
    p_Result_s_25_fu_836_p5 <= (tmp_11_fu_829_p1(127 downto 16) & tmp_V_0_trunc_fu_833_p1);
    p_Result_s_fu_970_p5 <= (tmp_10_fu_966_p1(127 downto 16) & tmp_9_reg_1281_pp0_iter8_reg);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_7_1_fu_629_p2 <= std_logic_vector(unsigned(rhs_V_1_fu_625_p1) + unsigned(reg_435));
    ret_V_7_2_fu_648_p2 <= std_logic_vector(unsigned(rhs_V_2_fu_644_p1) + unsigned(reg_439));
    ret_V_7_3_fu_667_p2 <= std_logic_vector(unsigned(rhs_V_3_fu_663_p1) + unsigned(reg_443));
    ret_V_7_4_fu_686_p2 <= std_logic_vector(unsigned(rhs_V_4_fu_682_p1) + unsigned(reg_447));
    ret_V_7_5_fu_705_p2 <= std_logic_vector(unsigned(rhs_V_5_fu_701_p1) + unsigned(reg_451));
    ret_V_7_6_fu_724_p2 <= std_logic_vector(unsigned(rhs_V_6_fu_720_p1) + unsigned(reg_455));
    ret_V_7_7_fu_743_p2 <= std_logic_vector(unsigned(rhs_V_7_fu_739_p1) + unsigned(reg_459));
    ret_V_7_fu_610_p2 <= std_logic_vector(unsigned(rhs_V_fu_606_p1) + unsigned(reg_431));
    rhs_V_1_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_1_fu_616_p4),21));
    rhs_V_2_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_2_fu_635_p4),21));
    rhs_V_3_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_3_fu_654_p4),21));
    rhs_V_4_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_4_fu_673_p4),21));
    rhs_V_5_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_5_fu_692_p4),21));
    rhs_V_6_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_6_fu_711_p4),21));
    rhs_V_7_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_7_fu_730_p4),21));
    rhs_V_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_603_p1),21));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    storemerge_fu_1092_p3 <= 
        ap_const_lv32_0 when (tmp_8_reg_1113(0) = '1') else 
        tmp_5_reg_1406;

    sum_V_0_address0_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, i3_fu_491_p1, i2_fu_503_p1, ap_condition_1196)
    begin
        if ((ap_const_boolean_1 = ap_condition_1196)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_0_address0 <= i2_fu_503_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_0_address0 <= i3_fu_491_p1(14 - 1 downto 0);
            else 
                sum_V_0_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_0_address1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, sum_V_0_addr_1_reg_1127_pp0_iter3_reg, sum_V_0_addr_reg_1175_pp0_iter3_reg, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_0_address1 <= sum_V_0_addr_reg_1175_pp0_iter3_reg;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_0_address1 <= sum_V_0_addr_1_reg_1127_pp0_iter3_reg;
            else 
                sum_V_0_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_0_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_fu_479_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_0_ce0 <= ap_const_logic_1;
        else 
            sum_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_0_ce1 <= ap_const_logic_1;
        else 
            sum_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_0_d1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, ret_V_7_reg_1286, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_0_d1 <= ret_V_7_reg_1286;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_0_d1 <= ap_const_lv21_0;
            else 
                sum_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_0_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_0_we1 <= ap_const_logic_1;
        else 
            sum_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_1_address0_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, i3_fu_491_p1, i2_fu_503_p1, ap_condition_1196)
    begin
        if ((ap_const_boolean_1 = ap_condition_1196)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_1_address0 <= i2_fu_503_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_1_address0 <= i3_fu_491_p1(14 - 1 downto 0);
            else 
                sum_V_1_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_1_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_1_address1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, sum_V_1_addr_1_reg_1133_pp0_iter3_reg, sum_V_1_addr_reg_1181_pp0_iter3_reg, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_1_address1 <= sum_V_1_addr_reg_1181_pp0_iter3_reg;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_1_address1 <= sum_V_1_addr_1_reg_1133_pp0_iter3_reg;
            else 
                sum_V_1_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_1_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_fu_479_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_1_ce0 <= ap_const_logic_1;
        else 
            sum_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_1_ce1 <= ap_const_logic_1;
        else 
            sum_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_1_d1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, ret_V_7_1_reg_1296, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_1_d1 <= ret_V_7_1_reg_1296;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_1_d1 <= ap_const_lv21_0;
            else 
                sum_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_1_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_1_we1 <= ap_const_logic_1;
        else 
            sum_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_2_address0_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, i3_fu_491_p1, i2_fu_503_p1, ap_condition_1196)
    begin
        if ((ap_const_boolean_1 = ap_condition_1196)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_2_address0 <= i2_fu_503_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_2_address0 <= i3_fu_491_p1(14 - 1 downto 0);
            else 
                sum_V_2_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_2_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_2_address1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, sum_V_2_addr_1_reg_1139_pp0_iter3_reg, sum_V_2_addr_reg_1187_pp0_iter3_reg, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_2_address1 <= sum_V_2_addr_reg_1187_pp0_iter3_reg;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_2_address1 <= sum_V_2_addr_1_reg_1139_pp0_iter3_reg;
            else 
                sum_V_2_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_2_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_fu_479_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_2_ce0 <= ap_const_logic_1;
        else 
            sum_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_2_ce1 <= ap_const_logic_1;
        else 
            sum_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_2_d1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, ret_V_7_2_reg_1306, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_2_d1 <= ret_V_7_2_reg_1306;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_2_d1 <= ap_const_lv21_0;
            else 
                sum_V_2_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_2_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_2_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_2_we1 <= ap_const_logic_1;
        else 
            sum_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_3_address0_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, i3_fu_491_p1, i2_fu_503_p1, ap_condition_1196)
    begin
        if ((ap_const_boolean_1 = ap_condition_1196)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_3_address0 <= i2_fu_503_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_3_address0 <= i3_fu_491_p1(14 - 1 downto 0);
            else 
                sum_V_3_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_3_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_3_address1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, sum_V_3_addr_1_reg_1145_pp0_iter3_reg, sum_V_3_addr_reg_1193_pp0_iter3_reg, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_3_address1 <= sum_V_3_addr_reg_1193_pp0_iter3_reg;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_3_address1 <= sum_V_3_addr_1_reg_1145_pp0_iter3_reg;
            else 
                sum_V_3_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_3_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_fu_479_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_3_ce0 <= ap_const_logic_1;
        else 
            sum_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_3_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_3_ce1 <= ap_const_logic_1;
        else 
            sum_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_3_d1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, ret_V_7_3_reg_1316, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_3_d1 <= ret_V_7_3_reg_1316;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_3_d1 <= ap_const_lv21_0;
            else 
                sum_V_3_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_3_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_3_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_3_we1 <= ap_const_logic_1;
        else 
            sum_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_4_address0_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, i3_fu_491_p1, i2_fu_503_p1, ap_condition_1196)
    begin
        if ((ap_const_boolean_1 = ap_condition_1196)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_4_address0 <= i2_fu_503_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_4_address0 <= i3_fu_491_p1(14 - 1 downto 0);
            else 
                sum_V_4_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_4_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_4_address1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, sum_V_4_addr_1_reg_1151_pp0_iter3_reg, sum_V_4_addr_reg_1199_pp0_iter3_reg, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_4_address1 <= sum_V_4_addr_reg_1199_pp0_iter3_reg;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_4_address1 <= sum_V_4_addr_1_reg_1151_pp0_iter3_reg;
            else 
                sum_V_4_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_4_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_fu_479_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_4_ce0 <= ap_const_logic_1;
        else 
            sum_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_4_ce1 <= ap_const_logic_1;
        else 
            sum_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_4_d1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, ret_V_7_4_reg_1326, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_4_d1 <= ret_V_7_4_reg_1326;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_4_d1 <= ap_const_lv21_0;
            else 
                sum_V_4_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_4_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_4_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_4_we1 <= ap_const_logic_1;
        else 
            sum_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_5_address0_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, i3_fu_491_p1, i2_fu_503_p1, ap_condition_1196)
    begin
        if ((ap_const_boolean_1 = ap_condition_1196)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_5_address0 <= i2_fu_503_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_5_address0 <= i3_fu_491_p1(14 - 1 downto 0);
            else 
                sum_V_5_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_5_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_5_address1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, sum_V_5_addr_1_reg_1157_pp0_iter3_reg, sum_V_5_addr_reg_1205_pp0_iter3_reg, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_5_address1 <= sum_V_5_addr_reg_1205_pp0_iter3_reg;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_5_address1 <= sum_V_5_addr_1_reg_1157_pp0_iter3_reg;
            else 
                sum_V_5_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_5_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_fu_479_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_5_ce0 <= ap_const_logic_1;
        else 
            sum_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_5_ce1 <= ap_const_logic_1;
        else 
            sum_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_5_d1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, ret_V_7_5_reg_1336, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_5_d1 <= ret_V_7_5_reg_1336;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_5_d1 <= ap_const_lv21_0;
            else 
                sum_V_5_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_5_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_5_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_5_we1 <= ap_const_logic_1;
        else 
            sum_V_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_6_address0_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, i3_fu_491_p1, i2_fu_503_p1, ap_condition_1196)
    begin
        if ((ap_const_boolean_1 = ap_condition_1196)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_6_address0 <= i2_fu_503_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_6_address0 <= i3_fu_491_p1(14 - 1 downto 0);
            else 
                sum_V_6_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_6_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_6_address1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, sum_V_6_addr_1_reg_1163_pp0_iter3_reg, sum_V_6_addr_reg_1211_pp0_iter3_reg, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_6_address1 <= sum_V_6_addr_reg_1211_pp0_iter3_reg;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_6_address1 <= sum_V_6_addr_1_reg_1163_pp0_iter3_reg;
            else 
                sum_V_6_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_6_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_fu_479_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_6_ce0 <= ap_const_logic_1;
        else 
            sum_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_6_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_6_ce1 <= ap_const_logic_1;
        else 
            sum_V_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_6_d1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, ret_V_7_6_reg_1346, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_6_d1 <= ret_V_7_6_reg_1346;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_6_d1 <= ap_const_lv21_0;
            else 
                sum_V_6_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_6_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_6_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_6_we1 <= ap_const_logic_1;
        else 
            sum_V_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_7_address0_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, i3_fu_491_p1, i2_fu_503_p1, ap_condition_1196)
    begin
        if ((ap_const_boolean_1 = ap_condition_1196)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_7_address0 <= i2_fu_503_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_7_address0 <= i3_fu_491_p1(14 - 1 downto 0);
            else 
                sum_V_7_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_7_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_7_address1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, sum_V_7_addr_1_reg_1169_pp0_iter3_reg, sum_V_7_addr_reg_1217_pp0_iter3_reg, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_7_address1 <= sum_V_7_addr_reg_1217_pp0_iter3_reg;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_7_address1 <= sum_V_7_addr_1_reg_1169_pp0_iter3_reg;
            else 
                sum_V_7_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_7_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_fu_479_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_479_p2 = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_7_ce0 <= ap_const_logic_1;
        else 
            sum_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_7_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_7_ce1 <= ap_const_logic_1;
        else 
            sum_V_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_7_d1_assign_proc : process(tmp_6_reg_1109, tmp_8_reg_1113, ret_V_7_7_reg_1356, ap_condition_1199)
    begin
        if ((ap_const_boolean_1 = ap_condition_1199)) then
            if ((tmp_6_reg_1109 = ap_const_lv1_1)) then 
                sum_V_7_d1 <= ret_V_7_7_reg_1356;
            elsif (((tmp_8_reg_1113 = ap_const_lv1_1) and (tmp_6_reg_1109 = ap_const_lv1_0))) then 
                sum_V_7_d1 <= ap_const_lv21_0;
            else 
                sum_V_7_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_7_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_7_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_1109, tmp_8_reg_1113, tmp_s_reg_1118_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_1109 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0)) or ((tmp_8_reg_1113 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_1118_pp0_iter3_reg = ap_const_lv1_0) and (tmp_6_reg_1109 = ap_const_lv1_0)))) then 
            sum_V_7_we1 <= ap_const_logic_1;
        else 
            sum_V_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_966_p1 <= output_buf_reg_396(128 - 1 downto 0);
    tmp_11_fu_829_p1 <= output_buf_reg_396(128 - 1 downto 0);
    tmp_5_fu_1087_p2 <= std_logic_vector(unsigned(cntr_load_reg_1104) + unsigned(ap_const_lv32_1));
    tmp_6_fu_467_p2 <= "1" when (unsigned(cntr) < unsigned(ap_const_lv32_1F3)) else "0";
    tmp_8_fu_473_p2 <= "1" when (cntr = ap_const_lv32_1F3) else "0";
    tmp_9_fu_603_p1 <= tmp_Data_V_reg_1223(16 - 1 downto 0);
        tmp_V_0_trunc_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_reg_1361),16));

        tmp_V_1_trunc_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_reg_1366),16));

        tmp_V_2_trunc_fu_863_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_reg_1371),16));

        tmp_V_3_trunc_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_reg_1376),16));

        tmp_V_4_trunc_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_reg_1381),16));

        tmp_V_5_trunc_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_17_reg_1386),16));

        tmp_V_6_trunc_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_18_reg_1391),16));

        tmp_V_7_trunc_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_19_reg_1396),16));

    tmp_s_fu_479_p2 <= "1" when (i_reg_408 = ap_const_lv14_2800) else "0";
end behav;
