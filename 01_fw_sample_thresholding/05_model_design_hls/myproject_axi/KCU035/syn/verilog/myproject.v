// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject (
        VideoIn_TDATA,
        VideoIn_TUSER,
        VideoOut_TDATA,
        VideoOut_TUSER,
        ap_clk,
        ap_rst,
        VideoIn_TVALID,
        VideoIn_TREADY,
        ap_start,
        VideoOut_TVALID,
        VideoOut_TREADY,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [127:0] VideoIn_TDATA;
input  [3:0] VideoIn_TUSER;
output  [127:0] VideoOut_TDATA;
output  [3:0] VideoOut_TUSER;
input   ap_clk;
input   ap_rst;
input   VideoIn_TVALID;
output   VideoIn_TREADY;
input   ap_start;
output   VideoOut_TVALID;
input   VideoOut_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    read_pixel_data_U0_ap_start;
wire    read_pixel_data_U0_ap_done;
wire    read_pixel_data_U0_ap_continue;
wire    read_pixel_data_U0_ap_idle;
wire    read_pixel_data_U0_ap_ready;
wire    read_pixel_data_U0_start_out;
wire    read_pixel_data_U0_start_write;
wire    read_pixel_data_U0_VideoIn_TREADY;
wire   [127:0] read_pixel_data_U0_StreamOut_V_Data_V_din;
wire    read_pixel_data_U0_StreamOut_V_Data_V_write;
wire   [3:0] read_pixel_data_U0_StreamOut_V_User_V_din;
wire    read_pixel_data_U0_StreamOut_V_User_V_write;
wire    pix_threshold_U0_ap_start;
wire    pix_threshold_U0_ap_done;
wire    pix_threshold_U0_ap_continue;
wire    pix_threshold_U0_ap_idle;
wire    pix_threshold_U0_ap_ready;
wire    pix_threshold_U0_start_out;
wire    pix_threshold_U0_start_write;
wire    pix_threshold_U0_StreamIn_V_Data_V_read;
wire    pix_threshold_U0_StreamIn_V_User_V_read;
wire   [127:0] pix_threshold_U0_StreamOut_V_Data_V_din;
wire    pix_threshold_U0_StreamOut_V_Data_V_write;
wire   [3:0] pix_threshold_U0_StreamOut_V_User_V_din;
wire    pix_threshold_U0_StreamOut_V_User_V_write;
wire    send_output_U0_ap_start;
wire    send_output_U0_ap_done;
wire    send_output_U0_ap_continue;
wire    send_output_U0_ap_idle;
wire    send_output_U0_ap_ready;
wire    send_output_U0_StreamIn_V_Data_V_read;
wire    send_output_U0_StreamIn_V_User_V_read;
wire   [127:0] send_output_U0_VideoOut_TDATA;
wire    send_output_U0_VideoOut_TVALID;
wire   [3:0] send_output_U0_VideoOut_TUSER;
wire    ap_sync_continue;
wire    VideoBuffer_V_Data_V_full_n;
wire   [127:0] VideoBuffer_V_Data_V_dout;
wire    VideoBuffer_V_Data_V_empty_n;
wire    VideoBuffer_V_User_V_full_n;
wire   [3:0] VideoBuffer_V_User_V_dout;
wire    VideoBuffer_V_User_V_empty_n;
wire    ThresholdOut_V_Data_s_full_n;
wire   [127:0] ThresholdOut_V_Data_s_dout;
wire    ThresholdOut_V_Data_s_empty_n;
wire    ThresholdOut_V_User_s_full_n;
wire   [3:0] ThresholdOut_V_User_s_dout;
wire    ThresholdOut_V_User_s_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_pix_threshold_U0_din;
wire    start_for_pix_threshold_U0_full_n;
wire   [0:0] start_for_pix_threshold_U0_dout;
wire    start_for_pix_threshold_U0_empty_n;
wire   [0:0] start_for_send_output_U0_din;
wire    start_for_send_output_U0_full_n;
wire   [0:0] start_for_send_output_U0_dout;
wire    start_for_send_output_U0_empty_n;
wire    send_output_U0_start_full_n;
wire    send_output_U0_start_write;

read_pixel_data read_pixel_data_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(read_pixel_data_U0_ap_start),
    .start_full_n(start_for_pix_threshold_U0_full_n),
    .ap_done(read_pixel_data_U0_ap_done),
    .ap_continue(read_pixel_data_U0_ap_continue),
    .ap_idle(read_pixel_data_U0_ap_idle),
    .ap_ready(read_pixel_data_U0_ap_ready),
    .start_out(read_pixel_data_U0_start_out),
    .start_write(read_pixel_data_U0_start_write),
    .VideoIn_TDATA(VideoIn_TDATA),
    .VideoIn_TVALID(VideoIn_TVALID),
    .VideoIn_TREADY(read_pixel_data_U0_VideoIn_TREADY),
    .VideoIn_TUSER(VideoIn_TUSER),
    .StreamOut_V_Data_V_din(read_pixel_data_U0_StreamOut_V_Data_V_din),
    .StreamOut_V_Data_V_full_n(VideoBuffer_V_Data_V_full_n),
    .StreamOut_V_Data_V_write(read_pixel_data_U0_StreamOut_V_Data_V_write),
    .StreamOut_V_User_V_din(read_pixel_data_U0_StreamOut_V_User_V_din),
    .StreamOut_V_User_V_full_n(VideoBuffer_V_User_V_full_n),
    .StreamOut_V_User_V_write(read_pixel_data_U0_StreamOut_V_User_V_write)
);

pix_threshold pix_threshold_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(pix_threshold_U0_ap_start),
    .start_full_n(start_for_send_output_U0_full_n),
    .ap_done(pix_threshold_U0_ap_done),
    .ap_continue(pix_threshold_U0_ap_continue),
    .ap_idle(pix_threshold_U0_ap_idle),
    .ap_ready(pix_threshold_U0_ap_ready),
    .start_out(pix_threshold_U0_start_out),
    .start_write(pix_threshold_U0_start_write),
    .StreamIn_V_Data_V_dout(VideoBuffer_V_Data_V_dout),
    .StreamIn_V_Data_V_empty_n(VideoBuffer_V_Data_V_empty_n),
    .StreamIn_V_Data_V_read(pix_threshold_U0_StreamIn_V_Data_V_read),
    .StreamIn_V_User_V_dout(VideoBuffer_V_User_V_dout),
    .StreamIn_V_User_V_empty_n(VideoBuffer_V_User_V_empty_n),
    .StreamIn_V_User_V_read(pix_threshold_U0_StreamIn_V_User_V_read),
    .StreamOut_V_Data_V_din(pix_threshold_U0_StreamOut_V_Data_V_din),
    .StreamOut_V_Data_V_full_n(ThresholdOut_V_Data_s_full_n),
    .StreamOut_V_Data_V_write(pix_threshold_U0_StreamOut_V_Data_V_write),
    .StreamOut_V_User_V_din(pix_threshold_U0_StreamOut_V_User_V_din),
    .StreamOut_V_User_V_full_n(ThresholdOut_V_User_s_full_n),
    .StreamOut_V_User_V_write(pix_threshold_U0_StreamOut_V_User_V_write)
);

send_output send_output_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(send_output_U0_ap_start),
    .ap_done(send_output_U0_ap_done),
    .ap_continue(send_output_U0_ap_continue),
    .ap_idle(send_output_U0_ap_idle),
    .ap_ready(send_output_U0_ap_ready),
    .StreamIn_V_Data_V_dout(ThresholdOut_V_Data_s_dout),
    .StreamIn_V_Data_V_empty_n(ThresholdOut_V_Data_s_empty_n),
    .StreamIn_V_Data_V_read(send_output_U0_StreamIn_V_Data_V_read),
    .StreamIn_V_User_V_dout(ThresholdOut_V_User_s_dout),
    .StreamIn_V_User_V_empty_n(ThresholdOut_V_User_s_empty_n),
    .StreamIn_V_User_V_read(send_output_U0_StreamIn_V_User_V_read),
    .VideoOut_TDATA(send_output_U0_VideoOut_TDATA),
    .VideoOut_TVALID(send_output_U0_VideoOut_TVALID),
    .VideoOut_TREADY(VideoOut_TREADY),
    .VideoOut_TUSER(send_output_U0_VideoOut_TUSER)
);

fifo_w128_d10240_A VideoBuffer_V_Data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_pixel_data_U0_StreamOut_V_Data_V_din),
    .if_full_n(VideoBuffer_V_Data_V_full_n),
    .if_write(read_pixel_data_U0_StreamOut_V_Data_V_write),
    .if_dout(VideoBuffer_V_Data_V_dout),
    .if_empty_n(VideoBuffer_V_Data_V_empty_n),
    .if_read(pix_threshold_U0_StreamIn_V_Data_V_read)
);

fifo_w4_d10240_A VideoBuffer_V_User_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_pixel_data_U0_StreamOut_V_User_V_din),
    .if_full_n(VideoBuffer_V_User_V_full_n),
    .if_write(read_pixel_data_U0_StreamOut_V_User_V_write),
    .if_dout(VideoBuffer_V_User_V_dout),
    .if_empty_n(VideoBuffer_V_User_V_empty_n),
    .if_read(pix_threshold_U0_StreamIn_V_User_V_read)
);

fifo_w128_d10240_A ThresholdOut_V_Data_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(pix_threshold_U0_StreamOut_V_Data_V_din),
    .if_full_n(ThresholdOut_V_Data_s_full_n),
    .if_write(pix_threshold_U0_StreamOut_V_Data_V_write),
    .if_dout(ThresholdOut_V_Data_s_dout),
    .if_empty_n(ThresholdOut_V_Data_s_empty_n),
    .if_read(send_output_U0_StreamIn_V_Data_V_read)
);

fifo_w4_d10240_A ThresholdOut_V_User_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(pix_threshold_U0_StreamOut_V_User_V_din),
    .if_full_n(ThresholdOut_V_User_s_full_n),
    .if_write(pix_threshold_U0_StreamOut_V_User_V_write),
    .if_dout(ThresholdOut_V_User_s_dout),
    .if_empty_n(ThresholdOut_V_User_s_empty_n),
    .if_read(send_output_U0_StreamIn_V_User_V_read)
);

start_for_pix_threshold_U0 start_for_pix_threshold_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_pix_threshold_U0_din),
    .if_full_n(start_for_pix_threshold_U0_full_n),
    .if_write(read_pixel_data_U0_start_write),
    .if_dout(start_for_pix_threshold_U0_dout),
    .if_empty_n(start_for_pix_threshold_U0_empty_n),
    .if_read(pix_threshold_U0_ap_ready)
);

start_for_send_output_U0 start_for_send_output_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_send_output_U0_din),
    .if_full_n(start_for_send_output_U0_full_n),
    .if_write(pix_threshold_U0_start_write),
    .if_dout(start_for_send_output_U0_dout),
    .if_empty_n(start_for_send_output_U0_empty_n),
    .if_read(send_output_U0_ap_ready)
);

assign VideoIn_TREADY = read_pixel_data_U0_VideoIn_TREADY;

assign VideoOut_TDATA = send_output_U0_VideoOut_TDATA;

assign VideoOut_TUSER = send_output_U0_VideoOut_TUSER;

assign VideoOut_TVALID = send_output_U0_VideoOut_TVALID;

assign ap_done = send_output_U0_ap_done;

assign ap_idle = (send_output_U0_ap_idle & read_pixel_data_U0_ap_idle & pix_threshold_U0_ap_idle);

assign ap_ready = read_pixel_data_U0_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = send_output_U0_ap_done;

assign ap_sync_ready = read_pixel_data_U0_ap_ready;

assign pix_threshold_U0_ap_continue = 1'b1;

assign pix_threshold_U0_ap_start = start_for_pix_threshold_U0_empty_n;

assign read_pixel_data_U0_ap_continue = 1'b1;

assign read_pixel_data_U0_ap_start = ap_start;

assign send_output_U0_ap_continue = ap_continue;

assign send_output_U0_ap_start = start_for_send_output_U0_empty_n;

assign send_output_U0_start_full_n = 1'b1;

assign send_output_U0_start_write = 1'b0;

assign start_for_pix_threshold_U0_din = 1'b1;

assign start_for_send_output_U0_din = 1'b1;

endmodule //myproject
