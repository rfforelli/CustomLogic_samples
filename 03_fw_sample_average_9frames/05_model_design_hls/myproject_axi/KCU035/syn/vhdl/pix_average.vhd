-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pix_average is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    StreamIn_V_Data_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    StreamIn_V_Data_V_empty_n : IN STD_LOGIC;
    StreamIn_V_Data_V_read : OUT STD_LOGIC;
    StreamIn_V_User_V_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    StreamIn_V_User_V_empty_n : IN STD_LOGIC;
    StreamIn_V_User_V_read : OUT STD_LOGIC;
    StreamOut_V_Data_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    StreamOut_V_Data_V_full_n : IN STD_LOGIC;
    StreamOut_V_Data_V_write : OUT STD_LOGIC;
    StreamOut_V_User_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    StreamOut_V_User_V_full_n : IN STD_LOGIC;
    StreamOut_V_User_V_write : OUT STD_LOGIC );
end;


architecture behav of pix_average is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv14_2800 : STD_LOGIC_VECTOR (13 downto 0) := "10100000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv44_38E38F : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000001110001110001110001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal cntr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sum_V_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_ce0 : STD_LOGIC;
    signal sum_V_0_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_0_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_ce1 : STD_LOGIC;
    signal sum_V_0_we1 : STD_LOGIC;
    signal sum_V_0_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_ce0 : STD_LOGIC;
    signal sum_V_1_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_1_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_ce1 : STD_LOGIC;
    signal sum_V_1_we1 : STD_LOGIC;
    signal sum_V_1_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_ce0 : STD_LOGIC;
    signal sum_V_2_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_2_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_ce1 : STD_LOGIC;
    signal sum_V_2_we1 : STD_LOGIC;
    signal sum_V_2_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_ce0 : STD_LOGIC;
    signal sum_V_3_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_3_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_ce1 : STD_LOGIC;
    signal sum_V_3_we1 : STD_LOGIC;
    signal sum_V_3_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_4_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_ce0 : STD_LOGIC;
    signal sum_V_4_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_4_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_ce1 : STD_LOGIC;
    signal sum_V_4_we1 : STD_LOGIC;
    signal sum_V_4_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_5_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_ce0 : STD_LOGIC;
    signal sum_V_5_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_5_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_ce1 : STD_LOGIC;
    signal sum_V_5_we1 : STD_LOGIC;
    signal sum_V_5_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_6_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_ce0 : STD_LOGIC;
    signal sum_V_6_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_6_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_ce1 : STD_LOGIC;
    signal sum_V_6_we1 : STD_LOGIC;
    signal sum_V_6_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_7_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_ce0 : STD_LOGIC;
    signal sum_V_7_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_7_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_ce1 : STD_LOGIC;
    signal sum_V_7_we1 : STD_LOGIC;
    signal sum_V_7_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal StreamIn_V_Data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal StreamIn_V_User_V_blk_n : STD_LOGIC;
    signal StreamOut_V_Data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal tmp_s_reg_860 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_860_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal StreamOut_V_User_V_blk_n : STD_LOGIC;
    signal i_reg_388 : STD_LOGIC_VECTOR (13 downto 0);
    signal reg_399 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal StreamIn_V_Data_V0_status : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal StreamOut_V_Data_V1_status : STD_LOGIC;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_6_reg_851 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_855 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_403 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_407 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_411 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_415 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_419 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_423 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_427 : STD_LOGIC_VECTOR (20 downto 0);
    signal cntr_load_reg_846 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_6_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal tmp_s_reg_860_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_860_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_860_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_860_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_860_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_860_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_860_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_860_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_453_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal sum_V_0_addr_1_reg_869 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_1_reg_869_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_1_reg_869_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_1_reg_869_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_1_reg_875 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_1_reg_875_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_1_reg_875_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_1_reg_875_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_1_reg_881 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_1_reg_881_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_1_reg_881_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_1_reg_881_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_1_reg_887 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_1_reg_887_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_1_reg_887_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_1_reg_887_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_1_reg_893 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_1_reg_893_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_1_reg_893_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_1_reg_893_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_1_reg_899 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_1_reg_899_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_1_reg_899_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_1_reg_899_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_1_reg_905 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_1_reg_905_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_1_reg_905_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_1_reg_905_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_1_reg_911 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_1_reg_911_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_1_reg_911_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_1_reg_911_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_reg_917 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_reg_917_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_reg_917_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_0_addr_reg_917_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_reg_923 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_reg_923_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_reg_923_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_1_addr_reg_923_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_reg_929 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_reg_929_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_reg_929_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_2_addr_reg_929_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_reg_935 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_reg_935_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_reg_935_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_3_addr_reg_935_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_reg_941 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_reg_941_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_reg_941_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_4_addr_reg_941_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_reg_947 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_reg_947_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_reg_947_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_5_addr_reg_947_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_reg_953 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_reg_953_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_reg_953_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_6_addr_reg_953_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_reg_959 : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_reg_959_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_reg_959_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sum_V_7_addr_reg_959_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_Data_V_5_reg_965 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_Data_V_5_reg_965_pp0_iter3_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_Data_V_5_reg_965_pp0_iter4_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_Data_V_5_reg_965_pp0_iter5_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_Data_V_5_reg_965_pp0_iter6_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_Data_V_5_reg_965_pp0_iter7_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_Data_V_5_reg_965_pp0_iter8_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_User_V_reg_978 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_978_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_978_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_978_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_978_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_978_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_978_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_User_V_reg_978_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_7_fu_578_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_reg_1023 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_1_fu_597_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_1_reg_1028 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_2_fu_616_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_2_reg_1033 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_3_fu_635_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_3_reg_1038 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_4_fu_654_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_4_reg_1043 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_5_fu_673_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_5_reg_1048 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_6_fu_692_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_6_reg_1053 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_7_fu_711_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_7_7_reg_1058 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_V_0_trunc_reg_1063 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_1_trunc_reg_1068 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_2_trunc_reg_1073 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_3_trunc_reg_1078 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_4_trunc_reg_1083 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_5_trunc_reg_1088 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_6_trunc_reg_1093 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_7_trunc_reg_1098 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1103 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal i3_fu_459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i2_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal StreamIn_V_Data_V0_update : STD_LOGIC;
    signal StreamOut_V_Data_V1_update : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal storemerge_fu_827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_Data_V_fu_158 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_12_7_fu_797_p9 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_495_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_495_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_505_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_505_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_515_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_515_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_525_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_525_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_535_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_535_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_545_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_545_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_555_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_555_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_565_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_565_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_9_fu_571_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_fu_574_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_1_fu_584_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_1_fu_593_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_2_fu_603_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_2_fu_612_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_3_fu_622_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_3_fu_631_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_4_fu_641_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_4_fu_650_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_5_fu_660_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_5_fu_669_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_6_fu_679_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_6_fu_688_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_7_fu_698_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_7_fu_707_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_495_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_505_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_515_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_525_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_535_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_545_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_555_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_565_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_495_ce : STD_LOGIC;
    signal grp_fu_505_ce : STD_LOGIC;
    signal grp_fu_515_ce : STD_LOGIC;
    signal grp_fu_525_ce : STD_LOGIC;
    signal grp_fu_535_ce : STD_LOGIC;
    signal grp_fu_545_ce : STD_LOGIC;
    signal grp_fu_555_ce : STD_LOGIC;
    signal grp_fu_565_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_495_p00 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_505_p00 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_515_p00 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_525_p00 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_535_p00 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_545_p00 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_555_p00 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_565_p00 : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_condition_976 : BOOLEAN;

    component myproject_axi_mul_21ns_23ns_44_6_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (20 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component pix_average_sum_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (20 downto 0) );
    end component;



begin
    sum_V_0_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_0_address0,
        ce0 => sum_V_0_ce0,
        q0 => sum_V_0_q0,
        address1 => sum_V_0_address1,
        ce1 => sum_V_0_ce1,
        we1 => sum_V_0_we1,
        d1 => sum_V_0_d1);

    sum_V_1_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_1_address0,
        ce0 => sum_V_1_ce0,
        q0 => sum_V_1_q0,
        address1 => sum_V_1_address1,
        ce1 => sum_V_1_ce1,
        we1 => sum_V_1_we1,
        d1 => sum_V_1_d1);

    sum_V_2_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_2_address0,
        ce0 => sum_V_2_ce0,
        q0 => sum_V_2_q0,
        address1 => sum_V_2_address1,
        ce1 => sum_V_2_ce1,
        we1 => sum_V_2_we1,
        d1 => sum_V_2_d1);

    sum_V_3_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_3_address0,
        ce0 => sum_V_3_ce0,
        q0 => sum_V_3_q0,
        address1 => sum_V_3_address1,
        ce1 => sum_V_3_ce1,
        we1 => sum_V_3_we1,
        d1 => sum_V_3_d1);

    sum_V_4_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_4_address0,
        ce0 => sum_V_4_ce0,
        q0 => sum_V_4_q0,
        address1 => sum_V_4_address1,
        ce1 => sum_V_4_ce1,
        we1 => sum_V_4_we1,
        d1 => sum_V_4_d1);

    sum_V_5_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_5_address0,
        ce0 => sum_V_5_ce0,
        q0 => sum_V_5_q0,
        address1 => sum_V_5_address1,
        ce1 => sum_V_5_ce1,
        we1 => sum_V_5_we1,
        d1 => sum_V_5_d1);

    sum_V_6_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_6_address0,
        ce0 => sum_V_6_ce0,
        q0 => sum_V_6_q0,
        address1 => sum_V_6_address1,
        ce1 => sum_V_6_ce1,
        we1 => sum_V_6_we1,
        d1 => sum_V_6_d1);

    sum_V_7_U : component pix_average_sum_V_0
    generic map (
        DataWidth => 21,
        AddressRange => 10240,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_V_7_address0,
        ce0 => sum_V_7_ce0,
        q0 => sum_V_7_q0,
        address1 => sum_V_7_address1,
        ce1 => sum_V_7_ce1,
        we1 => sum_V_7_we1,
        d1 => sum_V_7_d1);

    myproject_axi_mul_21ns_23ns_44_6_1_U5 : component myproject_axi_mul_21ns_23ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 21,
        din1_WIDTH => 23,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_495_p0,
        din1 => grp_fu_495_p1,
        ce => grp_fu_495_ce,
        dout => grp_fu_495_p2);

    myproject_axi_mul_21ns_23ns_44_6_1_U6 : component myproject_axi_mul_21ns_23ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 21,
        din1_WIDTH => 23,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_505_p0,
        din1 => grp_fu_505_p1,
        ce => grp_fu_505_ce,
        dout => grp_fu_505_p2);

    myproject_axi_mul_21ns_23ns_44_6_1_U7 : component myproject_axi_mul_21ns_23ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 21,
        din1_WIDTH => 23,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_515_p0,
        din1 => grp_fu_515_p1,
        ce => grp_fu_515_ce,
        dout => grp_fu_515_p2);

    myproject_axi_mul_21ns_23ns_44_6_1_U8 : component myproject_axi_mul_21ns_23ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 21,
        din1_WIDTH => 23,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_525_p0,
        din1 => grp_fu_525_p1,
        ce => grp_fu_525_ce,
        dout => grp_fu_525_p2);

    myproject_axi_mul_21ns_23ns_44_6_1_U9 : component myproject_axi_mul_21ns_23ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 21,
        din1_WIDTH => 23,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_535_p0,
        din1 => grp_fu_535_p1,
        ce => grp_fu_535_ce,
        dout => grp_fu_535_p2);

    myproject_axi_mul_21ns_23ns_44_6_1_U10 : component myproject_axi_mul_21ns_23ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 21,
        din1_WIDTH => 23,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_545_p0,
        din1 => grp_fu_545_p1,
        ce => grp_fu_545_ce,
        dout => grp_fu_545_p2);

    myproject_axi_mul_21ns_23ns_44_6_1_U11 : component myproject_axi_mul_21ns_23ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 21,
        din1_WIDTH => 23,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_555_p0,
        din1 => grp_fu_555_p1,
        ce => grp_fu_555_ce,
        dout => grp_fu_555_p2);

    myproject_axi_mul_21ns_23ns_44_6_1_U12 : component myproject_axi_mul_21ns_23ns_44_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 21,
        din1_WIDTH => 23,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_565_p0,
        din1 => grp_fu_565_p1,
        ce => grp_fu_565_ce,
        dout => grp_fu_565_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0))) then 
                i_reg_388 <= i_2_fu_453_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_388 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    tmp_Data_V_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                    tmp_Data_V_fu_158 <= tmp_Data_V_5_reg_965_pp0_iter8_reg;
                elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                    tmp_Data_V_fu_158 <= p_Result_12_7_fu_797_p9;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                cntr <= storemerge_fu_827_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cntr_load_reg_846 <= cntr;
                tmp_6_reg_851 <= tmp_6_fu_435_p2;
                tmp_8_reg_855 <= tmp_8_fu_441_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then
                reg_399 <= sum_V_0_q0;
                reg_403 <= sum_V_1_q0;
                reg_407 <= sum_V_2_q0;
                reg_411 <= sum_V_3_q0;
                reg_415 <= sum_V_4_q0;
                reg_419 <= sum_V_5_q0;
                reg_423 <= sum_V_6_q0;
                reg_427 <= sum_V_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ret_V_7_1_reg_1028 <= ret_V_7_1_fu_597_p2;
                ret_V_7_2_reg_1033 <= ret_V_7_2_fu_616_p2;
                ret_V_7_3_reg_1038 <= ret_V_7_3_fu_635_p2;
                ret_V_7_4_reg_1043 <= ret_V_7_4_fu_654_p2;
                ret_V_7_5_reg_1048 <= ret_V_7_5_fu_673_p2;
                ret_V_7_6_reg_1053 <= ret_V_7_6_fu_692_p2;
                ret_V_7_7_reg_1058 <= ret_V_7_7_fu_711_p2;
                ret_V_7_reg_1023 <= ret_V_7_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0) and (tmp_6_reg_851 = ap_const_lv1_0))) then
                sum_V_0_addr_1_reg_869 <= i3_fu_459_p1(14 - 1 downto 0);
                sum_V_1_addr_1_reg_875 <= i3_fu_459_p1(14 - 1 downto 0);
                sum_V_2_addr_1_reg_881 <= i3_fu_459_p1(14 - 1 downto 0);
                sum_V_3_addr_1_reg_887 <= i3_fu_459_p1(14 - 1 downto 0);
                sum_V_4_addr_1_reg_893 <= i3_fu_459_p1(14 - 1 downto 0);
                sum_V_5_addr_1_reg_899 <= i3_fu_459_p1(14 - 1 downto 0);
                sum_V_6_addr_1_reg_905 <= i3_fu_459_p1(14 - 1 downto 0);
                sum_V_7_addr_1_reg_911 <= i3_fu_459_p1(14 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_0_addr_1_reg_869_pp0_iter1_reg <= sum_V_0_addr_1_reg_869;
                sum_V_0_addr_reg_917_pp0_iter1_reg <= sum_V_0_addr_reg_917;
                sum_V_1_addr_1_reg_875_pp0_iter1_reg <= sum_V_1_addr_1_reg_875;
                sum_V_1_addr_reg_923_pp0_iter1_reg <= sum_V_1_addr_reg_923;
                sum_V_2_addr_1_reg_881_pp0_iter1_reg <= sum_V_2_addr_1_reg_881;
                sum_V_2_addr_reg_929_pp0_iter1_reg <= sum_V_2_addr_reg_929;
                sum_V_3_addr_1_reg_887_pp0_iter1_reg <= sum_V_3_addr_1_reg_887;
                sum_V_3_addr_reg_935_pp0_iter1_reg <= sum_V_3_addr_reg_935;
                sum_V_4_addr_1_reg_893_pp0_iter1_reg <= sum_V_4_addr_1_reg_893;
                sum_V_4_addr_reg_941_pp0_iter1_reg <= sum_V_4_addr_reg_941;
                sum_V_5_addr_1_reg_899_pp0_iter1_reg <= sum_V_5_addr_1_reg_899;
                sum_V_5_addr_reg_947_pp0_iter1_reg <= sum_V_5_addr_reg_947;
                sum_V_6_addr_1_reg_905_pp0_iter1_reg <= sum_V_6_addr_1_reg_905;
                sum_V_6_addr_reg_953_pp0_iter1_reg <= sum_V_6_addr_reg_953;
                sum_V_7_addr_1_reg_911_pp0_iter1_reg <= sum_V_7_addr_1_reg_911;
                sum_V_7_addr_reg_959_pp0_iter1_reg <= sum_V_7_addr_reg_959;
                tmp_s_reg_860 <= tmp_s_fu_447_p2;
                tmp_s_reg_860_pp0_iter1_reg <= tmp_s_reg_860;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                sum_V_0_addr_1_reg_869_pp0_iter2_reg <= sum_V_0_addr_1_reg_869_pp0_iter1_reg;
                sum_V_0_addr_1_reg_869_pp0_iter3_reg <= sum_V_0_addr_1_reg_869_pp0_iter2_reg;
                sum_V_0_addr_reg_917_pp0_iter2_reg <= sum_V_0_addr_reg_917_pp0_iter1_reg;
                sum_V_0_addr_reg_917_pp0_iter3_reg <= sum_V_0_addr_reg_917_pp0_iter2_reg;
                sum_V_1_addr_1_reg_875_pp0_iter2_reg <= sum_V_1_addr_1_reg_875_pp0_iter1_reg;
                sum_V_1_addr_1_reg_875_pp0_iter3_reg <= sum_V_1_addr_1_reg_875_pp0_iter2_reg;
                sum_V_1_addr_reg_923_pp0_iter2_reg <= sum_V_1_addr_reg_923_pp0_iter1_reg;
                sum_V_1_addr_reg_923_pp0_iter3_reg <= sum_V_1_addr_reg_923_pp0_iter2_reg;
                sum_V_2_addr_1_reg_881_pp0_iter2_reg <= sum_V_2_addr_1_reg_881_pp0_iter1_reg;
                sum_V_2_addr_1_reg_881_pp0_iter3_reg <= sum_V_2_addr_1_reg_881_pp0_iter2_reg;
                sum_V_2_addr_reg_929_pp0_iter2_reg <= sum_V_2_addr_reg_929_pp0_iter1_reg;
                sum_V_2_addr_reg_929_pp0_iter3_reg <= sum_V_2_addr_reg_929_pp0_iter2_reg;
                sum_V_3_addr_1_reg_887_pp0_iter2_reg <= sum_V_3_addr_1_reg_887_pp0_iter1_reg;
                sum_V_3_addr_1_reg_887_pp0_iter3_reg <= sum_V_3_addr_1_reg_887_pp0_iter2_reg;
                sum_V_3_addr_reg_935_pp0_iter2_reg <= sum_V_3_addr_reg_935_pp0_iter1_reg;
                sum_V_3_addr_reg_935_pp0_iter3_reg <= sum_V_3_addr_reg_935_pp0_iter2_reg;
                sum_V_4_addr_1_reg_893_pp0_iter2_reg <= sum_V_4_addr_1_reg_893_pp0_iter1_reg;
                sum_V_4_addr_1_reg_893_pp0_iter3_reg <= sum_V_4_addr_1_reg_893_pp0_iter2_reg;
                sum_V_4_addr_reg_941_pp0_iter2_reg <= sum_V_4_addr_reg_941_pp0_iter1_reg;
                sum_V_4_addr_reg_941_pp0_iter3_reg <= sum_V_4_addr_reg_941_pp0_iter2_reg;
                sum_V_5_addr_1_reg_899_pp0_iter2_reg <= sum_V_5_addr_1_reg_899_pp0_iter1_reg;
                sum_V_5_addr_1_reg_899_pp0_iter3_reg <= sum_V_5_addr_1_reg_899_pp0_iter2_reg;
                sum_V_5_addr_reg_947_pp0_iter2_reg <= sum_V_5_addr_reg_947_pp0_iter1_reg;
                sum_V_5_addr_reg_947_pp0_iter3_reg <= sum_V_5_addr_reg_947_pp0_iter2_reg;
                sum_V_6_addr_1_reg_905_pp0_iter2_reg <= sum_V_6_addr_1_reg_905_pp0_iter1_reg;
                sum_V_6_addr_1_reg_905_pp0_iter3_reg <= sum_V_6_addr_1_reg_905_pp0_iter2_reg;
                sum_V_6_addr_reg_953_pp0_iter2_reg <= sum_V_6_addr_reg_953_pp0_iter1_reg;
                sum_V_6_addr_reg_953_pp0_iter3_reg <= sum_V_6_addr_reg_953_pp0_iter2_reg;
                sum_V_7_addr_1_reg_911_pp0_iter2_reg <= sum_V_7_addr_1_reg_911_pp0_iter1_reg;
                sum_V_7_addr_1_reg_911_pp0_iter3_reg <= sum_V_7_addr_1_reg_911_pp0_iter2_reg;
                sum_V_7_addr_reg_959_pp0_iter2_reg <= sum_V_7_addr_reg_959_pp0_iter1_reg;
                sum_V_7_addr_reg_959_pp0_iter3_reg <= sum_V_7_addr_reg_959_pp0_iter2_reg;
                tmp_Data_V_5_reg_965 <= StreamIn_V_Data_V_dout;
                tmp_Data_V_5_reg_965_pp0_iter3_reg <= tmp_Data_V_5_reg_965;
                tmp_Data_V_5_reg_965_pp0_iter4_reg <= tmp_Data_V_5_reg_965_pp0_iter3_reg;
                tmp_Data_V_5_reg_965_pp0_iter5_reg <= tmp_Data_V_5_reg_965_pp0_iter4_reg;
                tmp_Data_V_5_reg_965_pp0_iter6_reg <= tmp_Data_V_5_reg_965_pp0_iter5_reg;
                tmp_Data_V_5_reg_965_pp0_iter7_reg <= tmp_Data_V_5_reg_965_pp0_iter6_reg;
                tmp_Data_V_5_reg_965_pp0_iter8_reg <= tmp_Data_V_5_reg_965_pp0_iter7_reg;
                tmp_User_V_reg_978 <= StreamIn_V_User_V_dout;
                tmp_User_V_reg_978_pp0_iter3_reg <= tmp_User_V_reg_978;
                tmp_User_V_reg_978_pp0_iter4_reg <= tmp_User_V_reg_978_pp0_iter3_reg;
                tmp_User_V_reg_978_pp0_iter5_reg <= tmp_User_V_reg_978_pp0_iter4_reg;
                tmp_User_V_reg_978_pp0_iter6_reg <= tmp_User_V_reg_978_pp0_iter5_reg;
                tmp_User_V_reg_978_pp0_iter7_reg <= tmp_User_V_reg_978_pp0_iter6_reg;
                tmp_User_V_reg_978_pp0_iter8_reg <= tmp_User_V_reg_978_pp0_iter7_reg;
                tmp_User_V_reg_978_pp0_iter9_reg <= tmp_User_V_reg_978_pp0_iter8_reg;
                tmp_s_reg_860_pp0_iter2_reg <= tmp_s_reg_860_pp0_iter1_reg;
                tmp_s_reg_860_pp0_iter3_reg <= tmp_s_reg_860_pp0_iter2_reg;
                tmp_s_reg_860_pp0_iter4_reg <= tmp_s_reg_860_pp0_iter3_reg;
                tmp_s_reg_860_pp0_iter5_reg <= tmp_s_reg_860_pp0_iter4_reg;
                tmp_s_reg_860_pp0_iter6_reg <= tmp_s_reg_860_pp0_iter5_reg;
                tmp_s_reg_860_pp0_iter7_reg <= tmp_s_reg_860_pp0_iter6_reg;
                tmp_s_reg_860_pp0_iter8_reg <= tmp_s_reg_860_pp0_iter7_reg;
                tmp_s_reg_860_pp0_iter9_reg <= tmp_s_reg_860_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0))) then
                sum_V_0_addr_reg_917 <= i2_fu_471_p1(14 - 1 downto 0);
                sum_V_1_addr_reg_923 <= i2_fu_471_p1(14 - 1 downto 0);
                sum_V_2_addr_reg_929 <= i2_fu_471_p1(14 - 1 downto 0);
                sum_V_3_addr_reg_935 <= i2_fu_471_p1(14 - 1 downto 0);
                sum_V_4_addr_reg_941 <= i2_fu_471_p1(14 - 1 downto 0);
                sum_V_5_addr_reg_947 <= i2_fu_471_p1(14 - 1 downto 0);
                sum_V_6_addr_reg_953 <= i2_fu_471_p1(14 - 1 downto 0);
                sum_V_7_addr_reg_959 <= i2_fu_471_p1(14 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_8_reg_855 = ap_const_lv1_0))) then
                tmp_5_reg_1103 <= tmp_5_fu_822_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0))) then
                tmp_V_0_trunc_reg_1063 <= grp_fu_495_p2(40 downto 25);
                tmp_V_1_trunc_reg_1068 <= grp_fu_505_p2(40 downto 25);
                tmp_V_2_trunc_reg_1073 <= grp_fu_515_p2(40 downto 25);
                tmp_V_3_trunc_reg_1078 <= grp_fu_525_p2(40 downto 25);
                tmp_V_4_trunc_reg_1083 <= grp_fu_535_p2(40 downto 25);
                tmp_V_5_trunc_reg_1088 <= grp_fu_545_p2(40 downto 25);
                tmp_V_6_trunc_reg_1093 <= grp_fu_555_p2(40 downto 25);
                tmp_V_7_trunc_reg_1098 <= grp_fu_565_p2(40 downto 25);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter10, tmp_s_fu_447_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_s_fu_447_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_s_fu_447_p2 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    StreamIn_V_Data_V0_status <= (StreamIn_V_User_V_empty_n and StreamIn_V_Data_V_empty_n);

    StreamIn_V_Data_V0_update_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            StreamIn_V_Data_V0_update <= ap_const_logic_1;
        else 
            StreamIn_V_Data_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    StreamIn_V_Data_V_blk_n_assign_proc : process(StreamIn_V_Data_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamIn_V_Data_V_blk_n <= StreamIn_V_Data_V_empty_n;
        else 
            StreamIn_V_Data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamIn_V_Data_V_read <= StreamIn_V_Data_V0_update;

    StreamIn_V_User_V_blk_n_assign_proc : process(StreamIn_V_User_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamIn_V_User_V_blk_n <= StreamIn_V_User_V_empty_n;
        else 
            StreamIn_V_User_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamIn_V_User_V_read <= StreamIn_V_Data_V0_update;
    StreamOut_V_Data_V1_status <= (StreamOut_V_User_V_full_n and StreamOut_V_Data_V_full_n);

    StreamOut_V_Data_V1_update_assign_proc : process(ap_enable_reg_pp0_iter10, tmp_s_reg_860_pp0_iter9_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_reg_860_pp0_iter9_reg = ap_const_lv1_0))) then 
            StreamOut_V_Data_V1_update <= ap_const_logic_1;
        else 
            StreamOut_V_Data_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    StreamOut_V_Data_V_blk_n_assign_proc : process(StreamOut_V_Data_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter10, tmp_s_reg_860_pp0_iter9_reg)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (tmp_s_reg_860_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamOut_V_Data_V_blk_n <= StreamOut_V_Data_V_full_n;
        else 
            StreamOut_V_Data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamOut_V_Data_V_din <= tmp_Data_V_fu_158;
    StreamOut_V_Data_V_write <= StreamOut_V_Data_V1_update;

    StreamOut_V_User_V_blk_n_assign_proc : process(StreamOut_V_User_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter10, tmp_s_reg_860_pp0_iter9_reg)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (tmp_s_reg_860_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            StreamOut_V_User_V_blk_n <= StreamOut_V_User_V_full_n;
        else 
            StreamOut_V_User_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    StreamOut_V_User_V_din <= tmp_User_V_reg_978_pp0_iter9_reg;
    StreamOut_V_User_V_write <= StreamOut_V_Data_V1_update;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(2);
    ap_CS_fsm_state14 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, tmp_s_reg_860_pp0_iter9_reg, StreamIn_V_Data_V0_status, StreamOut_V_Data_V1_status)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_logic_0 = StreamOut_V_Data_V1_status) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (tmp_s_reg_860_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = StreamIn_V_Data_V0_status) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, tmp_s_reg_860_pp0_iter9_reg, StreamIn_V_Data_V0_status, StreamOut_V_Data_V1_status)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_logic_0 = StreamOut_V_Data_V1_status) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (tmp_s_reg_860_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = StreamIn_V_Data_V0_status) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, tmp_s_reg_860_pp0_iter9_reg, StreamIn_V_Data_V0_status, StreamOut_V_Data_V1_status)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_logic_0 = StreamOut_V_Data_V1_status) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (tmp_s_reg_860_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_logic_0 = StreamIn_V_Data_V0_status) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp0_stage0_iter10_assign_proc : process(tmp_s_reg_860_pp0_iter9_reg, StreamOut_V_Data_V1_status)
    begin
                ap_block_state12_pp0_stage0_iter10 <= ((ap_const_logic_0 = StreamOut_V_Data_V1_status) and (tmp_s_reg_860_pp0_iter9_reg = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(StreamIn_V_Data_V0_status)
    begin
                ap_block_state4_pp0_stage0_iter2 <= (ap_const_logic_0 = StreamIn_V_Data_V0_status);
    end process;

        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_976_assign_proc : process(ap_block_pp0_stage0, tmp_s_fu_447_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_976 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_s_fu_447_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_s_fu_447_p2)
    begin
        if ((tmp_s_fu_447_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    grp_fu_495_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_495_ce <= ap_const_logic_1;
        else 
            grp_fu_495_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_495_p0 <= grp_fu_495_p00(21 - 1 downto 0);
    grp_fu_495_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_399),44));
    grp_fu_495_p1 <= ap_const_lv44_38E38F(23 - 1 downto 0);

    grp_fu_505_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_505_ce <= ap_const_logic_1;
        else 
            grp_fu_505_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_505_p0 <= grp_fu_505_p00(21 - 1 downto 0);
    grp_fu_505_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_403),44));
    grp_fu_505_p1 <= ap_const_lv44_38E38F(23 - 1 downto 0);

    grp_fu_515_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_515_ce <= ap_const_logic_1;
        else 
            grp_fu_515_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_515_p0 <= grp_fu_515_p00(21 - 1 downto 0);
    grp_fu_515_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_407),44));
    grp_fu_515_p1 <= ap_const_lv44_38E38F(23 - 1 downto 0);

    grp_fu_525_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_525_ce <= ap_const_logic_1;
        else 
            grp_fu_525_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_525_p0 <= grp_fu_525_p00(21 - 1 downto 0);
    grp_fu_525_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_411),44));
    grp_fu_525_p1 <= ap_const_lv44_38E38F(23 - 1 downto 0);

    grp_fu_535_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_535_ce <= ap_const_logic_1;
        else 
            grp_fu_535_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_535_p0 <= grp_fu_535_p00(21 - 1 downto 0);
    grp_fu_535_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_415),44));
    grp_fu_535_p1 <= ap_const_lv44_38E38F(23 - 1 downto 0);

    grp_fu_545_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_545_ce <= ap_const_logic_1;
        else 
            grp_fu_545_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_545_p0 <= grp_fu_545_p00(21 - 1 downto 0);
    grp_fu_545_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_419),44));
    grp_fu_545_p1 <= ap_const_lv44_38E38F(23 - 1 downto 0);

    grp_fu_555_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_555_ce <= ap_const_logic_1;
        else 
            grp_fu_555_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_555_p0 <= grp_fu_555_p00(21 - 1 downto 0);
    grp_fu_555_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_423),44));
    grp_fu_555_p1 <= ap_const_lv44_38E38F(23 - 1 downto 0);

    grp_fu_565_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_565_ce <= ap_const_logic_1;
        else 
            grp_fu_565_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_565_p0 <= grp_fu_565_p00(21 - 1 downto 0);
    grp_fu_565_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_427),44));
    grp_fu_565_p1 <= ap_const_lv44_38E38F(23 - 1 downto 0);
    i2_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_388),64));
    i3_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_388),64));
    i_2_fu_453_p2 <= std_logic_vector(unsigned(i_reg_388) + unsigned(ap_const_lv14_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_12_7_fu_797_p9 <= (((((((tmp_V_7_trunc_reg_1098 & tmp_V_6_trunc_reg_1093) & tmp_V_5_trunc_reg_1088) & tmp_V_4_trunc_reg_1083) & tmp_V_3_trunc_reg_1078) & tmp_V_2_trunc_reg_1073) & tmp_V_1_trunc_reg_1068) & tmp_V_0_trunc_reg_1063);
    p_Result_1_fu_584_p4 <= tmp_Data_V_5_reg_965(31 downto 16);
    p_Result_2_fu_603_p4 <= tmp_Data_V_5_reg_965(47 downto 32);
    p_Result_3_fu_622_p4 <= tmp_Data_V_5_reg_965(63 downto 48);
    p_Result_4_fu_641_p4 <= tmp_Data_V_5_reg_965(79 downto 64);
    p_Result_5_fu_660_p4 <= tmp_Data_V_5_reg_965(95 downto 80);
    p_Result_6_fu_679_p4 <= tmp_Data_V_5_reg_965(111 downto 96);
    p_Result_7_fu_698_p4 <= tmp_Data_V_5_reg_965(127 downto 112);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_7_1_fu_597_p2 <= std_logic_vector(unsigned(rhs_V_1_fu_593_p1) + unsigned(reg_403));
    ret_V_7_2_fu_616_p2 <= std_logic_vector(unsigned(rhs_V_2_fu_612_p1) + unsigned(reg_407));
    ret_V_7_3_fu_635_p2 <= std_logic_vector(unsigned(rhs_V_3_fu_631_p1) + unsigned(reg_411));
    ret_V_7_4_fu_654_p2 <= std_logic_vector(unsigned(rhs_V_4_fu_650_p1) + unsigned(reg_415));
    ret_V_7_5_fu_673_p2 <= std_logic_vector(unsigned(rhs_V_5_fu_669_p1) + unsigned(reg_419));
    ret_V_7_6_fu_692_p2 <= std_logic_vector(unsigned(rhs_V_6_fu_688_p1) + unsigned(reg_423));
    ret_V_7_7_fu_711_p2 <= std_logic_vector(unsigned(rhs_V_7_fu_707_p1) + unsigned(reg_427));
    ret_V_7_fu_578_p2 <= std_logic_vector(unsigned(rhs_V_fu_574_p1) + unsigned(reg_399));
    rhs_V_1_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_584_p4),21));
    rhs_V_2_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_fu_603_p4),21));
    rhs_V_3_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_3_fu_622_p4),21));
    rhs_V_4_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_fu_641_p4),21));
    rhs_V_5_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_5_fu_660_p4),21));
    rhs_V_6_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_6_fu_679_p4),21));
    rhs_V_7_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_7_fu_698_p4),21));
    rhs_V_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_571_p1),21));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    storemerge_fu_827_p3 <= 
        ap_const_lv32_0 when (tmp_8_reg_855(0) = '1') else 
        tmp_5_reg_1103;

    sum_V_0_address0_assign_proc : process(tmp_6_reg_851, tmp_8_reg_855, i3_fu_459_p1, i2_fu_471_p1, ap_condition_976)
    begin
        if ((ap_const_boolean_1 = ap_condition_976)) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_0_address0 <= i2_fu_471_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_0_address0 <= i3_fu_459_p1(14 - 1 downto 0);
            else 
                sum_V_0_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_0_address1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, sum_V_0_addr_1_reg_869_pp0_iter3_reg, sum_V_0_addr_reg_917_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_0_address1 <= sum_V_0_addr_reg_917_pp0_iter3_reg;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_0_address1 <= sum_V_0_addr_1_reg_869_pp0_iter3_reg;
            else 
                sum_V_0_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_0_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, tmp_s_fu_447_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0) and (tmp_6_reg_851 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_0_ce0 <= ap_const_logic_1;
        else 
            sum_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_0_ce1 <= ap_const_logic_1;
        else 
            sum_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_0_d1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, ret_V_7_reg_1023, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_0_d1 <= ret_V_7_reg_1023;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_0_d1 <= ap_const_lv21_0;
            else 
                sum_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_0_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_0_we1 <= ap_const_logic_1;
        else 
            sum_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_1_address0_assign_proc : process(tmp_6_reg_851, tmp_8_reg_855, i3_fu_459_p1, i2_fu_471_p1, ap_condition_976)
    begin
        if ((ap_const_boolean_1 = ap_condition_976)) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_1_address0 <= i2_fu_471_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_1_address0 <= i3_fu_459_p1(14 - 1 downto 0);
            else 
                sum_V_1_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_1_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_1_address1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, sum_V_1_addr_1_reg_875_pp0_iter3_reg, sum_V_1_addr_reg_923_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_1_address1 <= sum_V_1_addr_reg_923_pp0_iter3_reg;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_1_address1 <= sum_V_1_addr_1_reg_875_pp0_iter3_reg;
            else 
                sum_V_1_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_1_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, tmp_s_fu_447_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0) and (tmp_6_reg_851 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_1_ce0 <= ap_const_logic_1;
        else 
            sum_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_1_ce1 <= ap_const_logic_1;
        else 
            sum_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_1_d1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, ret_V_7_1_reg_1028, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_1_d1 <= ret_V_7_1_reg_1028;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_1_d1 <= ap_const_lv21_0;
            else 
                sum_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_1_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_1_we1 <= ap_const_logic_1;
        else 
            sum_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_2_address0_assign_proc : process(tmp_6_reg_851, tmp_8_reg_855, i3_fu_459_p1, i2_fu_471_p1, ap_condition_976)
    begin
        if ((ap_const_boolean_1 = ap_condition_976)) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_2_address0 <= i2_fu_471_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_2_address0 <= i3_fu_459_p1(14 - 1 downto 0);
            else 
                sum_V_2_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_2_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_2_address1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, sum_V_2_addr_1_reg_881_pp0_iter3_reg, sum_V_2_addr_reg_929_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_2_address1 <= sum_V_2_addr_reg_929_pp0_iter3_reg;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_2_address1 <= sum_V_2_addr_1_reg_881_pp0_iter3_reg;
            else 
                sum_V_2_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_2_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, tmp_s_fu_447_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0) and (tmp_6_reg_851 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_2_ce0 <= ap_const_logic_1;
        else 
            sum_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_2_ce1 <= ap_const_logic_1;
        else 
            sum_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_2_d1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, ret_V_7_2_reg_1033, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_2_d1 <= ret_V_7_2_reg_1033;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_2_d1 <= ap_const_lv21_0;
            else 
                sum_V_2_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_2_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_2_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_2_we1 <= ap_const_logic_1;
        else 
            sum_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_3_address0_assign_proc : process(tmp_6_reg_851, tmp_8_reg_855, i3_fu_459_p1, i2_fu_471_p1, ap_condition_976)
    begin
        if ((ap_const_boolean_1 = ap_condition_976)) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_3_address0 <= i2_fu_471_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_3_address0 <= i3_fu_459_p1(14 - 1 downto 0);
            else 
                sum_V_3_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_3_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_3_address1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, sum_V_3_addr_1_reg_887_pp0_iter3_reg, sum_V_3_addr_reg_935_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_3_address1 <= sum_V_3_addr_reg_935_pp0_iter3_reg;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_3_address1 <= sum_V_3_addr_1_reg_887_pp0_iter3_reg;
            else 
                sum_V_3_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_3_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, tmp_s_fu_447_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0) and (tmp_6_reg_851 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_3_ce0 <= ap_const_logic_1;
        else 
            sum_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_3_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_3_ce1 <= ap_const_logic_1;
        else 
            sum_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_3_d1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, ret_V_7_3_reg_1038, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_3_d1 <= ret_V_7_3_reg_1038;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_3_d1 <= ap_const_lv21_0;
            else 
                sum_V_3_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_3_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_3_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_3_we1 <= ap_const_logic_1;
        else 
            sum_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_4_address0_assign_proc : process(tmp_6_reg_851, tmp_8_reg_855, i3_fu_459_p1, i2_fu_471_p1, ap_condition_976)
    begin
        if ((ap_const_boolean_1 = ap_condition_976)) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_4_address0 <= i2_fu_471_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_4_address0 <= i3_fu_459_p1(14 - 1 downto 0);
            else 
                sum_V_4_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_4_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_4_address1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, sum_V_4_addr_1_reg_893_pp0_iter3_reg, sum_V_4_addr_reg_941_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_4_address1 <= sum_V_4_addr_reg_941_pp0_iter3_reg;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_4_address1 <= sum_V_4_addr_1_reg_893_pp0_iter3_reg;
            else 
                sum_V_4_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_4_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, tmp_s_fu_447_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0) and (tmp_6_reg_851 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_4_ce0 <= ap_const_logic_1;
        else 
            sum_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_4_ce1 <= ap_const_logic_1;
        else 
            sum_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_4_d1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, ret_V_7_4_reg_1043, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_4_d1 <= ret_V_7_4_reg_1043;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_4_d1 <= ap_const_lv21_0;
            else 
                sum_V_4_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_4_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_4_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_4_we1 <= ap_const_logic_1;
        else 
            sum_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_5_address0_assign_proc : process(tmp_6_reg_851, tmp_8_reg_855, i3_fu_459_p1, i2_fu_471_p1, ap_condition_976)
    begin
        if ((ap_const_boolean_1 = ap_condition_976)) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_5_address0 <= i2_fu_471_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_5_address0 <= i3_fu_459_p1(14 - 1 downto 0);
            else 
                sum_V_5_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_5_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_5_address1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, sum_V_5_addr_1_reg_899_pp0_iter3_reg, sum_V_5_addr_reg_947_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_5_address1 <= sum_V_5_addr_reg_947_pp0_iter3_reg;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_5_address1 <= sum_V_5_addr_1_reg_899_pp0_iter3_reg;
            else 
                sum_V_5_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_5_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, tmp_s_fu_447_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0) and (tmp_6_reg_851 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_5_ce0 <= ap_const_logic_1;
        else 
            sum_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_5_ce1 <= ap_const_logic_1;
        else 
            sum_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_5_d1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, ret_V_7_5_reg_1048, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_5_d1 <= ret_V_7_5_reg_1048;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_5_d1 <= ap_const_lv21_0;
            else 
                sum_V_5_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_5_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_5_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_5_we1 <= ap_const_logic_1;
        else 
            sum_V_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_6_address0_assign_proc : process(tmp_6_reg_851, tmp_8_reg_855, i3_fu_459_p1, i2_fu_471_p1, ap_condition_976)
    begin
        if ((ap_const_boolean_1 = ap_condition_976)) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_6_address0 <= i2_fu_471_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_6_address0 <= i3_fu_459_p1(14 - 1 downto 0);
            else 
                sum_V_6_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_6_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_6_address1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, sum_V_6_addr_1_reg_905_pp0_iter3_reg, sum_V_6_addr_reg_953_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_6_address1 <= sum_V_6_addr_reg_953_pp0_iter3_reg;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_6_address1 <= sum_V_6_addr_1_reg_905_pp0_iter3_reg;
            else 
                sum_V_6_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_6_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, tmp_s_fu_447_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0) and (tmp_6_reg_851 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_6_ce0 <= ap_const_logic_1;
        else 
            sum_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_6_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_6_ce1 <= ap_const_logic_1;
        else 
            sum_V_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_6_d1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, ret_V_7_6_reg_1053, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_6_d1 <= ret_V_7_6_reg_1053;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_6_d1 <= ap_const_lv21_0;
            else 
                sum_V_6_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_6_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_6_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_6_we1 <= ap_const_logic_1;
        else 
            sum_V_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_7_address0_assign_proc : process(tmp_6_reg_851, tmp_8_reg_855, i3_fu_459_p1, i2_fu_471_p1, ap_condition_976)
    begin
        if ((ap_const_boolean_1 = ap_condition_976)) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_7_address0 <= i2_fu_471_p1(14 - 1 downto 0);
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_7_address0 <= i3_fu_459_p1(14 - 1 downto 0);
            else 
                sum_V_7_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_7_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_7_address1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, sum_V_7_addr_1_reg_911_pp0_iter3_reg, sum_V_7_addr_reg_959_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_7_address1 <= sum_V_7_addr_reg_959_pp0_iter3_reg;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_7_address1 <= sum_V_7_addr_1_reg_911_pp0_iter3_reg;
            else 
                sum_V_7_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_7_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, tmp_s_fu_447_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_447_p2 = ap_const_lv1_0) and (tmp_6_reg_851 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sum_V_7_ce0 <= ap_const_logic_1;
        else 
            sum_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_7_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_7_ce1 <= ap_const_logic_1;
        else 
            sum_V_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_7_d1_assign_proc : process(ap_block_pp0_stage0, tmp_6_reg_851, tmp_8_reg_855, ret_V_7_7_reg_1058, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_6_reg_851 = ap_const_lv1_1)) then 
                sum_V_7_d1 <= ret_V_7_7_reg_1058;
            elsif (((tmp_8_reg_855 = ap_const_lv1_1) and (tmp_6_reg_851 = ap_const_lv1_0))) then 
                sum_V_7_d1 <= ap_const_lv21_0;
            else 
                sum_V_7_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            sum_V_7_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sum_V_7_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_6_reg_851, tmp_8_reg_855, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_6_reg_851 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_8_reg_855 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_6_reg_851 = ap_const_lv1_0)))) then 
            sum_V_7_we1 <= ap_const_logic_1;
        else 
            sum_V_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_5_fu_822_p2 <= std_logic_vector(unsigned(cntr_load_reg_846) + unsigned(ap_const_lv32_1));
    tmp_6_fu_435_p2 <= "1" when (unsigned(cntr) < unsigned(ap_const_lv32_9)) else "0";
    tmp_8_fu_441_p2 <= "1" when (cntr = ap_const_lv32_9) else "0";
    tmp_9_fu_571_p1 <= tmp_Data_V_5_reg_965(16 - 1 downto 0);
    tmp_s_fu_447_p2 <= "1" when (i_reg_388 = ap_const_lv14_2800) else "0";
end behav;
